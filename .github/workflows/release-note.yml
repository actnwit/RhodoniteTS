name: Build

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2
        with:
          # Fetches entire history, so we can analyze commits since last tag
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - name: Install
        run: npm ci
      # - name: Check
        # run: npm run prettier-check
      # - name: Build
      #   run: npm run publish
      # - name: Test Fetching Artifact
      #   run: |
      #     GITHUB_ACTION_REPOSITORY=Fresa/release-notes-generator \
      #     GITHUB_ACTION_REF=vTEST \
      #     node fetch_artifact.js
      # - name: Assert Artifact Downloaded
      #   run: ls -d $GITHUB_WORKSPACE/dist/index.js
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          configFilePath: .github/release_config/version_config.yml
      - name: Determine Release Info
        id: release
        run: |
          from_tag=$(git tag --points-at ${{ steps.gitversion.outputs.versionSourceSha }} | grep -m 1 ^v[0-9]*\.[0-9]*\.[0-9]* | head -1)
          [[ -z "$from_tag" ]] && \
            from_ref_exclusive=${{ steps.gitversion.outputs.versionSourceSha }} || \
            from_ref_exclusive=$from_tag
          [[ -z "${{ steps.gitversion.outputs.preReleaseNumber }}" ]] && \
            is_prerelease=false || \
            is_prerelease=true
          [[ $is_prerelease == true ]] && \
            tag=v${{ steps.gitversion.outputs.majorMinorPatch }}-pre-${{ steps.gitversion.outputs.shortSha }} || \
            tag=v${{ steps.gitversion.outputs.majorMinorPatch }}
          echo "::set-output name=is_prerelease::$is_prerelease"
          echo "::set-output name=tag::$tag"
          echo "::set-output name=from_ref_exclusive::$from_ref_exclusive"
      - name: Create Tag
        uses: actions/github-script@v3
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.release.outputs.tag }}",
              sha: "${{ steps.gitversion.outputs.sha }}"
            });
      - name: Generate Release Notes
        id: release_notes
        uses: .github/release_config/
        with:
          version: ${{ steps.release.outputs.tag }}
          from_ref_exclusive: ${{ steps.release.outputs.from_ref_exclusive }}
          to_ref_inclusive: ${{ steps.release.outputs.tag }}
      # - name: Package
      #   run: zip -rj artifacts.zip dist
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.release_notes.outputs.release_notes }}
          tag_name: ${{ steps.release.outputs.tag }}
          prerelease: ${{ steps.release.outputs.is_prerelease }}
          files: artifacts.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Latest Minor Tag
        uses: EndBug/latest-tag@v1
        if: steps.release.outputs.is_prerelease == 'false'
        with:
          tag-name: v${{ steps.gitversion.outputs.major }}
          description: ${{ steps.release.outputs.tag }}
      - name: Update Latest Patch Tag
        uses: EndBug/latest-tag@v1
        if: steps.release.outputs.is_prerelease == 'false'
        with:
          tag-name: v${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }}
          description: ${{ steps.release.outputs.tag }}
