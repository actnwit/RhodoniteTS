import { RnObject } from '../core/RnObject';
import { IRenderable } from '../textures/IRenderable';
import { RenderBufferTargetEnum } from '../definitions/RenderBufferTarget';
import { Index, Size, CGAPIResourceHandle } from '../../types/CommonTypes';
import { RenderTargetTexture } from '../textures/RenderTargetTexture';
export declare class FrameBuffer extends RnObject {
    private __colorAttachments;
    private __depthAttachment?;
    private __stencilAttachment?;
    private __depthStencilAttachment?;
    cgApiResourceUid: CGAPIResourceHandle;
    width: Size;
    height: Size;
    private __colorAttachmentMap;
    constructor();
    get colorAttachmentsRenderBufferTargets(): RenderBufferTargetEnum[];
    get colorAttachments(): IRenderable[];
    get depthAttachment(): IRenderable | undefined;
    get stencilAttachment(): IRenderable | undefined;
    get depthStencilAttachment(): IRenderable | undefined;
    getColorAttachedRenderTargetTexture(index: Index): RenderTargetTexture | undefined;
    getDepthAttachedRenderTargetTexture(): RenderTargetTexture | undefined;
    create(width: Size, height: Size): number;
    get framebufferUID(): number;
    setColorAttachmentAt(index: Index, renderable: IRenderable): boolean;
    setColorAttachmentCubeAt(attachmentIndex: Index, faceIndex: Index, mipLevel: Index, renderable: IRenderable): boolean;
    setDepthAttachment(renderable: IRenderable): boolean;
    setStencilAttachment(renderable: IRenderable): boolean;
    setDepthStencilAttachment(renderable: IRenderable): boolean;
    resize(width: Size, height: Size): void;
    destroy3DAPIResources(): void;
    whichColorAttachment(renderable: IRenderable): number;
}
