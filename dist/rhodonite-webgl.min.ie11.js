(window.webpackJsonp=window.webpackJsonp||[]).push([["webgl"],{49:function(e,t,r){"use strict";r.r(t);var i,n=r(25),o=r(33),a=r(34),s=r(23),l=r(29),u=r(4),c=r(1),_=r(3),h=(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),g=function(e){function t(t){var r=t.index,i=t.str;return e.call(this,{index:r,str:i})||this}return h(t,e),t}(_.a),f=new g({index:1,str:"OES_vertex_array_object"}),d=new g({index:2,str:"OES_texture_float"}),p=new g({index:3,str:"OES_texture_half_float"}),b=new g({index:4,str:"OES_texture_float_linear"}),m=new g({index:5,str:"OES_texture_half_float_linear"}),x=new g({index:6,str:"ANGLE_instanced_arrays"}),v=new g({index:7,str:"EXT_texture_filter_anisotropic"}),R=new g({index:8,str:"OES_element_index_uint"}),y=new g({index:9,str:"EXT_shader_texture_lod"});var w=Object.freeze({VertexArrayObject:f,TextureFloat:d,TextureHalfFloat:p,TextureFloatLinear:b,TextureHalfFloatLinear:m,InstancedArrays:x,TextureFilterAnisotropic:v,ElementIndexUint:R,ShaderTextureLod:y}),U=function(){function e(e,t,r){this.__webglVersion=1,this.width=0,this.height=0,this.__extensions=new Map,this.__gl=e,this.width=t,this.height=r,"WebGL2RenderingContext"===this.__gl.constructor.name?this.__webglVersion=2:(this.webgl1ExtVAO=this.__getExtension(w.VertexArrayObject),this.webgl1ExtIA=this.__getExtension(w.InstancedArrays),this.webgl1ExtTF=this.__getExtension(w.TextureFloat),this.webgl1ExtTHF=this.__getExtension(w.TextureHalfFloat),this.webgl1ExtTFL=this.__getExtension(w.TextureFloatLinear),this.webgl1ExtTHFL=this.__getExtension(w.TextureHalfFloatLinear),this.webgl1ExtTFA=this.__getExtension(w.TextureFilterAnisotropic),this.webgl1ExtEIUI=this.__getExtension(w.ElementIndexUint),this.webgl1ExtSTL=this.__getExtension(w.ShaderTextureLod))}return e.prototype.getRawContext=function(){return this.__gl},e.prototype.isSupportWebGL1Extension=function(e){return!!this.__getExtension(e)},Object.defineProperty(e.prototype,"isWebGL2",{get:function(){return 2===this.__webglVersion},enumerable:!0,configurable:!0}),e.prototype.createVertexArray=function(){return this.isWebGL2?this.__gl.createVertexArray():null!=this.webgl1ExtVAO?this.webgl1ExtVAO.createVertexArrayOES():void 0},e.prototype.bindVertexArray=function(e){this.isWebGL2?this.__gl.bindVertexArray(e):null!=this.webgl1ExtVAO&&this.webgl1ExtVAO.bindVertexArrayOES(e)},e.prototype.vertexAttribDivisor=function(e,t){this.isWebGL2?this.__gl.vertexAttribDivisor(e,t):this.webgl1ExtIA.vertexAttribDivisorANGLE(e,t)},e.prototype.drawElementsInstanced=function(e,t,r,i,n){this.isWebGL2?this.__gl.drawElementsInstanced(e,t,r,i,n):this.webgl1ExtIA.drawElementsInstancedANGLE(e,t,r,i,n)},e.prototype.__getExtension=function(e){var t=this.__gl;if(!this.__extensions.has(e)){var r=t.getExtension(e.toString());if(null==r){var i="The library does not support this environment because the "+e.toString()+" is not available";null!=console.error?console.error(i):console.log(i)}return this.__extensions.set(e,r),r}return this.__extensions.get(e)},e}(),T=r(40),L=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),S=function(e){var t="function"==typeof Symbol&&e[Symbol.iterator],r=0;return t?t.call(e):{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}},P=function(e){function t(){var t=e.call(this)||this;return t.__webglContexts=new Map,t.__resourceCounter=o.a.InvalidCGAPIResourceUid,t.__webglResources=new Map,t}return L(t,e),t.getInstance=function(){return this.__instance||(this.__instance=new t),this.__instance},t.prototype.addWebGLContext=function(e,t,r,i){var n=new U(e,t,r);this.__webglContexts.set("default",n),i&&(this.__glw=n)},Object.defineProperty(t.prototype,"currentWebGLContextWrapper",{get:function(){return this.__glw},enumerable:!0,configurable:!0}),t.prototype.getResourceNumber=function(){return++this.__resourceCounter},t.prototype.getWebGLResource=function(e){return this.__webglResources.get(e)},t.prototype.createIndexBuffer=function(e){var t=this.__glw.getRawContext();if(null==t)throw new Error("No WebGLRenderingContext set as Default.");var r=t.createBuffer(),i=this.getResourceNumber();return this.__webglResources.set(i,r),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r),t.bufferData(t.ELEMENT_ARRAY_BUFFER,e.getTypedArray(),t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),i},t.prototype.createVertexBuffer=function(e){var t=this.__glw.getRawContext();if(null==t)throw new Error("No WebGLRenderingContext set as Default.");var r=t.createBuffer(),i=this.getResourceNumber();return this.__webglResources.set(i,r),t.bindBuffer(t.ARRAY_BUFFER,r),t.bufferData(t.ARRAY_BUFFER,e.bufferView.getUint8Array(),t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,null),i},t.prototype.createVertexArray=function(){if(null==this.__glw)throw new Error("No WebGLRenderingContext set as Default.");var e=this.__glw.createVertexArray(),t=this.getResourceNumber();return this.__webglResources.set(t,e),t},t.prototype.createVertexDataResources=function(e){var t,r=this,i=this.__glw.getRawContext(),n=this.createVertexArray();e.hasIndices()&&(t=this.createIndexBuffer(e.indicesAccessor));var o=[];return e.attributeAccessors.forEach(function(e){var t=r.createVertexBuffer(e);o.push(t)}),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,null),{vaoHandle:n,iboHandle:t,vboHandles:o,setComplete:!1}},t.prototype.createShaderProgram=function(e){var t=e.vertexShaderStr,r=e.fragmentShaderStr,i=e.attributeNames,n=e.attributeSemantics,o=this.__glw.getRawContext();if(null==o)throw new Error("No WebGLRenderingContext set as Default.");var a=o.createShader(o.VERTEX_SHADER);o.shaderSource(a,t),o.compileShader(a),this.__checkShaderCompileStatus(a,t);var s,l=o.createProgram();o.attachShader(l,a),null!=r&&(s=o.createShader(o.FRAGMENT_SHADER),o.shaderSource(s,r),o.compileShader(s),this.__checkShaderCompileStatus(s,r),o.attachShader(l,s)),i.forEach(function(e,t){o.bindAttribLocation(l,n[t].getAttributeSlot(),e)}),o.linkProgram(l);var u=this.getResourceNumber();return this.__webglResources.set(u,l),this.__checkShaderProgramLinkStatus(l),o.deleteShader(a),null!=r&&o.deleteShader(s),u},t.prototype.__addLineNumber=function(e){for(var t=e.split(/\r\n|\r|\n/),r="",i=0;i<t.length;i++){var n=i+1,o=" : ";n<10?o="  : ":n>=100&&(o=": "),r+=n+o+t[i]+"\n"}return r},t.prototype.__checkShaderCompileStatus=function(e,t){var r=this.__glw.getRawContext();if(!r.getShaderParameter(e,r.COMPILE_STATUS))throw console.log(this.__addLineNumber(t)),new Error("An error occurred compiling the shaders:"+r.getShaderInfoLog(e))},t.prototype.__checkShaderProgramLinkStatus=function(e){var t=this.__glw.getRawContext();if(!t.getProgramParameter(e,t.LINK_STATUS))throw new Error("Unable to initialize the shader program: "+t.getProgramInfoLog(e))},t.prototype.setupUniformLocations=function(e,t){var r,i,n=this.__glw.getRawContext(),o=this.getWebGLResource(e);try{for(var a=S(t),s=a.next();!s.done;s=a.next()){var l=s.value,u="";null!=l.prefix&&(u=l.prefix);var c=void 0,_=void 0;l.semantic?(c=l.semantic.singularStr,_=l.semantic.pluralStr):(c=l.semanticStr,_=l.semanticStr);var h=c;null!=l.index&&(h+="_"+l.index),l.isPlural?o[h]=n.getUniformLocation(o,"u_"+u+_):o[h]=n.getUniformLocation(o,"u_"+u+c)}}catch(e){r={error:e}}finally{try{s&&!s.done&&(i=a.return)&&i.call(a)}finally{if(r)throw r.error}}},t.prototype.setUniformValue=function(e,t,r,i,n,o,a,s){var l=a.x,u=a.y,c=a.z,_=a.w,h=this.__glw.getRawContext(),g=this.getWebGLResource(e),f="uniform";r&&(f="uniformMatrix"),f+=i,f+=n,o&&(f+="v");var d=[],p="string"==typeof t?t:t.str;null!=s&&(p+="_"+s),d.push(g[p]),r&&d.push(!1),d.push(l),null!=u&&d.push(u),null!=c&&d.push(c),null!=_&&d.push(_),h[f].apply(h,d)},t.prototype.setVertexDataToPipeline=function(e,t,r){var i=this,n=e.vaoHandle,s=e.iboHandle,l=e.vboHandles;void 0===r&&(r=o.a.InvalidCGAPIResourceUid);var _=this.__glw.getRawContext(),h=this.getWebGLResource(n);if(this.__glw.bindVertexArray(h),null!=s){var g=this.getWebGLResource(s);if(null==g)throw new Error("Nothing Element Array Buffer!");_.bindBuffer(_.ELEMENT_ARRAY_BUFFER,g)}if(l.forEach(function(e,r){var n=i.getWebGLResource(e);if(null==n)throw new Error("Nothing Element Array Buffer at index "+r);_.bindBuffer(_.ARRAY_BUFFER,n),_.enableVertexAttribArray(t.attributeSemantics[r].getAttributeSlot()),_.vertexAttribPointer(t.attributeSemantics[r].getAttributeSlot(),t.attributeCompositionTypes[r].getNumberOfComponents(),t.attributeComponentTypes[r].index,!1,t.attributeAccessors[r].byteStride,t.attributeAccessors[r].byteOffsetInBufferView)}),r!==o.a.InvalidCGAPIResourceUid){var f=this.getWebGLResource(r);if(null==f)throw new Error("Nothing Element Array Buffer at index");_.bindBuffer(_.ARRAY_BUFFER,f),_.enableVertexAttribArray(a.a.Instance.getAttributeSlot()),_.vertexAttribPointer(a.a.Instance.getAttributeSlot(),u.a.Scalar.getNumberOfComponents(),c.a.Float.index,!1,0,0),this.__glw.vertexAttribDivisor(a.a.Instance.getAttributeSlot(),1)}_.bindBuffer(_.ARRAY_BUFFER,null),this.__glw.bindVertexArray(null),_.bindBuffer(_.ELEMENT_ARRAY_BUFFER,null)},t.prototype.createTexture=function(e,t){var r=t.level,i=t.internalFormat,n=t.width,o=t.height,a=t.border,s=t.format,l=t.type,u=t.magFilter,c=t.minFilter,_=t.wrapS,h=t.wrapT,g=t.generateMipmap,f=t.anisotropy,d=this.__glw.getRawContext(),p=d.createTexture(),b=this.getResourceNumber();return this.__webglResources.set(b,p),d.bindTexture(d.TEXTURE_2D,p),e instanceof HTMLImageElement||e instanceof HTMLCanvasElement?d.texImage2D(d.TEXTURE_2D,r,i.index,s.index,l.index,e):d.texImage2D(d.TEXTURE_2D,r,i.index,n,o,a,s.index,l.index,e),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,_.index),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,h.index),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,u.index),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,c.index),T.a.isPowerOfTwoTexture(n,o)&&(f&&this.__glw.webgl1ExtTFA&&d.texParameteri(d.TEXTURE_2D,this.__glw.webgl1ExtTFA.TEXTURE_MAX_ANISOTROPY_EXT,4),g&&d.generateMipmap(d.TEXTURE_2D)),b},t.prototype.updateTexture=function(e,t,r){var i=r.level,n=r.width,o=r.height,a=r.format,s=r.type,l=this.__glw.getRawContext(),u=this.getWebGLResource(e);l.bindTexture(l.TEXTURE_2D,u),l.texSubImage2D(l.TEXTURE_2D,i,0,0,n,o,a.index,s.index,t)},t.prototype.deleteTexture=function(e){var t=this.getWebGLResource(e),r=this.__glw.getRawContext();null!=t&&(r.deleteTexture(t),this.__webglResources.delete(e))},t.prototype.createDummyTexture=function(){var e=document.createElement("canvas");e.width=1,e.height=1;var t=e.getContext("2d");return t.fillStyle="rgba(255,255,255,1)",t.fillRect(0,0,1,1),this.createTexture(e,{level:0,internalFormat:l.a.RGBA,width:1,height:1,border:0,format:l.a.RGBA,type:c.a.Float,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.ClampToEdge,wrapT:s.a.ClampToEdge,generateMipmap:!1,anisotropy:!1})},t.prototype.createUniformBuffer=function(e){var t=this.__glw.getRawContext();if(null==t)throw new Error("No WebGLRenderingContext set as Default.");var r=t.createBuffer(),i=this.getResourceNumber();return this.__webglResources.set(i,r),t.bindBuffer(t.UNIFORM_BUFFER,r),t.bufferData(t.UNIFORM_BUFFER,e,t.DYNAMIC_DRAW),t.bindBuffer(t.UNIFORM_BUFFER,null),i},t.prototype.updateUniformBuffer=function(e,t){var r=this.__glw.getRawContext(),i=this.getWebGLResource(e);r.bindBuffer(r.UNIFORM_BUFFER,i),r.bufferSubData(r.UNIFORM_BUFFER,0,t,0),r.bindBuffer(r.UNIFORM_BUFFER,null)},t.prototype.bindUniformBlock=function(e,t,r){var i=this.__glw.getRawContext();if(null==i)throw new Error("No WebGLRenderingContext set as Default.");var n=this.getWebGLResource(e),o=i.getUniformBlockIndex(n,t);i.uniformBlockBinding(n,o,r)},t.prototype.bindUniformBufferBase=function(e,t){var r=this.__glw.getRawContext();if(null==r)throw new Error("No WebGLRenderingContext set as Default.");var i=this.getWebGLResource(t);r.bindBufferBase(r.UNIFORM_BUFFER,e,i)},t.prototype.deleteUniformBuffer=function(e){var t=this.__glw.getRawContext();null==t&&new Error("No WebGLRenderingContext set as Default.");var r=this.getWebGLResource(e);t.deleteBuffer(r)},t.prototype.createTransformFeedback=function(){var e=this.__glw.getRawContext(),t=e.createTransformFeedback(),r=this.getResourceNumber();return this.__webglResources.set(r,t),e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,t),r},t.prototype.deleteTransformFeedback=function(e){var t=this.__glw.getRawContext(),r=this.getWebGLResource(e);t.deleteTransformFeedback(r)},t}(o.a),C=r(21),E=r(10),A=r(5),M=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),I=function(e){function t(t){var r=t.index,i=t.singularStr,n=t.pluralStr,o=e.call(this,{index:r,str:i})||this;return o.pluralStr=n,o}return M(t,e),Object.defineProperty(t.prototype,"singularStr",{get:function(){return this.str},enumerable:!0,configurable:!0}),t}(_.a),W=new I({index:0,singularStr:"worldMatrix",pluralStr:"worldMatrices"}),F=new I({index:1,singularStr:"viewMatrix",pluralStr:"viewMatrices"}),G=new I({index:2,singularStr:"projectionMatrix",pluralStr:"projectionMatrices"}),D=new I({index:3,singularStr:"normalMatrix",pluralStr:"normalMatrices"}),N=new I({index:4,singularStr:"boneMatrix",pluralStr:"boneMatrices"}),B=new I({index:5,singularStr:"baseColorFactor",pluralStr:"baseColorFactors"}),V=new I({index:6,singularStr:"baseColorTexture",pluralStr:"baseColorTextures"}),O=new I({index:7,singularStr:"normalTexture",pluralStr:"normalTextures"}),H=new I({index:8,singularStr:"metallicRoughnessTexture",pluralStr:"metallicRoughnessTextures"}),j=new I({index:9,singularStr:"occlusionTexture",pluralStr:"occlusionTextures"}),k=new I({index:10,singularStr:"lightNumber",pluralStr:"lightNumbers"}),z=new I({index:11,singularStr:"lightPosition",pluralStr:"lightPositions"}),X=new I({index:12,singularStr:"lightDirection",pluralStr:"lightDirections"}),q=new I({index:13,singularStr:"lightIntensity",pluralStr:"intensityOfLights"});var Y=Object.freeze({WorldMatrix:W,ViewMatrix:F,ProjectionMatrix:G,NormalMatrix:D,BoneMatrix:N,BaseColorFactor:B,BaseColorTexture:V,NormalTexture:O,MetallicRoughnessTexture:H,OcclusionTexture:j,LightNumber:k,LightPosition:z,LightDirection:X,LightIntensity:q}),$=function(){function e(){this.__webglResourceRepository=P.getInstance()}return Object.defineProperty(e.prototype,"glsl_rt0",{get:function(){return this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?"layout(location = 0) out vec4 rt0;\n":"vec4 rt0;\n"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"glsl_fragColor",{get:function(){return this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?"":"gl_FragColor = rt0;\n"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"glsl_vertex_in",{get:function(){return this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?"in":"attribute"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"glsl_fragment_in",{get:function(){return this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?"in":"varying"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"glsl_vertex_out",{get:function(){return this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?"out":"varying"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"glsl_texture",{get:function(){return this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?"texture":"texture2D"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"glsl_versionText",{get:function(){return this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?"#version 300 es\n":""},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"glsl1ShaderTextureLodExt",{get:function(){return null!=P.getInstance().currentWebGLContextWrapper.webgl1ExtSTL?"#extension GL_EXT_shader_texture_lod : require\n":""},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"toNormalMatrix",{get:function(){return"\n    mat3 toNormalMatrix(mat4 m) {\n      float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n      a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n      a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n      a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3];\n\n      float b00 = a00 * a11 - a01 * a10,\n      b01 = a00 * a12 - a02 * a10,\n      b02 = a00 * a13 - a03 * a10,\n      b03 = a01 * a12 - a02 * a11,\n      b04 = a01 * a13 - a03 * a11,\n      b05 = a02 * a13 - a03 * a12,\n      b06 = a20 * a31 - a21 * a30,\n      b07 = a20 * a32 - a22 * a30,\n      b08 = a20 * a33 - a23 * a30,\n      b09 = a21 * a32 - a22 * a31,\n      b10 = a21 * a33 - a23 * a31,\n      b11 = a22 * a33 - a23 * a32;\n\n      float determinantVal = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n      return mat3(\n        a11 * b11 - a12 * b10 + a13 * b09, a12 * b08 - a10 * b11 - a13 * b07, a10 * b10 - a11 * b08 + a13 * b06,\n        a02 * b10 - a01 * b11 - a03 * b09, a00 * b11 - a02 * b08 + a03 * b07, a01 * b08 - a00 * b10 - a03 * b06,\n        a31 * b05 - a32 * b04 + a33 * b03, a32 * b02 - a30 * b05 - a33 * b01, a30 * b04 - a31 * b02 + a33 * b00) / determinantVal;\n    }\n    "},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"getSkinMatrix",{get:function(){return"\n\n    mat4 getSkinMatrix() {\n      mat4 skinMat = a_weight.x * u_boneMatrices[int(a_joint.x)];\n      skinMat += a_weight.y * u_boneMatrices[int(a_joint.y)];\n      skinMat += a_weight.z * u_boneMatrices[int(a_joint.z)];\n      skinMat += a_weight.w * u_boneMatrices[int(a_joint.w)];\n\n      return skinMat;\n    }\n    "},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"processSkinningIfNeed",{get:function(){return"\n    if (length(a_weight.xyz) > 0.01) {\n      mat4 skinMat = getSkinMatrix();\n      v_position_inWorld = skinMat * vec4(a_position, 1.0);\n      normalMatrix = toNormalMatrix(skinMat);\n      v_normal_inWorld = normalize(normalMatrix * a_normal);\n      gl_Position = projectionMatrix * viewMatrix * v_position_inWorld;\n    }\n    "},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pbrUniformDefinition",{get:function(){var e="";e+="uniform vec2 uMetallicRoughnessFactors;\n",e+="uniform vec3 uBaseColorFactor;\n",e+="uniform vec2 uOcclusionFactors;",e+="uniform vec3 uEmissiveFactor;",e+="uniform sampler2D uMetallicRoughnessTexture;\n";e+="uniform sampler2D uOcclusionTexture;\n";e+="uniform sampler2D uEmissiveTexture;\n";return e+="uniform sampler2D uBrdfLUTTexture;\n",e+="uniform samplerCube uDiffuseEnvTexture;\n",e+="uniform samplerCube uSpecularEnvTexture;\n",e+="uniform vec3 uIBLParameters;\n",e+="uniform vec4 ambient;\n"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"pbrMethodDefinition",{get:function(){return'\n    const float M_PI = 3.141592653589793;\n    const float c_MinRoughness = 0.04;\n\n    float angular_n_h(float NH) {\n      return acos(NH);\n    }\n\n    float sqr(float x) {\n      return x*x;\n    }\n\n    float d_phong(float NH, float c1) {\n      return pow(\n        cos(acos(NH))\n        , c1\n      );\n    }\n\n    // GGX NDF\n    float d_ggx(float NH, float alphaRoughness) {\n      float roughnessSqr = alphaRoughness * alphaRoughness;\n      float f = (roughnessSqr - 1.0) * NH * NH + 1.0;\n      return roughnessSqr / (M_PI * f * f);\n    }\n\n    float d_torrance_reiz(float NH, float c3) {\n      float CosSquared = NH*NH;\n      float TanSquared = (1.0 - CosSquared)/CosSquared;\n      //return (1.0/M_PI) * sqr(c3/(CosSquared * (c3*c3 + TanSquared)));  // gamma = 2, aka GGX\n      return (1.0/sqrt(M_PI)) * (sqr(c3)/(CosSquared * (c3*c3 + TanSquared))); // gamma = 1, D_Berry\n    }\n\n    float d_beckmann(float NH, float m) {\n      float co = 1.0 / (4.0 * m * m * NH * NH * NH * NH);\n      float expx = exp((NH * NH - 1.0) / (m * m * NH * NH));\n      return co * expx;\n    }\n\n    // the same as glTF WebGL sample\n    // https://github.com/KhronosGroup/glTF-WebGL-PBR/blob/88eda8c5358efe03128b72b6c5f5f6e5b6d023e1/shaders/pbr-frag.glsl#L188\n    // That is, Unreal Engine based approach, but modified to use alphaRoughness (squared artist\'s roughness parameter),\n    // and based on \'Separable Masking and Shadowing\' approximation (propesed by Christophe Schlick)\n    // https://www.cs.virginia.edu/~jdl/bib/appearance/analytic%20models/schlick94b.pdf\n    float g_shielding(float NL, float NV, float alphaRoughness) {\n      float r = alphaRoughness;\n\n      // Local Shadowing using "Schlick-Smith" Masking Function\n      float localShadowing = 2.0 * NL / (NL + sqrt(r * r + (1.0 - r * r) * (NL * NL)));\n\n      // Local Masking using "Schlick-Smith" Masking Function\n      float localMasking = 2.0 * NV / (NV + sqrt(r * r + (1.0 - r * r) * (NV * NV)));\n\n      return localShadowing * localMasking;\n    }\n\n    // The Schlick Approximation to Fresnel\n    vec3 fresnel(vec3 f0, float LH) {\n      return vec3(f0) + (vec3(1.0) - f0) * pow(1.0 - LH, 5.0);\n    }\n\n    vec3 cook_torrance_specular_brdf(float NH, float NL, float NV, vec3 F, float alphaRoughness) {\n      float D = d_ggx(NH, alphaRoughness);\n      float G = g_shielding(NL, NV, alphaRoughness);\n      return vec3(D)*vec3(G)*F/vec3(4.0*NL*NV);\n    }\n\n    vec3 diffuse_brdf(vec3 albedo)\n    {\n      return albedo / M_PI;\n    }\n\n    vec3 srgbToLinear(vec3 srgbColor) {\n      return pow(srgbColor, vec3(2.2));\n    }\n\n    float srgbToLinear(float value) {\n      return pow(value, 2.2);\n    }\n\n    vec3 linearToSrgb(vec3 linearColor) {\n      return pow(linearColor, vec3(1.0/2.2));\n    }\n\n    float linearToSrgb(float value) {\n      return pow(value, 1.0/2.2);\n    }\n\n    vec3 IBLContribution(vec3 n, float NV, vec3 reflection, vec3 albedo, vec3 F0, float userRoughness)\n    {\n      float mipCount = uIBLParameters.x;\n      float lod = (userRoughness * mipCount);\n\n      vec3 brdf = srgbToLinear(texture2D(uBrdfLUTTexture, vec2(NV, 1.0 - userRoughness)).rgb);\n      vec3 diffuseLight = srgbToLinear(textureCube(uDiffuseEnvTexture, n).rgb);\n      '+(this.__webglResourceRepository.currentWebGLContextWrapper.webgl1ExtSTL?"vec3 specularLight = srgbToLinear(textureCubeLodEXT(uSpecularEnvTexture, reflection, lod).rgb);":"vec3 specularLight = srgbToLinear(textureCube(uSpecularEnvTexture, reflection).rgb);")+"\n      vec3 diffuse = diffuseLight * albedo;\n      vec3 specular = specularLight * (F0 * brdf.x + brdf.y);\n\n      float IBLDiffuseContribution = uIBLParameters.y;\n      float IBLSpecularContribution = uIBLParameters.z;\n      diffuse *= IBLDiffuseContribution;\n      specular *= IBLSpecularContribution;\n      return diffuse + specular;\n    }\n    "},enumerable:!0,configurable:!0}),e}(),J=r(28),K=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),Q=function(e){function t(){var t=e.call(this)||this;return t.vertexShaderBody="\n\nvoid main ()\n{\n  mat4 worldMatrix = getMatrix(a_instanceID);\n  mat4 viewMatrix = getViewMatrix(a_instanceID);\n  mat4 projectionMatrix = getProjectionMatrix(a_instanceID);\n  mat3 normalMatrix = getNormalMatrix(a_instanceID);\n\n  v_position_inWorld = worldMatrix * vec4(a_position, 1.0);\n\n  gl_Position = projectionMatrix * viewMatrix * v_position_inWorld;\n  v_color = a_color;\n  v_normal_inWorld = normalMatrix * a_normal;\n  v_texcoord = a_texcoord;\n\n  // Skeletal\n  "+t.processSkinningIfNeed+"\n\n//  v_color = vec3(u_boneMatrices[int(a_joint.x)][1].xyz);\n}\n  ",t}return K(t,e),t.getInstance=function(){return this.__instance||(this.__instance=new t),this.__instance},Object.defineProperty(t.prototype,"vertexShaderVariableDefinitions",{get:function(){var e=this.glsl_versionText,t=this.glsl_vertex_in,r=this.glsl_vertex_out;return e+"\nprecision highp float;\n"+t+" vec3 a_position;\n"+t+" vec3 a_color;\n"+t+" vec3 a_normal;\n"+t+" float a_instanceID;\n"+t+" vec2 a_texcoord;\n"+t+" vec4 a_joint;\n"+t+" vec4 a_weight;\n"+r+" vec3 v_color;\n"+r+" vec3 v_normal_inWorld;\n"+r+" vec4 v_position_inWorld;\n"+r+" vec2 v_texcoord;\nuniform mat4 u_boneMatrices[100];\n\n"+this.toNormalMatrix+"\n\n"+this.getSkinMatrix+"\n\n"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fragmentShaderSimple",{get:function(){var e=this.glsl_versionText,t=this.glsl_fragment_in,r=this.glsl_rt0,i=this.glsl_fragColor,n=this.glsl_texture;return e+"\nprecision highp float;\n\nstruct Material {\n  vec4 baseColorFactor;\n  sampler2D baseColorTexture;\n};\nuniform Material u_material;\n\nstruct Light {\n  vec4 lightPosition;\n  vec4 lightDirection;\n  vec4 lightIntensity;\n};\nuniform Light u_lights["+J.a.maxLightNumberInShader+"];\nuniform int u_lightNumber;\n\n"+t+" vec3 v_color;\n"+t+" vec3 v_normal_inWorld;\n"+t+" vec4 v_position_inWorld;\n"+t+" vec2 v_texcoord;\n"+r+"\nvoid main ()\n{\n\n  // Normal\n  vec3 normal_inWorld = normalize(v_normal_inWorld);\n\n  // baseColor\n  vec3 color = vec3(0.0, 0.0, 0.0);\n  if (v_color != color && u_material.baseColorFactor.rgb != color) {\n    color = v_color * u_material.baseColorFactor.rgb;\n  } else if (v_color == color) {\n    color = u_material.baseColorFactor.rgb;\n  } else if (u_material.baseColorFactor.rgb == color) {\n    color = v_color;\n  } else {\n    color = vec3(1.0, 1.0, 1.0);\n  }\n  //color = v_color;\n\n  // baseColorTexture\n  vec4 textureColor = "+n+"(u_material.baseColorTexture, v_texcoord);\n  if (textureColor.r > 0.05) {\n    color *= textureColor.rgb;\n  }\n\n  // Lighting\n  if (length(v_normal_inWorld) > 0.02) {\n    vec3 diffuse = vec3(0.0, 0.0, 0.0);\n    for (int i = 0; i < "+J.a.maxLightNumberInShader+"; i++) {\n      if (i >= u_lightNumber) {\n        break;\n      }\n\n      vec3 lightDirection = u_lights[i].lightDirection.xyz;\n      float lightType = u_lights[i].lightPosition.w;\n      float spotCosCutoff = u_lights[i].lightDirection.w;\n      float spotExponent = u_lights[i].lightIntensity.w;\n\n      if (0.75 < lightType) { // is pointlight or spotlight\n        lightDirection = normalize(u_lights[i].lightPosition.xyz - v_position_inWorld.xyz);\n      }\n      float spotEffect = 1.0;\n      if (lightType > 1.75) { // is spotlight\n        spotEffect = dot(u_lights[i].lightDirection.xyz, lightDirection);\n        if (spotEffect > spotCosCutoff) {\n          spotEffect = pow(spotEffect, spotExponent);\n        } else {\n          spotEffect = 0.0;\n        }\n      }\n\n      vec3 incidentLight = spotEffect * u_lights[i].lightIntensity.xyz;\n//      incidentLight *= M_PI;\n\n      diffuse += 1.0 * max(0.0, dot(normal_inWorld, lightDirection)) * incidentLight;\n    }\n\n    color *= diffuse;\n  }\n\n  rt0 = vec4(color, 1.0);\n  //rt0 = vec4(u_lightNumber, 0.0, 0.0, 1.0);\n\n\n  "+i+"\n}\n"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fragmentShader",{get:function(){return this.fragmentShaderSimple},enumerable:!0,configurable:!0}),t.attributeNames=["a_position","a_color","a_normal","a_texcoord","a_joint","a_weight","a_instanceID"],t.attributeSemantics=[a.a.Position,a.a.Color0,a.a.Normal,a.a.Texcoord0,a.a.Joints0,a.a.Weights0,a.a.Instance],t}($),Z=function(){function e(){this.__webglResourceRepository=P.getInstance(),this.__uboUid=o.a.InvalidCGAPIResourceUid,this.__shaderProgramUid=o.a.InvalidCGAPIResourceUid,this.__vertexHandles=[],this.__isVAOSet=!1,this.vertexShaderMethodDefinitions_UBO="layout (std140) uniform matrix {\n    mat4 world[1024];\n  } u_matrix;\n\n  uniform mat4 u_viewMatrix;\n  uniform mat4 u_projectionMatrix;\n  uniform mat3 u_normalMatrix;\n\n  mat4 getMatrix(float instanceId) {\n    float index = instanceId;\n    return transpose(u_matrix.world[int(index)]);\n  }\n\n  mat4 getViewMatrix(float instanceId) {\n    return u_viewMatrix;\n  }\n\n  mat4 getProjectionMatrix(float instanceId) {\n    return u_projectionMatrix;\n  }\n\n  mat3 getNormalMatrix(float instanceId) {\n    return u_normalMatrix;\n  }\n\n  "}return e.prototype.setupShaderProgram=function(){if(this.__shaderProgramUid===o.a.InvalidCGAPIResourceUid){var e=Q.getInstance(),t=e.vertexShaderVariableDefinitions+this.vertexShaderMethodDefinitions_UBO+e.vertexShaderBody,r=e.fragmentShader;this.__shaderProgramUid=this.__webglResourceRepository.createShaderProgram({vertexShaderStr:t,fragmentShaderStr:r,attributeNames:Q.attributeNames,attributeSemantics:Q.attributeSemantics}),this.__webglResourceRepository.setupUniformLocations(this.__shaderProgramUid,[{semantic:Y.ViewMatrix,isPlural:!1},{semantic:Y.ProjectionMatrix,isPlural:!1}])}},e.prototype.__isLoaded=function(e){return null!=this.__vertexHandles[e]},e.prototype.$load=function(t){if(!this.__isLoaded(0))for(var r=t.getPrimitiveNumber(),i=0;i<r;i++){var n=t.getPrimitiveAt(i),o=this.__webglResourceRepository.createVertexDataResources(n);this.__vertexHandles[i]=o,e.__vertexHandleOfPrimitiveObjectUids.set(n.objectUid,o)}},e.prototype.$prerender=function(t,r){if(!this.__isVAOSet){for(var i=t.getPrimitiveNumber(),n=0;n<i;n++){var o=t.getPrimitiveAt(n);this.__vertexHandles[n]=e.__vertexHandleOfPrimitiveObjectUids.get(o.objectUid),this.__webglResourceRepository.setVertexDataToPipeline(this.__vertexHandles[n],o,r)}this.__isVAOSet=!0}},e.prototype.common_$prerender=function(){var e=C.a.getInstance().getBuffer(A.a.GPUInstanceData);new Float32Array(e.getArrayBuffer());this.__uboUid===o.a.InvalidCGAPIResourceUid?(this.__uboUid=this.__webglResourceRepository.createUniformBuffer(E.a.getAccessor("worldMatrix",E.a).dataViewOfBufferView),this.__webglResourceRepository.bindUniformBufferBase(0,this.__uboUid)):this.__webglResourceRepository.updateUniformBuffer(this.__uboUid,E.a.getAccessor("worldMatrix",E.a).dataViewOfBufferView)},e.prototype.attachGPUData=function(){this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"matrix",0)},e.prototype.attatchShaderProgram=function(){var e=this.__shaderProgramUid,t=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),r=this.__webglResourceRepository.getWebGLResource(e);t.useProgram(r)},e.prototype.attachVertexData=function(e,t,r,i){var n=this.__vertexHandles[e],o=this.__webglResourceRepository.getWebGLResource(n.vaoHandle),a=r.getRawContext();if(null!=o)r.bindVertexArray(o);else{this.__webglResourceRepository.setVertexDataToPipeline(n,t,i);var s=this.__webglResourceRepository.getWebGLResource(n.iboHandle);a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,s)}},e.getInstance=function(){return this.__instance||(this.__instance=new e),this.__instance},e.prototype.common_$render=function(e,t){var r=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();r.getRawContext();return this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.ViewMatrix,!0,4,"f",!0,{x:e.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.ProjectionMatrix,!0,4,"f",!0,{x:t.v}),!0},e.__vertexHandleOfPrimitiveObjectUids=new Map,e}(),ee=r(24),te=r(19),re=r(35),ie=r(30),ne=function(){function e(){this.__webglResourceRepository=P.getInstance(),this.__instanceDataTextureUid=o.a.InvalidCGAPIResourceUid,this.__vertexDataTextureUid=o.a.InvalidCGAPIResourceUid,this.__shaderProgramUid=o.a.InvalidCGAPIResourceUid,this.__primitiveHeaderUboUid=o.a.InvalidCGAPIResourceUid,this.__indexCountToSubtractUboUid=o.a.InvalidCGAPIResourceUid,this.__entitiesUidUboUid=o.a.InvalidCGAPIResourceUid,this.__primitiveUidUboUid=o.a.InvalidCGAPIResourceUid,this.__isVertexReady=!1}return Object.defineProperty(e.prototype,"__transformFeedbackShaderText",{get:function(){Q.getInstance().glsl_vertex_in,Q.getInstance().glsl_texture;return"#version 300 es\n\n    layout (std140) uniform indexCountsToSubtract {\n      ivec4 counts[256];\n    } u_indexCountsToSubtract;\n    layout (std140) uniform entityUids {\n      ivec4 ids[256];\n    } u_entityData;\n    layout (std140) uniform primitiveUids {\n      ivec4 ids[256];\n    } u_primitiveData;\n    layout (std140) uniform primitiveHeader {\n      ivec4 data[256];\n    } u_primitiveHeader;\n\n    out vec4 position;\n    //out vec3 colors;\n\n    uniform sampler2D u_instanceDataTexture;\n    uniform sampler2D u_vertexDataTexture;\n\n    void main(){\n      int indexOfVertices = gl_VertexID + 3*gl_InstanceID;\n\n      int entityUidMinusOne = 0;\n      int primitiveUid = 0;\n      for (int i=0; i<=indexOfVertices; i++) {\n        for (int j=0; j<1024; j++) {\n          int value = u_indexCountsToSubtract.counts[j/4][j%4];\n          int result = int(step(float(value), float(i)));\n          if (result > 0) {\n            entityUidMinusOne = result * int(u_entityData.ids[j/4][j%4]) - 1;\n            primitiveUid = result * u_primitiveData.ids[j/4][j%4];\n          } else {\n            break;\n          }\n        }\n      }\n\n      ivec4 indicesMeta = u_primitiveHeader.data[9*primitiveUid + 0];\n      int primIndicesByteOffset = indicesMeta.x;\n      int primIndicesComponentSizeInByte = indicesMeta.y;\n      int primIndicesLength = indicesMeta.z;\n\n      int idx = gl_VertexID - primIndicesByteOffset / 4 /*byte*/;\n\n      // get Indices\n      int texelLength = "+C.a.bufferWidthLength+";\n      vec4 indexVec4 = texelFetch(u_vertexDataTexture, ivec2(idx%texelLength, idx/texelLength), 0);\n      int index = int(indexVec4[idx%4]);\n\n      // get Positions\n      ivec4 indicesData = u_primitiveHeader.data[9*primitiveUid + 1];\n      int primPositionsByteOffset = indicesData.x;\n      idx = primPositionsByteOffset/4 + index;\n      vec4 posVec4 = texelFetch(u_vertexDataTexture, ivec2(idx%texelLength, idx/texelLength), 0);\n\n      position = posVec4;\n    }\n"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"__transformFeedbackFragmentShaderText",{get:function(){return"#version 300 es\nprecision highp float;\n\nout vec4 outColor;\n\nvoid main(){\n    outColor = vec4(1.0);\n}\n    "},enumerable:!0,configurable:!0}),e.prototype.setupShaderProgram=function(){if(this.__shaderProgramUid===o.a.InvalidCGAPIResourceUid){var e=this.__transformFeedbackShaderText,t=this.__transformFeedbackFragmentShaderText;this.__shaderProgramUid=this.__webglResourceRepository.createShaderProgram({vertexShaderStr:e,fragmentShaderStr:t,attributeNames:Q.attributeNames,attributeSemantics:Q.attributeSemantics}),this.__webglResourceRepository.setupUniformLocations(this.__shaderProgramUid,[{semantic:Y.ViewMatrix,isPlural:!1},{semantic:Y.ProjectionMatrix,isPlural:!1}])}},e.prototype.$load=function(e){if(!this.__isVertexReady){var t=C.a.getInstance().getBuffer(A.a.CPUGeneric),r=t.takeBufferView({byteLengthToNeed:12,byteStride:4,isAoS:!1}).takeAccessor({compositionType:u.a.Scalar,componentType:c.a.UnsingedInt,count:3}),i=t.takeBufferView({byteLengthToNeed:48,byteStride:16,isAoS:!1}).takeAccessor({compositionType:u.a.Vec4,componentType:c.a.Float,count:3}),n=r.getTypedArray();n[0]=0,n[1]=1,n[2]=2;var o=re.a.createPrimitive({indices:n,attributeCompositionTypes:[i.compositionType],attributeSemantics:[a.a.Position],attributes:[i.getTypedArray()],primitiveMode:ie.a.Triangles,material:void 0});this.__vertexHandle=this.__webglResourceRepository.createVertexDataResources(o),this.__isVertexReady=!0}},e.prototype.$prerender=function(e,t){},e.prototype.__setupUBOPrimitiveHeaderData=function(){var e=C.a.getInstance().getBuffer(A.a.UBOGeneric),t=new Int32Array(e.getArrayBuffer());this.__primitiveHeaderUboUid===o.a.InvalidCGAPIResourceUid&&(this.__primitiveHeaderUboUid=this.__webglResourceRepository.createUniformBuffer(t),this.__webglResourceRepository.bindUniformBufferBase(3,this.__primitiveHeaderUboUid))},e.prototype.__setupGPUInstanceMetaData=function(){if(this.__primitiveUidUboUid===o.a.InvalidCGAPIResourceUid){var e=ee.a.getInstance()._getEntities(),t=new Int32Array(e.length),r=new Int32Array(e.length),i=new Int32Array(e.length),n=0;e.forEach(function(e,o){var a=e.getComponent(te.a);if(a){r[o]=a.getPrimitiveAt(0).primitiveUid,t[o]=e.entityUID;var s=a.getPrimitiveAt(0).indicesAccessor.elementCount;i[o]=n+s,n+=s}}),this.__indexCountToSubtractUboUid=this.__webglResourceRepository.createUniformBuffer(i),this.__webglResourceRepository.bindUniformBufferBase(0,this.__indexCountToSubtractUboUid),this.__entitiesUidUboUid=this.__webglResourceRepository.createUniformBuffer(t),this.__webglResourceRepository.bindUniformBufferBase(1,this.__entitiesUidUboUid),this.__primitiveUidUboUid=this.__webglResourceRepository.createUniformBuffer(r),this.__webglResourceRepository.bindUniformBufferBase(2,this.__primitiveUidUboUid)}},e.prototype.__setupGPUInstanceData=function(){var e=!1;(this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2||this.__webglResourceRepository.currentWebGLContextWrapper.isSupportWebGL1Extension(w.TextureHalfFloat))&&(e=!0);var t,r=C.a.getInstance().getBuffer(A.a.GPUInstanceData),i=new Float32Array(r.getArrayBuffer());if(e){t=new Uint16Array(i.length);var n=r.byteSizeInUse/4;n/=2;for(var a=0;a<n;a++)t[a]=T.a.toHalfFloat(i[a])}this.__instanceDataTextureUid===o.a.InvalidCGAPIResourceUid?e?this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__instanceDataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:s.a.RGBA16F,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.Float,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__instanceDataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:l.a.RGBA,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.HalfFloat,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__instanceDataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:s.a.RGBA32F,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.Float,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__instanceDataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:l.a.RGBA,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.Float,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1}):e?this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid,i,{level:0,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,format:l.a.RGBA,type:c.a.Float}):this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid,t,{level:0,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,format:l.a.RGBA,type:c.a.HalfFloat}):(this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2,this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid,i,{level:0,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,format:l.a.RGBA,type:c.a.Float}))},e.prototype.__setupGPUVertexData=function(){if(this.__vertexDataTextureUid===o.a.InvalidCGAPIResourceUid){var e=C.a.getInstance().getBuffer(A.a.GPUVertexData),t=new Float32Array(e.getArrayBuffer());this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__vertexDataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:s.a.RGBA32F,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.Float,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__vertexDataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:l.a.RGBA,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.Float,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1})}},e.prototype.common_$prerender=function(){this.__setupUBOPrimitiveHeaderData(),this.__setupGPUInstanceMetaData(),this.__setupGPUInstanceData(),this.__setupGPUVertexData()},e.prototype.attachGPUData=function(){var e=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),t=this.__webglResourceRepository.getWebGLResource(this.__instanceDataTextureUid);e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t);var r=this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid),i=e.getUniformLocation(r,"u_instanceDataTexture");e.uniform1i(i,0);e=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),t=this.__webglResourceRepository.getWebGLResource(this.__vertexDataTextureUid);e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,t);r=this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);var n=e.getUniformLocation(r,"u_vertexDataTexture");e.uniform1i(n,1),this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"indexCountsToSubtract",0),this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"entityUids",1),this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"primitiveUids",2),this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"primitiveHeader",3)},e.prototype.attatchShaderProgram=function(){var e=this.__shaderProgramUid,t=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),r=this.__webglResourceRepository.getWebGLResource(e);t.useProgram(r)},e.prototype.attachVertexData=function(e,t,r,i){},e.getInstance=function(){return this.__instance||(this.__instance=new e),this.__instance},e.prototype.common_$render=function(e,t){var r=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();r.getRawContext();return this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.ViewMatrix,!0,4,"f",!0,{x:e.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.ProjectionMatrix,!0,4,"f",!0,{x:t.v}),!0},e}(),oe=function(){function e(){this.__webglResourceRepository=P.getInstance(),this.__dataTextureUid=o.a.InvalidCGAPIResourceUid,this.__shaderProgramUid=o.a.InvalidCGAPIResourceUid,this.__vertexHandles=[],this.__isVAOSet=!1}return Object.defineProperty(e.prototype,"vertexShaderMethodDefinitions_dataTexture",{get:function(){var e=Q.getInstance().glsl_texture;return"\n  uniform sampler2D u_dataTexture;\n  uniform mat4 u_viewMatrix;\n  uniform mat4 u_projectionMatrix;\n  uniform mat3 u_normalMatrix;\n\n  /*\n   * This idea from https://qiita.com/YVT/items/c695ab4b3cf7faa93885\n   * arg = vec2(1. / size.x, 1. / size.x / size.y);\n   */\n  // vec4 fetchElement(sampler2D tex, float index, vec2 arg)\n  // {\n  //   return "+e+"( tex, arg * (index + 0.5) );\n  // }\n\n  vec4 fetchElement(sampler2D tex, float index, vec2 invSize)\n  {\n    float t = (index + 0.5) * invSize.x;\n    float x = fract(t);\n    float y = (floor(t) + 0.5) * invSize.y;\n    return "+e+"( tex, vec2(x, y) );\n  }\n\n  mat4 getMatrix(float instanceId)\n  {\n    float index = instanceId;\n    float powWidthVal = "+C.a.bufferWidthLength+".0;\n    float powHeightVal = "+C.a.bufferHeightLength+".0;\n    vec2 arg = vec2(1.0/powWidthVal, 1.0/powHeightVal);\n  //  vec2 arg = vec2(1.0/powWidthVal, 1.0/powWidthVal/powHeightVal);\n\n    vec4 col0 = fetchElement(u_dataTexture, index * 4.0 + 0.0, arg);\n   vec4 col1 = fetchElement(u_dataTexture, index * 4.0 + 1.0, arg);\n   vec4 col2 = fetchElement(u_dataTexture, index * 4.0 + 2.0, arg);\n\n    mat4 matrix = mat4(\n      col0.x, col1.x, col2.x, 0.0,\n      col0.y, col1.y, col2.y, 0.0,\n      col0.z, col1.z, col2.z, 0.0,\n      col0.w, col1.w, col2.w, 1.0\n      );\n\n    return matrix;\n  }\n\n  mat4 getViewMatrix(float instanceId) {\n    return u_viewMatrix;\n  }\n\n  mat4 getProjectionMatrix(float instanceId) {\n    return u_projectionMatrix;\n  }\n\n  mat3 getNormalMatrix(float instanceId) {\n    return u_normalMatrix;\n  }\n\n  "},enumerable:!0,configurable:!0}),e.prototype.setupShaderProgram=function(){if(this.__shaderProgramUid===o.a.InvalidCGAPIResourceUid){var e=Q.getInstance(),t=e.vertexShaderVariableDefinitions+this.vertexShaderMethodDefinitions_dataTexture+e.vertexShaderBody,r=e.fragmentShader;this.__shaderProgramUid=this.__webglResourceRepository.createShaderProgram({vertexShaderStr:t,fragmentShaderStr:r,attributeNames:Q.attributeNames,attributeSemantics:Q.attributeSemantics}),this.__webglResourceRepository.setupUniformLocations(this.__shaderProgramUid,[{semantic:Y.ViewMatrix,isPlural:!1},{semantic:Y.ProjectionMatrix,isPlural:!1}])}},e.prototype.__isLoaded=function(e){return null!=this.__vertexHandles[e]},e.prototype.$load=function(t){if(!this.__isLoaded(0))for(var r=t.getPrimitiveNumber(),i=0;i<r;i++){var n=t.getPrimitiveAt(i),o=this.__webglResourceRepository.createVertexDataResources(n);this.__vertexHandles[i]=o,e.__vertexHandleOfPrimitiveObjectUids.set(n.objectUid,o)}},e.prototype.$prerender=function(t,r){if(!this.__isVAOSet){for(var i=t.getPrimitiveNumber(),n=0;n<i;n++){var o=t.getPrimitiveAt(n);this.__vertexHandles[n]=e.__vertexHandleOfPrimitiveObjectUids.get(o.objectUid),this.__webglResourceRepository.setVertexDataToPipeline(this.__vertexHandles[n],o,r)}this.__isVAOSet=!0}},e.prototype.common_$prerender=function(){var e=!1;(this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2||this.__webglResourceRepository.currentWebGLContextWrapper.isSupportWebGL1Extension(w.TextureHalfFloat))&&(e=!0);var t,r=C.a.getInstance().getBuffer(A.a.GPUInstanceData),i=new Float32Array(r.getArrayBuffer());if(e){t=new Uint16Array(i.length);var n=r.byteSizeInUse/4;n/=2;for(var a=0;a<n;a++)t[a]=T.a.toHalfFloat(i[a])}this.__dataTextureUid===o.a.InvalidCGAPIResourceUid?e?this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__dataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:s.a.RGBA16F,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.Float,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__dataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:l.a.RGBA,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.HalfFloat,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__dataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:s.a.RGBA32F,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.Float,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__dataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:l.a.RGBA,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,border:0,format:l.a.RGBA,type:c.a.Float,magFilter:s.a.Nearest,minFilter:s.a.Nearest,wrapS:s.a.Repeat,wrapT:s.a.Repeat,generateMipmap:!1,anisotropy:!1}):e?this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__webglResourceRepository.updateTexture(this.__dataTextureUid,i,{level:0,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,format:l.a.RGBA,type:c.a.Float}):this.__webglResourceRepository.updateTexture(this.__dataTextureUid,t,{level:0,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,format:l.a.RGBA,type:c.a.HalfFloat}):(this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2,this.__webglResourceRepository.updateTexture(this.__dataTextureUid,i,{level:0,width:C.a.bufferWidthLength,height:C.a.bufferHeightLength,format:l.a.RGBA,type:c.a.Float}))},e.prototype.attachGPUData=function(){var e=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),t=this.__webglResourceRepository.getWebGLResource(this.__dataTextureUid);e.bindTexture(e.TEXTURE_2D,t);var r=this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid),i=e.getUniformLocation(r,"u_dataTexture");e.uniform1i(i,0)},e.prototype.attatchShaderProgram=function(){var e=this.__shaderProgramUid,t=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),r=this.__webglResourceRepository.getWebGLResource(e);t.useProgram(r)},e.prototype.attachVertexData=function(e,t,r,i){var n=this.__vertexHandles[e],o=this.__webglResourceRepository.getWebGLResource(n.vaoHandle),a=r.getRawContext();if(null!=o)r.bindVertexArray(o);else{this.__webglResourceRepository.setVertexDataToPipeline(n,t,i);var s=this.__webglResourceRepository.getWebGLResource(n.iboHandle);a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,s)}},e.getInstance=function(){return this.__instance||(this.__instance=new e),this.__instance},e.prototype.common_$render=function(e,t){var r=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();r.getRawContext();return this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.ViewMatrix,!0,4,"f",!0,{x:e.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.ProjectionMatrix,!0,4,"f",!0,{x:t.v}),!0},e.__vertexHandleOfPrimitiveObjectUids=new Map,e}(),ae=r(15),se=r(39),le=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function i(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),ue=function(e){function t(){var t=e.call(this)||this;return t.vertexShaderBody="\n\nvoid main ()\n{\n  mat4 worldMatrix = getMatrix(a_instanceID);\n  mat4 viewMatrix = getViewMatrix(a_instanceID);\n  mat4 projectionMatrix = getProjectionMatrix(a_instanceID);\n  mat3 normalMatrix = getNormalMatrix(a_instanceID);\n\n  v_position_inWorld = worldMatrix * vec4(a_position, 1.0);\n\n  gl_Position = projectionMatrix * viewMatrix * v_position_inWorld;\n  v_color = a_color;\n  v_normal_inWorld = normalMatrix * a_normal;\n  v_texcoord = a_texcoord;\n\n  // Light\n  vec3 lightPosition = vec3(10000.0, 100000.0, 100000.0);\n  v_lightDirection = normalize(lightPosition - v_position_inWorld.xyz);\n\n  // Skeletal\n  "+t.processSkinningIfNeed+"\n\n//  v_color = vec3(u_boneMatrices[int(a_joint.x)][1].xyz);\n}\n  ",t}return le(t,e),t.getInstance=function(){return this.__instance||(this.__instance=new t),this.__instance},Object.defineProperty(t.prototype,"vertexShaderVariableDefinitions",{get:function(){var e=this.glsl_versionText,t=this.glsl_vertex_in,r=this.glsl_vertex_out;return e+"\nprecision highp float;\n"+t+" vec3 a_position;\n"+t+" vec3 a_color;\n"+t+" vec3 a_normal;\n"+t+" float a_instanceID;\n"+t+" vec2 a_texcoord;\n"+t+" vec4 a_joint;\n"+t+" vec4 a_weight;\n"+r+" vec3 v_color;\n"+r+" vec3 v_normal_inWorld;\n"+r+" vec4 v_position_inWorld;\n"+r+" vec3 v_lightDirection;\n"+r+" vec2 v_texcoord;\nuniform mat4 u_boneMatrices[100];\n\n"+this.toNormalMatrix+"\n\n"+this.getSkinMatrix+"\n\n"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fragmentShaderSimple",{get:function(){var e=this.glsl_versionText,t=this.glsl_fragment_in,r=this.glsl_rt0,i=this.glsl_fragColor,n=this.glsl_texture;return e+"\n"+this.glsl1ShaderTextureLodExt+"\nprecision highp float;\n\nstruct Material {\n  vec4 baseColorFactor;\n  sampler2D baseColorTexture;\n};\nuniform Material u_material;\n\nstruct Light {\n  vec4 lightPosition;\n  vec4 lightDirection;\n  vec4 lightIntensity;\n};\nuniform Light u_lights["+J.a.maxLightNumberInShader+"];\nuniform int u_lightNumber;\n\nuniform vec3 viewPosition_inWorld;\n\n"+t+" vec3 v_color;\n"+t+" vec3 v_normal_inWorld;\n"+t+" vec4 v_position_inWorld;\n"+t+" vec3 v_lightDirection;\n"+t+" vec2 v_texcoord;\n"+r+"\n\n"+this.pbrUniformDefinition+"\n\n"+this.pbrMethodDefinition+"\n\nvoid main ()\n{\n\n  // Normal\n  vec3 normal_inWorld = normalize(v_normal_inWorld);\n\n  // BaseColorFactor\n  vec3 baseColor = vec3(0.0, 0.0, 0.0);\n  float alpha = 1.0;\n  if (v_color != baseColor && u_material.baseColorFactor.rgb != baseColor) {\n    baseColor = v_color * u_material.baseColorFactor.rgb;\n    alpha = u_material.baseColorFactor.a;\n  } else if (v_color == baseColor) {\n    baseColor = u_material.baseColorFactor.rgb;\n    alpha = u_material.baseColorFactor.a;\n  } else if (u_material.baseColorFactor.rgb == baseColor) {\n    baseColor = v_color;\n  } else {\n    baseColor = vec3(1.0, 1.0, 1.0);\n  }\n\n\n  // BaseColor (take account for BaseColorTexture)\n  vec4 textureColor = "+n+"(u_material.baseColorTexture, v_texcoord);\n  if (textureColor.r > 0.05) {\n    baseColor *= srgbToLinear(textureColor.rgb);\n    alpha *= srgbToLinear(textureColor.a);\n  }\n\n  // Metallic & Roughness\n  float userRoughness = uMetallicRoughnessFactors.y;\n  float metallic = uMetallicRoughnessFactors.x;\n\n  vec4 ormTexel = texture2D(uMetallicRoughnessTexture, v_texcoord);\n  userRoughness = ormTexel.g * userRoughness;\n  metallic = ormTexel.b * metallic;\n\n  userRoughness = clamp(userRoughness, c_MinRoughness, 1.0);\n  metallic = clamp(metallic, 0.0, 1.0);\n  float alphaRoughness = userRoughness * userRoughness;\n\n  // F0\n  vec3 diffuseMatAverageF0 = vec3(0.04);\n  vec3 F0 = mix(diffuseMatAverageF0, baseColor.rgb, metallic);\n\n  // Albedo\n  vec3 albedo = baseColor.rgb * (vec3(1.0) - diffuseMatAverageF0);\n  albedo.rgb *= (1.0 - metallic);\n\n  // ViewDirection\n  vec3 viewDirection = normalize(viewPosition_inWorld - v_position_inWorld.xyz);\n\n  // NV\n  float NV = clamp(dot(normal_inWorld, viewDirection), 0.001, 1.0);\n\n  rt0 = vec4(0.0, 0.0, 0.0, alpha);\n\n  // Lighting\n  if (length(v_normal_inWorld) > 0.02) {\n    vec3 diffuse = vec3(0.0, 0.0, 0.0);\n    for (int i = 0; i < "+J.a.maxLightNumberInShader+"; i++) {\n      if (i >= u_lightNumber) {\n        break;\n      }\n\n      // Light\n      vec3 lightDirection = u_lights[i].lightDirection.xyz;\n      float lightType = u_lights[i].lightPosition.w;\n      float spotCosCutoff = u_lights[i].lightDirection.w;\n      float spotExponent = u_lights[i].lightIntensity.w;\n\n      if (0.75 < lightType) { // is pointlight or spotlight\n        lightDirection = normalize(u_lights[i].lightPosition.xyz - v_position_inWorld.xyz);\n      }\n      float spotEffect = 1.0;\n      if (lightType > 1.75) { // is spotlight\n        spotEffect = dot(u_lights[i].lightDirection.xyz, lightDirection);\n        if (spotEffect > spotCosCutoff) {\n          spotEffect = pow(spotEffect, spotExponent);\n        } else {\n          spotEffect = 0.0;\n        }\n      }\n      //diffuse += 1.0 * max(0.0, dot(normal_inWorld, lightDirection)) * spotEffect * u_lights[i].lightIntensity.xyz;\n\n      // IncidentLight\n      vec3 incidentLight = spotEffect * u_lights[i].lightIntensity.xyz;\n      incidentLight *= M_PI;\n\n      // Fresnel\n      vec3 halfVector = normalize(lightDirection + viewDirection);\n      float LH = clamp(dot(lightDirection, halfVector), 0.0, 1.0);\n      vec3 F = fresnel(F0, LH);\n\n      // Diffuse\n      vec3 diffuseContrib = (vec3(1.0) - F) * diffuse_brdf(albedo);\n\n      // Specular\n      float NL = clamp(dot(normal_inWorld, lightDirection), 0.001, 1.0);\n      float NH = clamp(dot(normal_inWorld, halfVector), 0.0, 1.0);\n      float VH = clamp(dot(viewDirection, halfVector), 0.0, 1.0);\n      vec3 specularContrib = cook_torrance_specular_brdf(NH, NL, NV, F, alphaRoughness);\n      vec3 diffuseAndSpecular = (diffuseContrib + specularContrib) * vec3(NL) * incidentLight.rgb;\n\n      rt0.xyz += diffuseAndSpecular;\n    }\n\n  }\n\n  "+i+"\n}\n"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fragmentShader",{get:function(){return this.fragmentShaderSimple},enumerable:!0,configurable:!0}),t.attributeNames=["a_position","a_color","a_normal","a_texcoord","a_joint","a_weight","a_instanceID"],t.attributeSemantics=[a.a.Position,a.a.Color0,a.a.Normal,a.a.Texcoord0,a.a.Joints0,a.a.Weights0,a.a.Instance],t}($),ce=r(8),_e=r(41),he=function(){function e(){this.__webglResourceRepository=P.getInstance(),this.__uboUid=o.a.InvalidCGAPIResourceUid,this.__shaderProgramUid=o.a.InvalidCGAPIResourceUid,this.vertexShaderMethodDefinitions_uniform="\n  uniform mat4 u_worldMatrix;\n  uniform mat4 u_viewMatrix;\n  uniform mat4 u_projectionMatrix;\n  uniform mat3 u_normalMatrix;\n\n  mat4 getMatrix(float instanceId) {\n    return u_worldMatrix;\n  }\n\n  mat4 getViewMatrix(float instanceId) {\n    return u_viewMatrix;\n  }\n\n  mat4 getProjectionMatrix(float instanceId) {\n    return u_projectionMatrix;\n  }\n\n  mat3 getNormalMatrix(float instanceId) {\n    return u_normalMatrix;\n  }\n\n  "}return e.prototype.setupShaderProgram=function(){if(this.__shaderProgramUid===o.a.InvalidCGAPIResourceUid){var e=ue.getInstance(),t=e.vertexShaderVariableDefinitions+this.vertexShaderMethodDefinitions_uniform+e.vertexShaderBody,r=e.fragmentShader;this.__shaderProgramUid=this.__webglResourceRepository.createShaderProgram({vertexShaderStr:t,fragmentShaderStr:r,attributeNames:ue.attributeNames,attributeSemantics:ue.attributeSemantics}),this.__shaderProgram=this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);for(var i=[{semantic:Y.WorldMatrix,isPlural:!1},{semantic:Y.BaseColorFactor,isPlural:!1,prefix:"material."},{semantic:Y.ViewMatrix,isPlural:!1},{semantic:Y.ProjectionMatrix,isPlural:!1},{semantic:Y.NormalMatrix,isPlural:!1},{semantic:Y.BaseColorTexture,isPlural:!1,prefix:"material."},{semantic:Y.BoneMatrix,isPlural:!0},{semantic:Y.LightNumber,isPlural:!1}],n=[],a=0;a<J.a.maxLightNumberInShader;a++)n.push({semanticStr:Y.LightPosition,isPlural:!1,prefix:"lights["+a+"].",index:a}),n.push({semanticStr:Y.LightDirection,isPlural:!1,prefix:"lights["+a+"].",index:a}),n.push({semanticStr:Y.LightIntensity,isPlural:!1,prefix:"lights["+a+"].",index:a});this.__webglResourceRepository.setupUniformLocations(this.__shaderProgramUid,i.concat(n))}},e.prototype.$load=function(t){for(var r=t.getPrimitiveNumber(),i=0;i<r;i++){var n=t.getPrimitiveAt(i),o=this.__webglResourceRepository.createVertexDataResources(n);e.__vertexHandleOfPrimitiveObjectUids.set(n.primitiveUid,o)}this.__dummyTextureUid=this.__webglResourceRepository.createDummyTexture()},e.prototype.$prerender=function(t,r){for(var i=[],n=t.getPrimitiveNumber(),o=0;o<n;o++){var a=t.getPrimitiveAt(o);i[o]=e.__vertexHandleOfPrimitiveObjectUids.get(a.primitiveUid),i[o].setComplete,this.__webglResourceRepository.setVertexDataToPipeline(i[o],a,r),i[o].setComplete=!0}},e.prototype.common_$prerender=function(){var e=ce.a.getInstance();this.__lightComponents=e.getComponentsWithType(_e.a)},e.prototype.attachGPUData=function(){},e.prototype.attatchShaderProgram=function(){this.__shaderProgramUid;this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext().useProgram(this.__shaderProgram)},e.prototype.attachVertexData=function(t,r,i,n){var o=e.__vertexHandleOfPrimitiveObjectUids.get(r.primitiveUid),a=this.__webglResourceRepository.getWebGLResource(o.vaoHandle),s=i.getRawContext();if(null!=a)i.bindVertexArray(a);else{this.__webglResourceRepository.setVertexDataToPipeline(o,r,n);var l=this.__webglResourceRepository.getWebGLResource(o.iboHandle);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,l)}},e.prototype.dettachVertexData=function(e){var t=e.getRawContext();e.bindVertexArray&&e.bindVertexArray(null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),t.bindBuffer(t.ARRAY_BUFFER,null)},e.getInstance=function(){return this.__instance||(this.__instance=new e),this.__instance},e.prototype.common_$render=function(e,t){var r=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();r.getRawContext();return this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.ViewMatrix,!0,4,"f",!0,{x:e.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.ProjectionMatrix,!0,4,"f",!0,{x:t.v}),!1},e.prototype.$render=function(e,t,r,i,n){var a=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();var s=a.getRawContext();this.attachVertexData(e,t,a,o.a.InvalidCGAPIResourceUid),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.WorldMatrix,!0,4,"f",!0,{x:ae.a.transpose(r).v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.NormalMatrix,!0,3,"f",!0,{x:i.v});var l=t.material,u=[];l?(u[0]=l.baseColor.r,u[1]=l.baseColor.g,u[2]=l.baseColor.b,u[3]=l.alpha):(u[0]=1,u[1]=1,u[2]=1,u[3]=1),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.BaseColorFactor,!1,4,"f",!0,{x:u}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.BaseColorTexture,!1,1,"i",!1,{x:0}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.LightNumber,!1,1,"i",!1,{x:this.__lightComponents.length});for(var c=0;c<this.__lightComponents.length&&!(c>=J.a.maxLightNumberInShader);c++){var _=this.__lightComponents[c],h=_.entity.getSceneGraph().worldPosition,g=_.direction,f=_.intensity;this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.LightPosition,!1,4,"f",!1,{x:h.x,y:h.y,z:h.z,w:_.type.index},c),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.LightDirection,!1,4,"f",!1,{x:g.x,y:g.y,z:g.z,w:0},c),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.LightIntensity,!1,4,"f",!1,{x:f.x,y:f.y,z:f.z,w:0},c)}var d=n.getComponent(se.a);if(d){var p=d.jointMatrices;this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,Y.BoneMatrix,!0,4,"f",!0,{x:p})}if(l&&l.baseColorTexture){var b=this.__webglResourceRepository.getWebGLResource(l.baseColorTexture.texture3DAPIResourseUid);s.bindTexture(s.TEXTURE_2D,b)}else{b=this.__webglResourceRepository.getWebGLResource(this.__dummyTextureUid);s.bindTexture(s.TEXTURE_2D,b)}s.drawElements(t.primitiveMode.index,t.indicesAccessor.elementCount,t.indicesAccessor.componentType.index,0),s.bindTexture(s.TEXTURE_2D,null),s.useProgram(null),this.dettachVertexData(a)},e.__vertexHandleOfPrimitiveObjectUids=new Map,e}(),ge=function(e){return e.index===n.a.UBOWebGL2.index?Z.getInstance():e.index===n.a.TransformFeedbackWebGL2.index?ne.getInstance():e.index===n.a.UniformWebGL1.index?he.getInstance():oe.getInstance()},fe=Object.freeze({getRenderingStrategy:ge,GLSLShader:$,WebGLContextWrapper:U,WebGLResourceRepository:P,WebGLStrategyDataTexture:oe,WebGLStrategyTransformFeedback:ne,WebGLStrategyUBO:Z,WebGLStrategyUniform:he});t.default=fe}}]);