(window.webpackJsonp=window.webpackJsonp||[]).push([["webgl"],{62:function(e,t,r){"use strict";r.r(t);var i,a=r(40),o=r(28),n=r(21),s=r(20),u=r(13),c=r(5),_=r(19),l=r(16),h=r(9),d=r(50),p=r(37),g=r(45),m=(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),f=function(e){function t(){var t=e.call(this)||this;return t.vertexShaderBody="\n\nvoid main ()\n{\n  mat4 worldMatrix = getMatrix(a_instanceID);\n  mat4 viewMatrix = getViewMatrix(a_instanceID);\n  mat4 projectionMatrix = getProjectionMatrix(a_instanceID);\n  mat3 normalMatrix = getNormalMatrix(a_instanceID);\n\n  v_position_inWorld = worldMatrix * vec4(a_position, 1.0);\n\n  gl_Position = projectionMatrix * viewMatrix * v_position_inWorld;\n  v_color = a_color;\n  v_normal_inWorld = normalMatrix * a_normal;\n  v_texcoord = a_texcoord;\n\n  // Skeletal\n  "+t.processSkinningIfNeed+"\n\n//  v_color = vec3(u_boneMatrices[int(a_joint.x)][1].xyz);\n}\n  ",t}return m(t,e),t.getInstance=function(){return this.__instance||(this.__instance=new t),this.__instance},Object.defineProperty(t.prototype,"vertexShaderVariableDefinitions",{get:function(){var e=this.glsl_versionText,t=this.glsl_vertex_in,r=this.glsl_vertex_out;return e+"\nprecision highp float;\n"+t+" vec3 a_position;\n"+t+" vec3 a_color;\n"+t+" vec3 a_normal;\n"+t+" float a_instanceID;\n"+t+" vec2 a_texcoord;\n"+t+" vec4 a_joint;\n"+t+" vec4 a_weight;\n"+r+" vec3 v_color;\n"+r+" vec3 v_normal_inWorld;\n"+r+" vec4 v_position_inWorld;\n"+r+" vec2 v_texcoord;\nuniform mat4 u_boneMatrices[100];\n\n"+this.toNormalMatrix+"\n\n"+this.getSkinMatrix+"\n\n"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fragmentShaderSimple",{get:function(){var e=this.glsl_versionText,t=this.glsl_fragment_in,r=this.glsl_rt0,i=this.glsl_fragColor,a=this.glsl_texture;return e+"\nprecision highp float;\n\nstruct Material {\n  vec4 baseColorFactor;\n  sampler2D baseColorTexture;\n};\nuniform Material u_material;\n\nstruct Light {\n  vec4 lightPosition;\n  vec4 lightDirection;\n  vec4 lightIntensity;\n};\nuniform Light u_lights["+p.a.maxLightNumberInShader+"];\nuniform int u_lightNumber;\n\n"+t+" vec3 v_color;\n"+t+" vec3 v_normal_inWorld;\n"+t+" vec4 v_position_inWorld;\n"+t+" vec2 v_texcoord;\n"+r+"\nvoid main ()\n{\n\n  // Normal\n  vec3 normal_inWorld = normalize(v_normal_inWorld);\n\n  // baseColor\n  vec3 color = vec3(0.0, 0.0, 0.0);\n  if (v_color != color && u_material.baseColorFactor.rgb != color) {\n    color = v_color * u_material.baseColorFactor.rgb;\n  } else if (v_color == color) {\n    color = u_material.baseColorFactor.rgb;\n  } else if (u_material.baseColorFactor.rgb == color) {\n    color = v_color;\n  } else {\n    color = vec3(1.0, 1.0, 1.0);\n  }\n  //color = v_color;\n\n  // baseColorTexture\n  vec4 textureColor = "+a+"(u_material.baseColorTexture, v_texcoord);\n  if (textureColor.r > 0.05) {\n    color *= textureColor.rgb;\n  }\n\n  // Lighting\n  if (length(v_normal_inWorld) > 0.02) {\n    vec3 diffuse = vec3(0.0, 0.0, 0.0);\n    for (int i = 0; i < "+p.a.maxLightNumberInShader+"; i++) {\n      if (i >= u_lightNumber) {\n        break;\n      }\n\n      vec3 lightDirection = u_lights[i].lightDirection.xyz;\n      float lightType = u_lights[i].lightPosition.w;\n      float spotCosCutoff = u_lights[i].lightDirection.w;\n      float spotExponent = u_lights[i].lightIntensity.w;\n\n      if (0.75 < lightType) { // is pointlight or spotlight\n        lightDirection = normalize(u_lights[i].lightPosition.xyz - v_position_inWorld.xyz);\n      }\n      float spotEffect = 1.0;\n      if (lightType > 1.75) { // is spotlight\n        spotEffect = dot(u_lights[i].lightDirection.xyz, lightDirection);\n        if (spotEffect > spotCosCutoff) {\n          spotEffect = pow(spotEffect, spotExponent);\n        } else {\n          spotEffect = 0.0;\n        }\n      }\n\n      vec3 incidentLight = spotEffect * u_lights[i].lightIntensity.xyz;\n//      incidentLight *= M_PI;\n\n      diffuse += 1.0 * max(0.0, dot(normal_inWorld, lightDirection)) * incidentLight;\n    }\n\n    color *= diffuse;\n  }\n\n  rt0 = vec4(color, 1.0);\n  //rt0 = vec4(u_lightNumber, 0.0, 0.0, 1.0);\n\n\n  "+i+"\n}\n"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fragmentShader",{get:function(){return this.fragmentShaderSimple},enumerable:!0,configurable:!0}),t.materialElement=g.a.ClassicShading,t.attributeNames=["a_position","a_color","a_normal","a_texcoord","a_joint","a_weight","a_instanceID"],t.attributeSemantics=[h.a.Position,h.a.Color0,h.a.Normal,h.a.Texcoord0,h.a.Joints0,h.a.Weights0,h.a.Instance],t}(d.a),b=function(){function e(){this.__webglResourceRepository=o.a.getInstance(),this.__uboUid=_.a.InvalidCGAPIResourceUid,this.__shaderProgramUid=_.a.InvalidCGAPIResourceUid,this.__vertexHandles=[],this.__isVAOSet=!1,this.vertexShaderMethodDefinitions_UBO="layout (std140) uniform matrix {\n    mat4 world[1024];\n  } u_matrix;\n\n  uniform mat4 u_viewMatrix;\n  uniform mat4 u_projectionMatrix;\n  uniform mat3 u_normalMatrix;\n\n  mat4 getMatrix(float instanceId) {\n    float index = instanceId;\n    return transpose(u_matrix.world[int(index)]);\n  }\n\n  mat4 getViewMatrix(float instanceId) {\n    return u_viewMatrix;\n  }\n\n  mat4 getProjectionMatrix(float instanceId) {\n    return u_projectionMatrix;\n  }\n\n  mat3 getNormalMatrix(float instanceId) {\n    return u_normalMatrix;\n  }\n\n  "}return e.prototype.setupShaderProgram=function(){if(this.__shaderProgramUid===_.a.InvalidCGAPIResourceUid){var e=f.getInstance(),t=e.vertexShaderVariableDefinitions+this.vertexShaderMethodDefinitions_UBO+e.vertexShaderBody,r=e.fragmentShader;this.__shaderProgramUid=this.__webglResourceRepository.createShaderProgram({vertexShaderStr:t,fragmentShaderStr:r,attributeNames:f.attributeNames,attributeSemantics:f.attributeSemantics}),this.__webglResourceRepository.setupUniformLocations(this.__shaderProgramUid,[{semantic:l.a.ViewMatrix,isPlural:!1,isSystem:!0},{semantic:l.a.ProjectionMatrix,isPlural:!1,isSystem:!0}])}},e.prototype.__isLoaded=function(e){return null!=this.__vertexHandles[e]},e.prototype.$load=function(t){if(!this.__isLoaded(0))for(var r=t.getPrimitiveNumber(),i=0;i<r;i++){var a=t.getPrimitiveAt(i),o=this.__webglResourceRepository.createVertexDataResources(a);this.__vertexHandles[i]=o,e.__vertexHandleOfPrimitiveObjectUids.set(a.objectUid,o)}},e.prototype.$prerender=function(t,r){if(!this.__isVAOSet){for(var i=t.getPrimitiveNumber(),a=0;a<i;a++){var o=t.getPrimitiveAt(a);this.__vertexHandles[a]=e.__vertexHandleOfPrimitiveObjectUids.get(o.objectUid),this.__webglResourceRepository.setVertexDataToPipeline(this.__vertexHandles[a],o,r)}this.__isVAOSet=!0}},e.prototype.common_$prerender=function(){var e=n.a.getInstance().getBuffer(c.a.GPUInstanceData);new Float32Array(e.getArrayBuffer());this.__uboUid===_.a.InvalidCGAPIResourceUid?(this.__uboUid=this.__webglResourceRepository.createUniformBuffer(u.a.getAccessor("worldMatrix",u.a).dataViewOfBufferView),this.__webglResourceRepository.bindUniformBufferBase(0,this.__uboUid)):this.__webglResourceRepository.updateUniformBuffer(this.__uboUid,u.a.getAccessor("worldMatrix",u.a).dataViewOfBufferView)},e.prototype.attachGPUData=function(){this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"matrix",0)},e.prototype.attatchShaderProgram=function(){var e=this.__shaderProgramUid,t=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),r=this.__webglResourceRepository.getWebGLResource(e);t.useProgram(r)},e.prototype.attachVertexData=function(e,t,r,i){var a=this.__vertexHandles[e],o=this.__webglResourceRepository.getWebGLResource(a.vaoHandle),n=r.getRawContext();if(null!=o)r.bindVertexArray(o);else{this.__webglResourceRepository.setVertexDataToPipeline(a,t,i);var s=this.__webglResourceRepository.getWebGLResource(a.iboHandle);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,s)}},e.getInstance=function(){return this.__instance||(this.__instance=new e),this.__instance},e.prototype.common_$render=function(e,t){var r=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();r.getRawContext();return this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.ViewMatrix,!0,4,"f",!0,{x:e.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.ProjectionMatrix,!0,4,"f",!0,{x:t.v}),!0},e.__vertexHandleOfPrimitiveObjectUids=new Map,e}(),x=r(32),R=r(38),y=r(1),v=r(24),U=r(39),w=r(27),P=r(44),T=r(2),L=r(17),S=function(){function e(){this.__webglResourceRepository=o.a.getInstance(),this.__instanceDataTextureUid=_.a.InvalidCGAPIResourceUid,this.__vertexDataTextureUid=_.a.InvalidCGAPIResourceUid,this.__shaderProgramUid=_.a.InvalidCGAPIResourceUid,this.__primitiveHeaderUboUid=_.a.InvalidCGAPIResourceUid,this.__indexCountToSubtractUboUid=_.a.InvalidCGAPIResourceUid,this.__entitiesUidUboUid=_.a.InvalidCGAPIResourceUid,this.__primitiveUidUboUid=_.a.InvalidCGAPIResourceUid,this.__isVertexReady=!1}return Object.defineProperty(e.prototype,"__transformFeedbackShaderText",{get:function(){f.getInstance().glsl_vertex_in,f.getInstance().glsl_texture;return"#version 300 es\n\n    layout (std140) uniform indexCountsToSubtract {\n      ivec4 counts[256];\n    } u_indexCountsToSubtract;\n    layout (std140) uniform entityUids {\n      ivec4 ids[256];\n    } u_entityData;\n    layout (std140) uniform primitiveUids {\n      ivec4 ids[256];\n    } u_primitiveData;\n    layout (std140) uniform primitiveHeader {\n      ivec4 data[256];\n    } u_primitiveHeader;\n\n    out vec4 position;\n    //out vec3 colors;\n\n    uniform sampler2D u_instanceDataTexture;\n    uniform sampler2D u_vertexDataTexture;\n\n    void main(){\n      int indexOfVertices = gl_VertexID + 3*gl_InstanceID;\n\n      int entityUidMinusOne = 0;\n      int primitiveUid = 0;\n      for (int i=0; i<=indexOfVertices; i++) {\n        for (int j=0; j<1024; j++) {\n          int value = u_indexCountsToSubtract.counts[j/4][j%4];\n          int result = int(step(float(value), float(i)));\n          if (result > 0) {\n            entityUidMinusOne = result * int(u_entityData.ids[j/4][j%4]) - 1;\n            primitiveUid = result * u_primitiveData.ids[j/4][j%4];\n          } else {\n            break;\n          }\n        }\n      }\n\n      ivec4 indicesMeta = u_primitiveHeader.data[9*primitiveUid + 0];\n      int primIndicesByteOffset = indicesMeta.x;\n      int primIndicesComponentSizeInByte = indicesMeta.y;\n      int primIndicesLength = indicesMeta.z;\n\n      int idx = gl_VertexID - primIndicesByteOffset / 4 /*byte*/;\n\n      // get Indices\n      int texelLength = "+n.a.bufferWidthLength+";\n      vec4 indexVec4 = texelFetch(u_vertexDataTexture, ivec2(idx%texelLength, idx/texelLength), 0);\n      int index = int(indexVec4[idx%4]);\n\n      // get Positions\n      ivec4 indicesData = u_primitiveHeader.data[9*primitiveUid + 1];\n      int primPositionsByteOffset = indicesData.x;\n      idx = primPositionsByteOffset/4 + index;\n      vec4 posVec4 = texelFetch(u_vertexDataTexture, ivec2(idx%texelLength, idx/texelLength), 0);\n\n      position = posVec4;\n    }\n"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"__transformFeedbackFragmentShaderText",{get:function(){return"#version 300 es\nprecision highp float;\n\nout vec4 outColor;\n\nvoid main(){\n    outColor = vec4(1.0);\n}\n    "},enumerable:!0,configurable:!0}),e.prototype.setupShaderProgram=function(){if(this.__shaderProgramUid===_.a.InvalidCGAPIResourceUid){var e=this.__transformFeedbackShaderText,t=this.__transformFeedbackFragmentShaderText;this.__shaderProgramUid=this.__webglResourceRepository.createShaderProgram({vertexShaderStr:e,fragmentShaderStr:t,attributeNames:f.attributeNames,attributeSemantics:f.attributeSemantics}),this.__webglResourceRepository.setupUniformLocations(this.__shaderProgramUid,[{semantic:l.a.ViewMatrix,isPlural:!1,isSystem:!0},{semantic:l.a.ProjectionMatrix,isPlural:!1,isSystem:!0}])}},e.prototype.$load=function(e){if(!this.__isVertexReady){var t=n.a.getInstance().getBuffer(c.a.CPUGeneric),r=t.takeBufferView({byteLengthToNeed:12,byteStride:4,isAoS:!1}).takeAccessor({compositionType:T.a.Scalar,componentType:y.a.UnsingedInt,count:3}),i=t.takeBufferView({byteLengthToNeed:48,byteStride:16,isAoS:!1}).takeAccessor({compositionType:T.a.Vec4,componentType:y.a.Float,count:3}),a=r.getTypedArray();a[0]=0,a[1]=1,a[2]=2;var o=P.a.createPrimitive({indices:a,attributeCompositionTypes:[i.compositionType],attributeSemantics:[h.a.Position],attributes:[i.getTypedArray()],primitiveMode:L.a.Triangles,material:void 0});this.__vertexHandle=this.__webglResourceRepository.createVertexDataResources(o),this.__isVertexReady=!0}},e.prototype.$prerender=function(e,t){},e.prototype.__setupUBOPrimitiveHeaderData=function(){var e=n.a.getInstance().getBuffer(c.a.UBOGeneric),t=new Int32Array(e.getArrayBuffer());this.__primitiveHeaderUboUid===_.a.InvalidCGAPIResourceUid&&(this.__primitiveHeaderUboUid=this.__webglResourceRepository.createUniformBuffer(t),this.__webglResourceRepository.bindUniformBufferBase(3,this.__primitiveHeaderUboUid))},e.prototype.__setupGPUInstanceMetaData=function(){if(this.__primitiveUidUboUid===_.a.InvalidCGAPIResourceUid){var e=U.a.getInstance()._getEntities(),t=new Int32Array(e.length),r=new Int32Array(e.length),i=new Int32Array(e.length),a=0;e.forEach(function(e,o){var n=e.getComponent(w.a);if(n){r[o]=n.getPrimitiveAt(0).primitiveUid,t[o]=e.entityUID;var s=n.getPrimitiveAt(0).indicesAccessor.elementCount;i[o]=a+s,a+=s}}),this.__indexCountToSubtractUboUid=this.__webglResourceRepository.createUniformBuffer(i),this.__webglResourceRepository.bindUniformBufferBase(0,this.__indexCountToSubtractUboUid),this.__entitiesUidUboUid=this.__webglResourceRepository.createUniformBuffer(t),this.__webglResourceRepository.bindUniformBufferBase(1,this.__entitiesUidUboUid),this.__primitiveUidUboUid=this.__webglResourceRepository.createUniformBuffer(r),this.__webglResourceRepository.bindUniformBufferBase(2,this.__primitiveUidUboUid)}},e.prototype.__setupGPUInstanceData=function(){var e=!1;(this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2||this.__webglResourceRepository.currentWebGLContextWrapper.isSupportWebGL1Extension(x.a.TextureHalfFloat))&&(e=!0);var t,r=n.a.getInstance().getBuffer(c.a.GPUInstanceData),i=new Float32Array(r.getArrayBuffer());if(e){t=new Uint16Array(i.length);var a=r.byteSizeInUse/4;a/=2;for(var o=0;o<a;o++)t[o]=s.a.toHalfFloat(i[o])}this.__instanceDataTextureUid===_.a.InvalidCGAPIResourceUid?e?this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__instanceDataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:v.a.RGBA16F,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.Float,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__instanceDataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:R.a.RGBA,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.HalfFloat,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__instanceDataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:v.a.RGBA32F,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.Float,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__instanceDataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:R.a.RGBA,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.Float,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1}):e?this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid,i,{level:0,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,format:R.a.RGBA,type:y.a.Float}):this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid,t,{level:0,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,format:R.a.RGBA,type:y.a.HalfFloat}):(this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2,this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid,i,{level:0,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,format:R.a.RGBA,type:y.a.Float}))},e.prototype.__setupGPUVertexData=function(){if(this.__vertexDataTextureUid===_.a.InvalidCGAPIResourceUid){var e=n.a.getInstance().getBuffer(c.a.GPUVertexData),t=new Float32Array(e.getArrayBuffer());this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__vertexDataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:v.a.RGBA32F,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.Float,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__vertexDataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:R.a.RGBA,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.Float,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1})}},e.prototype.common_$prerender=function(){this.__setupUBOPrimitiveHeaderData(),this.__setupGPUInstanceMetaData(),this.__setupGPUInstanceData(),this.__setupGPUVertexData()},e.prototype.attachGPUData=function(){var e=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),t=this.__webglResourceRepository.getWebGLResource(this.__instanceDataTextureUid);e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t);var r=this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid),i=e.getUniformLocation(r,"u_instanceDataTexture");e.uniform1i(i,0);e=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),t=this.__webglResourceRepository.getWebGLResource(this.__vertexDataTextureUid);e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,t);r=this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);var a=e.getUniformLocation(r,"u_vertexDataTexture");e.uniform1i(a,1),this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"indexCountsToSubtract",0),this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"entityUids",1),this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"primitiveUids",2),this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid,"primitiveHeader",3)},e.prototype.attatchShaderProgram=function(){var e=this.__shaderProgramUid,t=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),r=this.__webglResourceRepository.getWebGLResource(e);t.useProgram(r)},e.prototype.attachVertexData=function(e,t,r,i){},e.getInstance=function(){return this.__instance||(this.__instance=new e),this.__instance},e.prototype.common_$render=function(e,t){var r=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();r.getRawContext();return this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.ViewMatrix,!0,4,"f",!0,{x:e.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.ProjectionMatrix,!0,4,"f",!0,{x:t.v}),!0},e}(),I=function(){function e(){this.__webglResourceRepository=o.a.getInstance(),this.__dataTextureUid=_.a.InvalidCGAPIResourceUid,this.__shaderProgramUid=_.a.InvalidCGAPIResourceUid,this.__vertexHandles=[],this.__isVAOSet=!1}return Object.defineProperty(e.prototype,"vertexShaderMethodDefinitions_dataTexture",{get:function(){var e=f.getInstance().glsl_texture;return"\n  uniform sampler2D u_dataTexture;\n  uniform mat4 u_viewMatrix;\n  uniform mat4 u_projectionMatrix;\n  uniform mat3 u_normalMatrix;\n\n  /*\n   * This idea from https://qiita.com/YVT/items/c695ab4b3cf7faa93885\n   * arg = vec2(1. / size.x, 1. / size.x / size.y);\n   */\n  // vec4 fetchElement(sampler2D tex, float index, vec2 arg)\n  // {\n  //   return "+e+"( tex, arg * (index + 0.5) );\n  // }\n\n  vec4 fetchElement(sampler2D tex, float index, vec2 invSize)\n  {\n    float t = (index + 0.5) * invSize.x;\n    float x = fract(t);\n    float y = (floor(t) + 0.5) * invSize.y;\n    return "+e+"( tex, vec2(x, y) );\n  }\n\n  mat4 getMatrix(float instanceId)\n  {\n    float index = instanceId;\n    float powWidthVal = "+n.a.bufferWidthLength+".0;\n    float powHeightVal = "+n.a.bufferHeightLength+".0;\n    vec2 arg = vec2(1.0/powWidthVal, 1.0/powHeightVal);\n  //  vec2 arg = vec2(1.0/powWidthVal, 1.0/powWidthVal/powHeightVal);\n\n    vec4 col0 = fetchElement(u_dataTexture, index * 4.0 + 0.0, arg);\n   vec4 col1 = fetchElement(u_dataTexture, index * 4.0 + 1.0, arg);\n   vec4 col2 = fetchElement(u_dataTexture, index * 4.0 + 2.0, arg);\n\n    mat4 matrix = mat4(\n      col0.x, col1.x, col2.x, 0.0,\n      col0.y, col1.y, col2.y, 0.0,\n      col0.z, col1.z, col2.z, 0.0,\n      col0.w, col1.w, col2.w, 1.0\n      );\n\n    return matrix;\n  }\n\n  mat4 getViewMatrix(float instanceId) {\n    return u_viewMatrix;\n  }\n\n  mat4 getProjectionMatrix(float instanceId) {\n    return u_projectionMatrix;\n  }\n\n  mat3 getNormalMatrix(float instanceId) {\n    return u_normalMatrix;\n  }\n\n  "},enumerable:!0,configurable:!0}),e.prototype.setupShaderProgram=function(){if(this.__shaderProgramUid===_.a.InvalidCGAPIResourceUid){var e=f.getInstance(),t=e.vertexShaderVariableDefinitions+this.vertexShaderMethodDefinitions_dataTexture+e.vertexShaderBody,r=e.fragmentShader;this.__shaderProgramUid=this.__webglResourceRepository.createShaderProgram({vertexShaderStr:t,fragmentShaderStr:r,attributeNames:f.attributeNames,attributeSemantics:f.attributeSemantics}),this.__webglResourceRepository.setupUniformLocations(this.__shaderProgramUid,[{semantic:l.a.ViewMatrix,isPlural:!1,isSystem:!0},{semantic:l.a.ProjectionMatrix,isPlural:!1,isSystem:!0}])}},e.prototype.__isLoaded=function(e){return null!=this.__vertexHandles[e]},e.prototype.$load=function(t){if(!this.__isLoaded(0))for(var r=t.getPrimitiveNumber(),i=0;i<r;i++){var a=t.getPrimitiveAt(i),o=this.__webglResourceRepository.createVertexDataResources(a);this.__vertexHandles[i]=o,e.__vertexHandleOfPrimitiveObjectUids.set(a.objectUid,o)}},e.prototype.$prerender=function(t,r){if(!this.__isVAOSet){for(var i=t.getPrimitiveNumber(),a=0;a<i;a++){var o=t.getPrimitiveAt(a);this.__vertexHandles[a]=e.__vertexHandleOfPrimitiveObjectUids.get(o.objectUid),this.__webglResourceRepository.setVertexDataToPipeline(this.__vertexHandles[a],o,r)}this.__isVAOSet=!0}},e.prototype.common_$prerender=function(){var e=!1;(this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2||this.__webglResourceRepository.currentWebGLContextWrapper.isSupportWebGL1Extension(x.a.TextureHalfFloat))&&(e=!0);var t,r=n.a.getInstance().getBuffer(c.a.GPUInstanceData),i=new Float32Array(r.getArrayBuffer());if(e){t=new Uint16Array(i.length);var a=r.byteSizeInUse/4;a/=2;for(var o=0;o<a;o++)t[o]=s.a.toHalfFloat(i[o])}this.__dataTextureUid===_.a.InvalidCGAPIResourceUid?e?this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__dataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:v.a.RGBA16F,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.Float,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__dataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:R.a.RGBA,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.HalfFloat,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__dataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:v.a.RGBA32F,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.Float,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__dataTextureUid=this.__webglResourceRepository.createTexture(i,{level:0,internalFormat:R.a.RGBA,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,border:0,format:R.a.RGBA,type:y.a.Float,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.Repeat,wrapT:v.a.Repeat,generateMipmap:!1,anisotropy:!1}):e?this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__webglResourceRepository.updateTexture(this.__dataTextureUid,i,{level:0,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,format:R.a.RGBA,type:y.a.Float}):this.__webglResourceRepository.updateTexture(this.__dataTextureUid,t,{level:0,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,format:R.a.RGBA,type:y.a.HalfFloat}):(this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2,this.__webglResourceRepository.updateTexture(this.__dataTextureUid,i,{level:0,width:n.a.bufferWidthLength,height:n.a.bufferHeightLength,format:R.a.RGBA,type:y.a.Float}))},e.prototype.attachGPUData=function(){var e=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),t=this.__webglResourceRepository.getWebGLResource(this.__dataTextureUid);e.bindTexture(e.TEXTURE_2D,t);var r=this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid),i=e.getUniformLocation(r,"u_dataTexture");e.uniform1i(i,0)},e.prototype.attatchShaderProgram=function(){var e=this.__shaderProgramUid,t=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),r=this.__webglResourceRepository.getWebGLResource(e);t.useProgram(r)},e.prototype.attachVertexData=function(e,t,r,i){var a=this.__vertexHandles[e],o=this.__webglResourceRepository.getWebGLResource(a.vaoHandle),n=r.getRawContext();if(null!=o)r.bindVertexArray(o);else{this.__webglResourceRepository.setVertexDataToPipeline(a,t,i);var s=this.__webglResourceRepository.getWebGLResource(a.iboHandle);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,s)}},e.getInstance=function(){return this.__instance||(this.__instance=new e),this.__instance},e.prototype.common_$render=function(e,t){var r=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();r.getRawContext();return this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.ViewMatrix,!0,4,"f",!0,{x:e.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.ProjectionMatrix,!0,4,"f",!0,{x:t.v}),!0},e.__vertexHandleOfPrimitiveObjectUids=new Map,e}(),G=r(31),W=r(49),C=r(26),A=r(52),D=r(8),M=r(53),B=r(34),V=r(43),F=function(e,t,r,i){return new(r||(r=Promise))(function(a,o){function n(e){try{u(i.next(e))}catch(e){o(e)}}function s(e){try{u(i.throw(e))}catch(e){o(e)}}function u(e){e.done?a(e.value):new r(function(t){t(e.value)}).then(n,s)}u((i=i.apply(e,t||[])).next())})},E=function(e,t){var r,i,a,o,n={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;n;)try{if(r=1,i&&(a=2&o[0]?i.return:o[0]?i.throw||((a=i.return)&&a.call(i),0):i.next)&&!(a=a.call(i,o[1])).done)return a;switch(i=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return n.label++,{value:o[1],done:!1};case 5:n.label++,i=o[1],o=[0];continue;case 7:o=n.ops.pop(),n.trys.pop();continue;default:if(!(a=(a=n.trys).length>0&&a[a.length-1])&&(6===o[0]||2===o[0])){n=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){n.label=o[1];break}if(6===o[0]&&n.label<a[1]){n.label=a[1],a=o;break}if(a&&n.label<a[2]){n.label=a[2],n.ops.push(o);break}a[2]&&n.ops.pop(),n.trys.pop();continue}o=t.call(e,n)}catch(e){o=[6,e],i=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}},N=function(){function e(){this.__webglResourceRepository=o.a.getInstance(),this.__uboUid=_.a.InvalidCGAPIResourceUid,this.__shaderProgramUid=_.a.InvalidCGAPIResourceUid,this.vertexShaderMethodDefinitions_uniform="\n  uniform mat4 u_worldMatrix;\n  uniform mat4 u_viewMatrix;\n  uniform mat4 u_projectionMatrix;\n  uniform mat3 u_normalMatrix;\n\n  mat4 getMatrix(float instanceId) {\n    return u_worldMatrix;\n  }\n\n  mat4 getViewMatrix(float instanceId) {\n    return u_viewMatrix;\n  }\n\n  mat4 getProjectionMatrix(float instanceId) {\n    return u_projectionMatrix;\n  }\n\n  mat3 getNormalMatrix(float instanceId) {\n    return u_normalMatrix;\n  }\n\n  "}return e.prototype.setupShaderProgram=function(e){if(this.__shaderProgramUid===_.a.InvalidCGAPIResourceUid){var t=A.a.getInstance(),r=t.vertexShaderVariableDefinitions+this.vertexShaderMethodDefinitions_uniform+t.vertexShaderBody,i=t.fragmentShader;this.__shaderProgramUid=this.__webglResourceRepository.createShaderProgram({vertexShaderStr:r,fragmentShaderStr:i,attributeNames:A.a.attributeNames,attributeSemantics:A.a.attributeSemantics}),this.__shaderProgram=this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);for(var a=[{semantic:l.a.WorldMatrix,isPlural:!1,isSystem:!0},{semantic:l.a.ViewMatrix,isPlural:!1,isSystem:!0},{semantic:l.a.ProjectionMatrix,isPlural:!1,isSystem:!0},{semantic:l.a.NormalMatrix,isPlural:!1,isSystem:!0},{semantic:l.a.BoneMatrix,isPlural:!0,isSystem:!0},{semantic:l.a.LightNumber,isPlural:!1,isSystem:!0},{semantic:l.a.ViewPosition,isPlural:!1,isSystem:!0},{semantic:l.a.DiffuseEnvTexture,compositionType:T.a.TextureCube,componentType:y.a.Int,isPlural:!1,isSystem:!0},{semantic:l.a.SpecularEnvTexture,compositionType:T.a.TextureCube,componentType:y.a.Int,isPlural:!1,isSystem:!0},{semantic:l.a.IBLParameter,compositionType:T.a.Vec3,componentType:y.a.Float,isPlural:!1,isSystem:!0},{semantic:l.a.BrdfLutTexture,compositionType:T.a.Texture2D,componentType:y.a.Int,isPlural:!1,isSystem:!0}],o=[],n=0;n<p.a.maxLightNumberInShader;n++)o.push({semantic:l.a.LightPosition,isPlural:!1,prefix:"lights["+n+"].",index:n,isSystem:!0}),o.push({semantic:l.a.LightDirection,isPlural:!1,prefix:"lights["+n+"].",index:n,isSystem:!0}),o.push({semantic:l.a.LightIntensity,isPlural:!1,prefix:"lights["+n+"].",index:n,isSystem:!0});this.__webglResourceRepository.setupUniformLocations(this.__shaderProgramUid,a.concat(o));var s=e.getPrimitiveNumber();for(n=0;n<s;n++){var u=e.getPrimitiveAt(n);u.material&&u.material.setUniformLocations(this.__shaderProgramUid)}}},e.prototype.$load=function(t){return F(this,void 0,void 0,function(){var r,i,a,o,n,s;return E(this,function(u){switch(u.label){case 0:for(this.setupShaderProgram(t),r=t.getPrimitiveNumber(),i=0;i<r;i++)a=t.getPrimitiveAt(i),o=this.__webglResourceRepository.createVertexDataResources(a),e.__vertexHandleOfPrimitiveObjectUids.set(a.primitiveUid,o);return this.__dummyWhiteTextureUid=this.__webglResourceRepository.createDummyTexture(),this.__dummyBlackTextureUid=this.__webglResourceRepository.createDummyTexture("rgba(0, 0, 0, 1)"),this.__dummyBlackCubeTextureUid=this.__webglResourceRepository.createDummyCubeTexture(),n=B.a.getInstance().getModule("pbr").pbrCookTorranceBrdfLutDataUrl,s=this,[4,this.__webglResourceRepository.createTextureFromDataUri(n,{level:0,internalFormat:R.a.RGBA,border:0,format:R.a.RGBA,type:y.a.Float,magFilter:v.a.Nearest,minFilter:v.a.Nearest,wrapS:v.a.ClampToEdge,wrapT:v.a.ClampToEdge,generateMipmap:!1,anisotropy:!1})];case 1:return s.__pbrCookTorranceBrdfLutDataUrlUid=u.sent(),[2]}})})},e.prototype.$prerender=function(t,r){for(var i=[],a=t.getPrimitiveNumber(),o=0;o<a;o++){var n=t.getPrimitiveAt(o);i[o]=e.__vertexHandleOfPrimitiveObjectUids.get(n.primitiveUid),i[o].setComplete,this.__webglResourceRepository.setVertexDataToPipeline(i[o],n,r),i[o].setComplete=!0}},e.prototype.common_$prerender=function(){var e=D.a.getInstance();this.__lightComponents=e.getComponentsWithType(M.a)},e.prototype.attachGPUData=function(){},e.prototype.attatchShaderProgram=function(){this.__shaderProgramUid;this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext().useProgram(this.__shaderProgram)},e.prototype.attachVertexData=function(t,r,i,a){var o=e.__vertexHandleOfPrimitiveObjectUids.get(r.primitiveUid),n=this.__webglResourceRepository.getWebGLResource(o.vaoHandle),s=i.getRawContext();if(null!=n)i.bindVertexArray(n);else{this.__webglResourceRepository.setVertexDataToPipeline(o,r,a);var u=this.__webglResourceRepository.getWebGLResource(o.iboHandle);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,u)}},e.prototype.dettachVertexData=function(e){var t=e.getRawContext();e.bindVertexArray&&e.bindVertexArray(null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),t.bindBuffer(t.ARRAY_BUFFER,null)},e.getInstance=function(){return this.__instance||(this.__instance=new e),this.__instance},e.prototype.common_$render=function(e,t){var r=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();r.getRawContext();return this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.ViewMatrix,!0,4,"f",!0,{x:e.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.ProjectionMatrix,!0,4,"f",!0,{x:t.v}),!1},e.prototype.$render=function(e,t,r,i,a,o){var n=this.__webglResourceRepository.currentWebGLContextWrapper;this.attatchShaderProgram();var s=n.getRawContext();e.componentSID===V.a.firstOpaqueSid&&s.disable(s.BLEND),e.componentSID==V.a.firstTranparentSid&&(s.enable(s.BLEND),s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE));for(var u=e.getPrimitiveNumber(),c=0;c<u;c++){var h=e.getPrimitiveAt(c);this.attachVertexData(c,h,n,_.a.InvalidCGAPIResourceUid);var d=h.material;this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.WorldMatrix,!0,4,"f",!0,{x:G.a.transpose(t).v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.NormalMatrix,!0,3,"f",!0,{x:r.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.LightNumber,!1,1,"i",!1,{x:this.__lightComponents.length});for(var g=0;g<this.__lightComponents.length&&!(g>=p.a.maxLightNumberInShader);g++){var m=this.__lightComponents[g],f=m.entity.getSceneGraph().worldPosition,b=m.direction,x=m.intensity;this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.LightPosition,!1,4,"f",!1,{x:f.x,y:f.y,z:f.z,w:m.type.index},g),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.LightDirection,!1,4,"f",!1,{x:b.x,y:b.y,z:b.z,w:0},g),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.LightIntensity,!1,4,"f",!1,{x:x.x,y:x.y,z:x.z,w:0},g)}var R=i.getComponent(W.a);if(R){var y=R.jointMatrices;this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.BoneMatrix,!0,4,"f",!0,{x:y})}if(this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.DiffuseEnvTexture,!1,1,"i",!1,{x:6}),s.activeTexture(s.TEXTURE6),a&&a.isTextureReady){var v=this.__webglResourceRepository.getWebGLResource(a.cubeTextureUid);s.bindTexture(s.TEXTURE_CUBE_MAP,v)}else{v=this.__webglResourceRepository.getWebGLResource(this.__dummyBlackCubeTextureUid);s.bindTexture(s.TEXTURE_CUBE_MAP,v)}if(this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.SpecularEnvTexture,!1,1,"i",!1,{x:7}),s.activeTexture(s.TEXTURE7),o&&o.isTextureReady){v=this.__webglResourceRepository.getWebGLResource(o.cubeTextureUid);s.bindTexture(s.TEXTURE_CUBE_MAP,v)}else{v=this.__webglResourceRepository.getWebGLResource(this.__dummyBlackCubeTextureUid);s.bindTexture(s.TEXTURE_CUBE_MAP,v)}var U=1;o&&(U=o.mipmapLevelNumber),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.IBLParameter,!1,3,"f",!1,{x:U,y:1,z:1});var w=D.a.getInstance().getComponent(C.a,C.a.main).worldPosition;if(this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.ViewPosition,!1,3,"f",!0,{x:w.v}),this.__webglResourceRepository.setUniformValue(this.__shaderProgramUid,l.a.BrdfLutTexture,!1,1,"i",!1,{x:5}),s.activeTexture(s.TEXTURE5),null!=this.__pbrCookTorranceBrdfLutDataUrlUid){v=this.__webglResourceRepository.getWebGLResource(this.__pbrCookTorranceBrdfLutDataUrlUid);s.bindTexture(s.TEXTURE_2D,v)}else{v=this.__webglResourceRepository.getWebGLResource(this.__dummyWhiteTextureUid);s.bindTexture(s.TEXTURE_2D,v)}d&&d.setUniformValues(this.__shaderProgramUid),s.drawElements(h.primitiveMode.index,h.indicesAccessor.elementCount,h.indicesAccessor.componentType.index,0),s.bindTexture(s.TEXTURE_2D,null),this.dettachVertexData(n)}s.useProgram(null)},e.__vertexHandleOfPrimitiveObjectUids=new Map,e}(),H=function(e){return e.index===a.a.UBOWebGL2.index?b.getInstance():e.index===a.a.TransformFeedbackWebGL2.index?S.getInstance():e.index===a.a.UniformWebGL1.index?N.getInstance():I.getInstance()},O=r(51),j=Object.freeze({getRenderingStrategy:H,GLSLShader:d.a,WebGLContextWrapper:O.a,WebGLResourceRepository:o.a,WebGLStrategyDataTexture:I,WebGLStrategyTransformFeedback:S,WebGLStrategyUBO:b,WebGLStrategyUniform:N});t.default=j}}]);