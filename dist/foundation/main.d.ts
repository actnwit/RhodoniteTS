import EntityRepository from './core/EntityRepository';
import TransformComponent from './components/TransformComponent';
import SceneGraphComponent from './components/SceneGraphComponent';
import MeshComponent from './components/MeshComponent';
import MeshRendererComponent from './components/MeshRendererComponent';
import Primitive from './geometry/Primitive';
import { PrimitiveModeEnum } from './definitions/PrimitiveMode';
import { VertexAttributeEnum } from './definitions/VertexAttribute';
import { CompositionTypeEnum } from './definitions/CompositionType';
import { ComponentTypeEnum } from './definitions/ComponentType';
import System from './system/System';
import Vector3 from './math/Vector3';
import Vector4 from './math/Vector4';
import MutableVector3 from './math/MutableVector3';
import MutableVector4 from './math/MutableVector4';
import Matrix33 from './math/Matrix33';
import Matrix44 from './math/Matrix44';
import MutableMatrix44 from './math/MutableMatrix44';
import Gltf2Importer from './importer/Gltf2Importer';
import ModelConverter from './importer/ModelConverter';
import ModuleManager from './system/ModuleManager';
import MemoryManager from './core/MemoryManager';
declare const Rn: {
    EntityRepository: typeof EntityRepository;
    TransformComponent: typeof TransformComponent;
    SceneGraphComponent: typeof SceneGraphComponent;
    MeshComponent: typeof MeshComponent;
    MeshRendererComponent: typeof MeshRendererComponent;
    Primitive: typeof Primitive;
    CompositionType: Readonly<{
        Unknown: CompositionTypeEnum;
        Scalar: CompositionTypeEnum;
        Vec2: CompositionTypeEnum;
        Vec3: CompositionTypeEnum;
        Vec4: CompositionTypeEnum;
        Mat2: CompositionTypeEnum;
        Mat3: CompositionTypeEnum;
        Mat4: CompositionTypeEnum;
        from: (index: number) => CompositionTypeEnum;
        fromString: (str: string) => CompositionTypeEnum;
    }>;
    ComponentType: Readonly<{
        Unknown: ComponentTypeEnum;
        Byte: ComponentTypeEnum;
        UnsignedByte: ComponentTypeEnum;
        Short: ComponentTypeEnum;
        UnsignedShort: ComponentTypeEnum;
        Int: ComponentTypeEnum;
        UnsingedInt: ComponentTypeEnum;
        Float: ComponentTypeEnum;
        Double: ComponentTypeEnum;
        HalfFloat: ComponentTypeEnum;
        from: (index: number) => ComponentTypeEnum;
        fromTypedArray: (typedArray: TypedArray) => ComponentTypeEnum;
    }>;
    VertexAttribute: Readonly<{
        Unknown: VertexAttributeEnum;
        Position: VertexAttributeEnum;
        Normal: VertexAttributeEnum;
        Tangent: VertexAttributeEnum;
        Texcoord0: VertexAttributeEnum;
        Texcoord1: VertexAttributeEnum;
        Color0: VertexAttributeEnum;
        Joints0: VertexAttributeEnum;
        Weights0: VertexAttributeEnum;
        Instance: VertexAttributeEnum;
        from: (index: number) => VertexAttributeEnum;
        fromString: (str: string) => VertexAttributeEnum;
    }>;
    PrimitiveMode: Readonly<{
        Unknown: PrimitiveModeEnum;
        Points: PrimitiveModeEnum;
        Lines: PrimitiveModeEnum;
        LineLoop: PrimitiveModeEnum;
        LineStrip: PrimitiveModeEnum;
        Triangles: PrimitiveModeEnum;
        TriangleStrip: PrimitiveModeEnum;
        TriangleFan: PrimitiveModeEnum;
        from: (index: number) => PrimitiveModeEnum;
    }>;
    System: typeof System;
    Vector3: typeof Vector3;
    Vector4: typeof Vector4;
    MutableVector3: typeof MutableVector3;
    MutableVector4: typeof MutableVector4;
    Matrix33: typeof Matrix33;
    Matrix44: typeof Matrix44;
    MutableMatrix44: typeof MutableMatrix44;
    ProcessApproach: Readonly<{
        None: import("./definitions/ProcessApproach").ProcessApproachEnum;
        UniformWebGL1: import("./definitions/ProcessApproach").ProcessApproachEnum;
        DataTextureWebGL1: import("./definitions/ProcessApproach").ProcessApproachEnum;
        DataTextureWebGL2: import("./definitions/ProcessApproach").ProcessApproachEnum;
        UBOWebGL2: import("./definitions/ProcessApproach").ProcessApproachEnum;
        TransformFeedbackWebGL2: import("./definitions/ProcessApproach").ProcessApproachEnum;
    }>;
    Gltf2Importer: typeof Gltf2Importer;
    ModelConverter: typeof ModelConverter;
    ModuleManager: typeof ModuleManager;
    MemoryManager: typeof MemoryManager;
};
export default Rn;
export declare type CompositionTypeEnum = CompositionTypeEnum;
export declare type ComponentTypeEnum = ComponentTypeEnum;
export declare type VertexAttributeEnum = VertexAttributeEnum;
export declare type PrimitiveModeEnum = PrimitiveModeEnum;
