(window.webpackJsonp=window.webpackJsonp||[]).push([["webgl"],{77:function(e,t,a){"use strict";a.r(t);var r=a(45),i=a(61),n=a(25),o=a(9),s=a(3),c=a(10),l=a(60),m=a(17),d=a(48),u=a(38),h=a(1),p=a(20),_=a(46),g=a(0),x=a(12),f=a(2),y=a(7),b=a(28),v=a(5),T=a(66),R=a(11),w=(a(40),function(e,t,a,r){return new(a||(a=Promise))(function(i,n){function o(e){try{c(r.next(e))}catch(e){n(e)}}function s(e){try{c(r.throw(e))}catch(e){n(e)}}function c(e){e.done?i(e.value):new a(function(t){t(e.value)}).then(o,s)}c((r=r.apply(e,t||[])).next())})});class M{constructor(){this.__webglResourceRepository=i.a.getInstance(),this.__lastRenderPassCullFace=!1,this.__pointDistanceAttenuation=new f.b(0,.1,.01),this.__lastRenderPassTickCount=-1,this.__dataTextureUid=o.a.InvalidCGAPIResourceUid,this.__lastShader=-1}setupShaderProgram(e){if(null==e.mesh)return void n.a.alertNoMeshSet(e);const t=e.mesh.getPrimitiveNumber();for(let a=0;a<t;a++){const t=e.mesh.getPrimitiveAt(a),r=t.material;if(r){if(r._shaderProgramUid!==o.a.InvalidCGAPIResourceUid)return;const e=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext();let a=[{semantic:s.a.VertexAttributesExistenceArray,compositionType:g.a.ScalarArray,componentType:h.a.Int,stage:v.a.VertexShader,min:0,max:1,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.WorldMatrix,compositionType:g.a.Mat4,componentType:h.a.Float,stage:v.a.VertexShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.NormalMatrix,compositionType:g.a.Mat3,componentType:h.a.Float,stage:v.a.VertexShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.ViewMatrix,compositionType:g.a.Mat4,componentType:h.a.Float,stage:v.a.VertexShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.FirstTimeOnly},{semantic:s.a.ProjectionMatrix,compositionType:g.a.Mat4,componentType:h.a.Float,stage:v.a.VertexShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.FirstTimeOnly},{semantic:s.a.ViewPosition,compositionType:g.a.Vec3,componentType:h.a.Float,stage:v.a.PixelShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.FirstTimeOnly},{semantic:s.a.BoneMatrix,compositionType:g.a.Mat4,componentType:h.a.Float,stage:v.a.VertexShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.BoneCompressedChank,compositionType:g.a.Vec4Array,componentType:h.a.Float,stage:v.a.VertexShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.BoneCompressedInfo,compositionType:g.a.Vec4,componentType:h.a.Float,stage:v.a.VertexShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.SkinningMode,compositionType:g.a.Scalar,componentType:h.a.Int,stage:v.a.VertexShader,min:0,max:1,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.DiffuseEnvTexture,compositionType:g.a.TextureCube,componentType:h.a.Int,stage:v.a.PixelShader,min:0,max:Number.MAX_SAFE_INTEGER,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.SpecularEnvTexture,compositionType:g.a.TextureCube,componentType:h.a.Int,stage:v.a.PixelShader,min:0,max:Number.MAX_SAFE_INTEGER,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.IBLParameter,compositionType:g.a.Vec4,componentType:h.a.Float,stage:v.a.PixelShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.HDRIFormat,compositionType:g.a.Vec2,componentType:h.a.Int,stage:v.a.PixelShader,min:0,max:5,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.BrdfLutTexture,compositionType:g.a.Texture2D,componentType:h.a.Int,stage:v.a.PixelShader,min:0,max:Number.MAX_SAFE_INTEGER,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.LightNumber,compositionType:g.a.Scalar,componentType:h.a.Int,stage:v.a.PixelShader,min:0,max:Number.MAX_SAFE_INTEGER,isSystem:!0,updateInteval:y.a.FirstTimeOnly}];t.primitiveMode.index===e.POINTS&&a.push({semantic:s.a.PointSize,compositionType:g.a.Scalar,componentType:h.a.Float,stage:v.a.PixelShader,min:0,max:Number.MAX_VALUE,isSystem:!0,updateInteval:y.a.EveryTime},{semantic:s.a.PointDistanceAttenuation,compositionType:g.a.Vec3,componentType:h.a.Float,stage:v.a.PixelShader,min:0,max:1,isSystem:!0,updateInteval:y.a.EveryTime}),M.__shaderSemanticInfoArray=M.__shaderSemanticInfoArray.concat(a),M.setupMaterial(r,M.__shaderSemanticInfoArray)}}}static setupMaterial(e,t){let a;a=null!=t?t:e.fieldsInfoArray;T.a.getInstance().glsl_texture;M.__vertexShaderMethodDefinitions_uniform=`\n  uniform mat4 u_worldMatrix;\n  uniform mat4 u_viewMatrix;\n  uniform mat4 u_projectionMatrix;\n  uniform mat3 u_normalMatrix;\n\n  mat4 get_worldMatrix(float instanceId) {\n    return u_worldMatrix;\n  }\n\n  mat4 get_viewMatrix(float instanceId) {\n    return u_viewMatrix;\n  }\n\n  mat4 get_projectionMatrix(float instanceId) {\n    return u_projectionMatrix;\n  }\n\n  mat3 get_normalMatrix(float instanceId) {\n    return u_normalMatrix;\n  }\n\n\n#ifdef RN_IS_MORPHING\n  vec3 get_position(float vertexId, vec3 basePosition) {\n    vec3 position = basePosition;\n    for (int i=0; i<${m.a.maxVertexMorphNumberInShader}; i++) {\n      float index = u_dataTextureMorphOffsetPosition[i] + 1.0 * vertexId;\n      float powWidthVal = ${b.a.bufferWidthLength}.0;\n      float powHeightVal = ${b.a.bufferHeightLength}.0;\n      vec2 arg = vec2(1.0/powWidthVal, 1.0/powHeightVal);\n    //  vec2 arg = vec2(1.0/powWidthVal, 1.0/powWidthVal/powHeightVal);\n      vec3 addPos = fetchElement(u_dataTexture, index + 0.0, arg).xyz;\n      position += addPos * u_morphWeights[i];\n      if (i == u_morphTargetNumber-1) {\n        break;\n      }\n    }\n\n    return position;\n  }\n#endif\n\n  `,e.createProgram(M.__vertexShaderMethodDefinitions_uniform,s.a.getShaderProperty),i.a.getInstance().setupUniformLocations(e._shaderProgramUid,a),e.setUniformLocations(e._shaderProgramUid)}$load(e){return w(this,void 0,void 0,function*(){if(null==e.mesh)return void n.a.alertNoMeshSet(e);this.setupShaderProgram(e);const t=e.mesh.getPrimitiveNumber();for(let a=0;a<t;a++){e.mesh.getPrimitiveAt(a).create3DAPIVertexData()}e.mesh.updateVariationVBO(),this.__dummyWhiteTextureUid=this.__webglResourceRepository.createDummyTexture(),this.__dummyBlackTextureUid=this.__webglResourceRepository.createDummyTexture("rgba(0, 0, 0, 1)"),this.__dummyBlackCubeTextureUid=this.__webglResourceRepository.createDummyCubeTexture();const a=d.a.getInstance().getModule("pbr").pbrCookTorranceBrdfLutDataUrl;this.__pbrCookTorranceBrdfLutDataUrlUid=yield this.__webglResourceRepository.createTextureFromDataUri(a,{level:0,internalFormat:u.a.RGBA,border:0,format:u.a.RGBA,type:h.a.Float,magFilter:p.a.Linear,minFilter:p.a.Linear,wrapS:p.a.ClampToEdge,wrapT:p.a.ClampToEdge,generateMipmap:!1,anisotropy:!1})})}$prerender(e,t,a){if(null==e.mesh)return void n.a.alertNoMeshSet(e);const r=e.mesh.getPrimitiveNumber();if(e.mesh.weights.length>0)for(let t=0;t<r;t++){const a=e.mesh.getPrimitiveAt(t);this.__webglResourceRepository.resendVertexBuffer(a,a.vertexHandles.vboHandles)}for(let t=0;t<r;t++){const r=e.mesh.getPrimitiveAt(t);this.__webglResourceRepository.setVertexDataToPipeline({vaoHandle:e.mesh.getVaoUids(t),iboHandle:r.vertexHandles.iboHandle,vboHandles:r.vertexHandles.vboHandles},r,a)}}common_$prerender(){const e=c.a.getInstance();this.__lightComponents=e.getComponentsWithType(l.a);const t=b.a.getInstance().getBuffer(R.a.GPUInstanceData),a=new Float32Array(t.getArrayBuffer());this.__dataTextureUid!==o.a.InvalidCGAPIResourceUid||(this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__dataTextureUid=this.__webglResourceRepository.createTexture(a,{level:0,internalFormat:p.a.RGBA32F,width:b.a.bufferWidthLength,height:b.a.bufferHeightLength,border:0,format:u.a.RGBA,type:h.a.Float,magFilter:p.a.Nearest,minFilter:p.a.Nearest,wrapS:p.a.Repeat,wrapT:p.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__dataTextureUid=this.__webglResourceRepository.createTexture(a,{level:0,internalFormat:u.a.RGBA,width:b.a.bufferWidthLength,height:b.a.bufferHeightLength,border:0,format:u.a.RGBA,type:h.a.Float,magFilter:p.a.Nearest,minFilter:p.a.Nearest,wrapS:p.a.Repeat,wrapT:p.a.Repeat,generateMipmap:!1,anisotropy:!1}))}attachGPUData(e){}attatchShaderProgram(e){}attachVertexData(e,t,a,r){}attachVertexDataInner(e,t,a,r,i){const n=t.vertexHandles,o=this.__webglResourceRepository.getWebGLResource(e.getVaoUids(a)),s=r.getRawContext();if(null!=o)r.bindVertexArray(o);else{this.__webglResourceRepository.setVertexDataToPipeline(n,t,i);const e=this.__webglResourceRepository.getWebGLResource(n.iboHandle);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e)}}dettachVertexData(e){const t=e.getRawContext();e.bindVertexArray&&e.bindVertexArray(null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),t.bindBuffer(t.ARRAY_BUFFER,null)}static getInstance(){return this.__instance||(this.__instance=new M),this.__instance}common_$render(e,t,a,r,i){return!1}static isOpaqueMode(){return M.__isOpaqueMode}static isTransparentMode(){return!M.__isOpaqueMode}$render(e,t,a,r,i,s,c,l,m){const d=this.__webglResourceRepository.currentWebGLContextWrapper,u=d.getRawContext();if(this.setWebGLStatesBegin(e,u,s),null==t.mesh)return void n.a.alertNoMeshSet(t);const h=t.mesh.getPrimitiveNumber();for(let e=0;e<h;e++){const n=t.mesh.getPrimitiveAt(e);if(M.isOpaqueMode()&&n.isBlend())continue;if(M.isTransparentMode()&&n.isOpaque())continue;let h;this.attachVertexDataInner(t.mesh,n,e,d,o.a.InvalidCGAPIResourceUid),h=null!=s.material?s.material:n.material;const _=this.__webglResourceRepository.getWebGLResource(h._shaderProgramUid),g=h._shaderProgramUid;let x=!1;if(c!==this.__lastRenderPassTickCount&&(x=!0),g!==this.__lastShader){u.useProgram(_);var p=u.getUniformLocation(_,"u_dataTexture");u.uniform1i(p,7),this.__lastShader=g,x=!0}this.__webglResourceRepository.bindTexture2D(7,this.__dataTextureUid),h&&h.setParemetersForGPU({material:h,shaderProgram:_,firstTime:x,args:{setUniform:!0,glw:d,entity:i,primitive:n,worldMatrix:a,normalMatrix:r,lightComponents:this.__lightComponents,renderPass:s,diffuseCube:l,specularCube:m}}),n.indicesAccessor?u.drawElements(n.primitiveMode.index,n.indicesAccessor.elementCount,n.indicesAccessor.componentType.index,0):u.drawArrays(n.primitiveMode.index,0,n.getVertexCountAsVerticesBased()),this.dettachVertexData(d)}this.setWebGLStatesEnd(e,u,s),this.__lastRenderPassTickCount=c}setWebGLStatesBegin(e,t,a){e===_.a.firstTranparentIndex&&(t.enable(t.BLEND),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE),t.depthMask(!1),M.__isOpaqueMode=!1),a.cullface!==this.__lastRenderPassCullFace&&(a.cullface?t.enable(t.CULL_FACE):t.disable(t.CULL_FACE),this.__lastRenderPassCullFace=a.cullface)}setWebGLStatesEnd(e,t,a){e===_.a.lastTransparentIndex&&(t.disable(t.BLEND),t.depthMask(!0),M.__isOpaqueMode=!0)}}M.__isOpaqueMode=!0,M.__shaderSemanticInfoArray=[],M.transposedMatrix44=new x.a([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);var A=a(62),I=a(27),V=a(31),P=a(8),S=a(14);class L{constructor(){this.__webglResourceRepository=i.a.getInstance(),this.__dataTextureUid=o.a.InvalidCGAPIResourceUid,this.__lastShader=o.a.InvalidCGAPIResourceUid}get vertexShaderMethodDefinitions_dataTexture(){T.a.getInstance().glsl_texture;return`\n  uniform mat4 u_viewMatrix;\n  uniform mat4 u_projectionMatrix;\n  uniform mat3 u_normalMatrix;\n\n\n  mat4 get_worldMatrix(float instanceId)\n  {\n    highp float index = ${I.a.getLocationOffsetOfMemberOfComponent(V.a,"worldMatrix")}.0 + 4.0 * instanceId;\n    highp float powWidthVal = ${b.a.bufferWidthLength}.0;\n    highp float powHeightVal = ${b.a.bufferHeightLength}.0;\n    vec2 arg = vec2(1.0/powWidthVal, 1.0/powHeightVal);\n    // highp vec2 arg = vec2(1.0/powWidthVal, 1.0/powWidthVal/powHeightVal);\n\n    vec4 col0 = fetchElement(u_dataTexture, index + 0.0, arg);\n    vec4 col1 = fetchElement(u_dataTexture, index + 1.0, arg);\n    vec4 col2 = fetchElement(u_dataTexture, index + 2.0, arg);\n    vec4 col3 = fetchElement(u_dataTexture, index + 3.0, arg);\n\n    mat4 matrix = mat4(\n      col0.x, col0.y, col0.z, 0.0,\n      col1.x, col1.y, col1.z, 0.0,\n      col2.x, col2.y, col2.z, 0.0,\n      col3.x, col3.y, col3.z, 1.0\n      );\n\n    return matrix;\n  }\n\n  mat4 get_viewMatrix(float instanceId) {\n    return u_viewMatrix;\n  }\n\n  mat4 get_projectionMatrix(float instanceId) {\n    return u_projectionMatrix;\n  }\n\n  mat3 get_normalMatrix(float instanceId) {\n    float index = ${I.a.getLocationOffsetOfMemberOfComponent(V.a,"normalMatrix")}.0 + 3.0 * instanceId;\n    float powWidthVal = ${b.a.bufferWidthLength}.0;\n    float powHeightVal = ${b.a.bufferHeightLength}.0;\n    vec2 arg = vec2(1.0/powWidthVal, 1.0/powHeightVal);\n  //  vec2 arg = vec2(1.0/powWidthVal, 1.0/powWidthVal/powHeightVal);\n\n    vec4 col0 = fetchElement(u_dataTexture, index + 0.0, arg);\n    vec4 col1 = fetchElement(u_dataTexture, index + 1.0, arg);\n    vec4 col2 = fetchElement(u_dataTexture, index + 2.0, arg);\n\n    mat3 matrix = mat3(\n      col0.x, col0.y, col0.z,\n      col0.w, col1.x, col1.y,\n      col1.z, col1.w, col2.x\n      );\n      // mat3 matrix = mat3(\n      //   col0.x, col0.y, col0.z,\n      //   col1.x, col1.y, col1.z,\n      //   col2.x, col2.y, col2.z\n      //   );\n  \n      // mat3 matrix = mat3(\n    //   col0.x, col0.w, col1.z,\n    //   col0.y, col1.x, col1.w,\n    //   col0.z, col1.y, col2.x\n    //   );\n\n\n    return matrix;\n  }\n\n#ifdef RN_IS_MORPHING\n  vec3 get_position(float vertexId, vec3 basePosition) {\n    vec3 position = basePosition;\n    for (int i=0; i<${m.a.maxVertexMorphNumberInShader}; i++) {\n      float index = u_dataTextureMorphOffsetPosition[i] + 1.0 * vertexId;\n      float powWidthVal = ${b.a.bufferWidthLength}.0;\n      float powHeightVal = ${b.a.bufferHeightLength}.0;\n      vec2 arg = vec2(1.0/powWidthVal, 1.0/powHeightVal);\n    //  vec2 arg = vec2(1.0/powWidthVal, 1.0/powWidthVal/powHeightVal);\n      vec3 addPos = fetchElement(u_dataTexture, index + 0.0, arg).xyz;\n      position += addPos * u_morphWeights[i];\n      if (i == u_morphTargetNumber-1) {\n        break;\n      }\n    }\n\n    return position;\n  }\n#endif\n  `}setupShaderProgram(e){if(null==e.mesh)return void n.a.alertNoMeshSet(e);const t=e=>{let t=1;switch(e.compositionType){case g.a.Mat4:t=4;break;case g.a.Mat3:t=3}return t},a=(e,a,r)=>{const i=a.compositionType.getGlslStr(a.componentType),n=[];let o,c=1,l=-1;const m=a.compositionType===g.a.Texture2D||a.compositionType===g.a.TextureCube,d=a.semantic.str.replace(".","_");let u="";const p=a.compositionType.getGlslStr(a.componentType);let _="";if(a.maxIndex&&(_=`[${a.maxIndex}]`),u=`  uniform ${p} u_${d}${_};\n`,r<0){if(Math.abs(r)%s.b._scale!=0)return"";const i=t(a);for(let t=0;t<a.maxIndex;t++){const t=A.a.getLocationOffsetOfMemberOfMaterial(e,r);n.push(t)}let l=`highp float indices[${c=a.maxIndex}];`;n.forEach((e,t)=>{l+=`\nindices[${t}] = ${e}.0;`}),o=`\n          ${l}\n          highp float idx = 0.0;\n          for (int i=0; i<${c}; i++) {\n            idx = indices[i] + ${i}.0 * instanceId;\n            if (i == index) {\n              break;\n            }\n          }`}else{const i=t(a);let n;l=A.a.getLocationOffsetOfMemberOfMaterial(e,r);let s=0;g.a.isArray(a.compositionType)?(n="float(index)",null!=a.maxIndex&&(s=i*a.maxIndex)):n="instanceId",o=`highp float idx = ${l}.0 + ${s}.0 * instanceId + ${i}.0 * ${n};`}let x="";a.componentType===h.a.Int&&a.compositionType!==g.a.Scalar&&(x="i");let f="";m||(f+=`\n  ${i} get_${d}(highp float instanceId, const int index) {\n    ${o}\n    highp float powWidthVal = ${b.a.bufferWidthLength}.0;\n    highp float powHeightVal = ${b.a.bufferHeightLength}.0;\n    highp vec2 arg = vec2(1.0/powWidthVal, 1.0/powHeightVal);\n    highp vec4 col0 = fetchElement(u_dataTexture, idx + 0.0, arg);\n`);let y=`${u}${f}`;switch(a.compositionType){case g.a.Vec4:case g.a.Vec4Array:y+=`        highp ${x}vec4 val = ${x}vec4(col0);`;break;case g.a.Vec3:case g.a.Vec3Array:y+=`        highp ${x}vec3 val = ${x}vec3(col0.xyz);`;break;case g.a.Vec2:case g.a.Vec2Array:y+=`        highp ${x}vec2 val = ${x}vec2(col0.xy);`;break;case g.a.Scalar:case g.a.ScalarArray:a.componentType===h.a.Int?y+="        int val = int(col0.x);":a.componentType===h.a.Bool?y+="        bool val = bool(col0.x);":y+="       float val = col0.x;";break;case g.a.Mat4:y+="\n          vec4 col1 = fetchElement(u_dataTexture, index + 1.0, arg);\n          vec4 col2 = fetchElement(u_dataTexture, index + 2.0, arg);\n          mat4 val = mat4(\n            col0.x, col1.x, col2.x, 0.0,\n            col0.y, col1.y, col2.y, 0.0,\n            col0.z, col1.z, col2.z, 0.0,\n            col0.w, col1.w, col2.w, 1.0\n            );\n          ";break;case g.a.Mat3:y+="\n          vec4 col1 = fetchElement(u_dataTexture, index + 1.0, arg);\n          vec4 col2 = fetchElement(u_dataTexture, index + 2.0, arg);\n          mat3 val = mat3(\n            col0.x, col0.w, col1.z,\n            col0.y, col1.x, col1.w,\n            col0.z, col1.y, col2.x,\n            );\n          ";break;default:y+=""}return m||(y+="\n        return val;\n      }\n    "),y},r=e.mesh.getPrimitiveNumber();for(let t=0;t<r;t++){const r=e.mesh.getPrimitiveAt(t).material;if(r){if(r._shaderProgramUid!==o.a.InvalidCGAPIResourceUid)return;r.createProgram(this.vertexShaderMethodDefinitions_dataTexture,a),this.__webglResourceRepository.setupUniformLocations(r._shaderProgramUid,[{semantic:s.a.ViewMatrix,compositionType:g.a.Mat4,componentType:h.a.Float,stage:v.a.VertexShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0},{semantic:s.a.ProjectionMatrix,compositionType:g.a.Mat4,componentType:h.a.Float,stage:v.a.VertexShader,min:-Number.MAX_VALUE,max:Number.MAX_VALUE,isSystem:!0}]),r.setUniformLocations(r._shaderProgramUid)}}}__isLoaded(e){if(null==e.mesh)return!1;if(e.mesh.variationVBOUid!==o.a.InvalidCGAPIResourceUid){const t=e.mesh.getPrimitiveNumber();let a=0;for(let r=0;r<t;r++){null!=e.mesh.getPrimitiveAt(r).vertexHandles&&a++}return t===a}return!1}$load(e){if(this.__isLoaded(e))return;if(null==e.mesh)return void n.a.alertNoMeshSet(e);this.setupShaderProgram(e);const t=e.mesh.getPrimitiveNumber();for(let a=0;a<t;a++){e.mesh.getPrimitiveAt(a).create3DAPIVertexData()}e.mesh.updateVariationVBO()}$prerender(e,t,a){if(t._readyForRendering)return;if(null==e.mesh)return void n.a.alertNoMeshSet(e);if(e.mesh.isInstanceMesh())return void(t._readyForRendering=!0);const r=e.mesh.getPrimitiveNumber();for(let t=0;t<r;t++){const a=e.mesh.getPrimitiveAt(t);this.__webglResourceRepository.setVertexDataToPipeline({vaoHandle:e.mesh.getVaoUids(t),iboHandle:a.vertexHandles.iboHandle,vboHandles:a.vertexHandles.vboHandles},a,e.mesh.variationVBOUid)}t._readyForRendering=!0}common_$prerender(){const e=b.a.getInstance().getBuffer(R.a.GPUInstanceData),t=new Float32Array(e.getArrayBuffer());if(this.__dataTextureUid!==o.a.InvalidCGAPIResourceUid)return this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2,void this.__webglResourceRepository.updateTexture(this.__dataTextureUid,t,{level:0,width:b.a.bufferWidthLength,height:e.takenSizeInByte/b.a.bufferWidthLength/4,format:u.a.RGBA,type:h.a.Float});this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2?this.__dataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:p.a.RGBA32F,width:b.a.bufferWidthLength,height:b.a.bufferHeightLength,border:0,format:u.a.RGBA,type:h.a.Float,magFilter:p.a.Nearest,minFilter:p.a.Nearest,wrapS:p.a.Repeat,wrapT:p.a.Repeat,generateMipmap:!1,anisotropy:!1}):this.__dataTextureUid=this.__webglResourceRepository.createTexture(t,{level:0,internalFormat:u.a.RGBA,width:b.a.bufferWidthLength,height:b.a.bufferHeightLength,border:0,format:u.a.RGBA,type:h.a.Float,magFilter:p.a.Nearest,minFilter:p.a.Nearest,wrapS:p.a.Repeat,wrapT:p.a.Repeat,generateMipmap:!1,anisotropy:!1});const a=c.a.getInstance();this.__lightComponents=a.getComponentsWithType(l.a)}attachGPUData(e){const t=e.material,a=this.__webglResourceRepository.currentWebGLContextWrapper,r=a.getRawContext(),i=this.__webglResourceRepository.getWebGLResource(this.__dataTextureUid);a.bindTexture2D(0,i);const n=this.__webglResourceRepository.getWebGLResource(t._shaderProgramUid);var o=r.getUniformLocation(n,"u_dataTexture");r.uniform1i(o,0)}attachGPUDataInner(e,t){this.__webglResourceRepository.bindTexture2D(0,this.__dataTextureUid);var a=e.getUniformLocation(t,"u_dataTexture");e.uniform1i(a,0)}attatchShaderProgram(e){const t=e._shaderProgramUid;if(t!==this.__lastShader){const e=this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext(),a=this.__webglResourceRepository.getWebGLResource(t);e.useProgram(a),this.__lastShader=t}}attachVertexData(e,t,a,r){}attachVertexDataInner(e,t,a,r,i){const n=t.vertexHandles,o=this.__webglResourceRepository.getWebGLResource(e.getVaoUids(a)),s=r.getRawContext();if(null!=o)r.bindVertexArray(o);else{this.__webglResourceRepository.setVertexDataToPipeline(n,t,e.variationVBOUid);const a=this.__webglResourceRepository.getWebGLResource(n.iboHandle);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,a)}}static getInstance(){return this.__instance||(this.__instance=new L),this.__instance}__setupMaterial(e,t){e.setParameter(s.a.LightNumber,this.__lightComponents.length);for(let t=0;t<this.__lightComponents.length&&!(t>=m.a.maxLightNumberInShader);t++){const a=this.__lightComponents[t],r=a.entity.getSceneGraph().worldPosition,i=a.direction,n=a.intensity;e.setParameter(s.a.LightPosition,new P.b(r.x,r.y,r.z,a.type.index),t),e.setParameter(s.a.LightDirection,new P.b(i.x,i.y,i.z,0),t),e.setParameter(s.a.LightIntensity,new P.b(n.x,n.y,n.z,0),t)}}__setupMaterialEveryFrame(e,t){let a=t.cameraComponent;if(null==a&&(a=c.a.getInstance().getComponent(S.a,S.a.main)),a){const t=a.worldPosition;e.setParameter(s.a.ViewPosition,t)}}common_$render(e,t,a,r,i){const n=this.__webglResourceRepository.currentWebGLContextWrapper,o=n.getRawContext();for(let l=0;l<e.length;l++){const m=t[e[l]];if(null==m)break;const d=m.mesh;if(!d||!d.isOriginalMesh())continue;const u=d.getPrimitiveNumber();for(let e=0;e<u;e++){const t=d.getPrimitiveAt(e),l=t.material._shaderProgramUid;if(-1===l)continue;if(this.attachVertexDataInner(d,t,e,n,d.variationVBOUid),l!==this.__lastShader){const e=this.__webglResourceRepository.getWebGLResource(l);o.useProgram(e);var c=o.getUniformLocation(e,"u_dataTexture");o.uniform1i(c,7),this.__materialSIDLocation=o.getUniformLocation(e,"u_materialSID"),this.__setupMaterial(t.material,i),L.__shaderProgram=e,this.__webglResourceRepository.setUniformValue(e,s.a.ViewMatrix.str,!0,a),this.__webglResourceRepository.setUniformValue(e,s.a.ProjectionMatrix.str,!0,r)}o.uniform1f(this.__materialSIDLocation,t.material.materialSID),this.__webglResourceRepository.bindTexture2D(7,this.__dataTextureUid),this.__setupMaterialEveryFrame(t.material,i);const u=m.entity,h=u.getComponent(_.a);t.material.setParemetersForGPU({material:t.material,shaderProgram:L.__shaderProgram,firstTime:!0,args:{glw:n,entity:u,worldMatrix:u.getSceneGraph().worldMatrixInner,normalMatrix:u.getSceneGraph().normalMatrixInner,lightComponents:this.__lightComponents,renderPass:i,primitive:t,diffuseCube:h.diffuseCubeMap,specularCube:h.specularCubeMap}}),t.indicesAccessor?n.drawElementsInstanced(t.primitiveMode.index,t.indicesAccessor.elementCount,t.indicesAccessor.componentType.index,0,d.instanceCountIncludeOriginal):n.drawArraysInstanced(t.primitiveMode.index,0,t.getVertexCountAsVerticesBased(),d.instanceCountIncludeOriginal),this.__lastShader=l}}const l=L.__shaderProgram;return this.__webglResourceRepository.setUniformValue(l,s.a.ViewMatrix.str,!0,a),this.__webglResourceRepository.setUniformValue(l,s.a.ProjectionMatrix.str,!0,r),!1}}var U=function(e){return e.index===r.a.FastestWebGL1.index?L.getInstance():(e.index===r.a.UniformWebGL1.index||(e.index,r.a.UniformWebGL2.index),M.getInstance())},E=a(39),C=a(68);const N=Object.freeze({getRenderingStrategy:U,GLSLShader:E.a,WebGLContextWrapper:C.a,WebGLResourceRepository:i.a,WebGLStrategyUniform:M});t.default=N;window.RnWebGL=N}}]);
(0,eval)('this').Rn.WEBGL_VERSION='version: 0.1.3-mod branch: master';
