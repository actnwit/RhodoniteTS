(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["webgl"],{

/***/ "./src/webgl/WebGLStrategyDataTexture.ts":
/*!***********************************************!*\
  !*** ./src/webgl/WebGLStrategyDataTexture.ts ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _WebGLExtension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WebGLExtension */ \"./src/webgl/WebGLExtension.ts\");\n/* harmony import */ var _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\n/* harmony import */ var _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../foundation/definitions/PixelFormat */ \"./src/foundation/definitions/PixelFormat.ts\");\n/* harmony import */ var _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../foundation/definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../foundation/definitions/TextureParameter */ \"./src/foundation/definitions/TextureParameter.ts\");\n/* harmony import */ var _foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../foundation/definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../foundation/definitions/ShaderSemantics */ \"./src/foundation/definitions/ShaderSemantics.ts\");\n/* harmony import */ var _shaders_ClassicShader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./shaders/ClassicShader */ \"./src/webgl/shaders/ClassicShader.ts\");\n\n\n\n\n\n\n\n\n\n\n\nvar WebGLStrategyDataTexture = /** @class */ (function () {\n    function WebGLStrategyDataTexture() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        this.__dataTextureUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_8__[\"default\"].InvalidCGAPIResourceUid;\n        this.__vertexHandles = [];\n        this.__isVAOSet = false;\n    }\n    Object.defineProperty(WebGLStrategyDataTexture.prototype, \"vertexShaderMethodDefinitions_dataTexture\", {\n        get: function () {\n            var _texture = _shaders_ClassicShader__WEBPACK_IMPORTED_MODULE_10__[\"default\"].getInstance().glsl_texture;\n            return \"\\n  uniform sampler2D u_dataTexture;\\n  uniform mat4 u_viewMatrix;\\n  uniform mat4 u_projectionMatrix;\\n  uniform mat3 u_normalMatrix;\\n\\n  /*\\n   * This idea from https://qiita.com/YVT/items/c695ab4b3cf7faa93885\\n   * arg = vec2(1. / size.x, 1. / size.x / size.y);\\n   */\\n  // vec4 fetchElement(sampler2D tex, float index, vec2 arg)\\n  // {\\n  //   return \" + _texture + \"( tex, arg * (index + 0.5) );\\n  // }\\n\\n  vec4 fetchElement(sampler2D tex, float index, vec2 invSize)\\n  {\\n    float t = (index + 0.5) * invSize.x;\\n    float x = fract(t);\\n    float y = (floor(t) + 0.5) * invSize.y;\\n    return \" + _texture + \"( tex, vec2(x, y) );\\n  }\\n\\n  mat4 getMatrix(float instanceId)\\n  {\\n    float index = instanceId;\\n    float powWidthVal = \" + _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength + \".0;\\n    float powHeightVal = \" + _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength + \".0;\\n    vec2 arg = vec2(1.0/powWidthVal, 1.0/powHeightVal);\\n  //  vec2 arg = vec2(1.0/powWidthVal, 1.0/powWidthVal/powHeightVal);\\n\\n    vec4 col0 = fetchElement(u_dataTexture, index * 4.0 + 0.0, arg);\\n   vec4 col1 = fetchElement(u_dataTexture, index * 4.0 + 1.0, arg);\\n   vec4 col2 = fetchElement(u_dataTexture, index * 4.0 + 2.0, arg);\\n\\n    mat4 matrix = mat4(\\n      col0.x, col1.x, col2.x, 0.0,\\n      col0.y, col1.y, col2.y, 0.0,\\n      col0.z, col1.z, col2.z, 0.0,\\n      col0.w, col1.w, col2.w, 1.0\\n      );\\n\\n    return matrix;\\n  }\\n\\n  mat4 getViewMatrix(float instanceId) {\\n    return u_viewMatrix;\\n  }\\n\\n  mat4 getProjectionMatrix(float instanceId) {\\n    return u_projectionMatrix;\\n  }\\n\\n  mat3 getNormalMatrix(float instanceId) {\\n    return u_normalMatrix;\\n  }\\n\\n  \";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebGLStrategyDataTexture.prototype.setupShaderProgram = function (meshComponent) {\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            var material = primitive.material;\n            if (material) {\n                if (material._shaderProgramUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_8__[\"default\"].InvalidCGAPIResourceUid) {\n                    return;\n                }\n                material.createProgram(this.vertexShaderMethodDefinitions_dataTexture);\n                this.__webglResourceRepository.setupUniformLocations(material._shaderProgramUid, [\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_9__[\"ShaderSemantics\"].ViewMatrix, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_9__[\"ShaderSemantics\"].ProjectionMatrix, isPlural: false, isSystem: true }\n                ]);\n            }\n        }\n    };\n    WebGLStrategyDataTexture.prototype.__isLoaded = function (index) {\n        if (this.__vertexHandles[index] != null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    WebGLStrategyDataTexture.prototype.$load = function (meshComponent) {\n        if (this.__isLoaded(0)) {\n            return;\n        }\n        this.__meshComponent = meshComponent;\n        this.setupShaderProgram(meshComponent);\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            var vertexHandles = this.__webglResourceRepository.createVertexDataResources(primitive);\n            this.__vertexHandles[i] = vertexHandles;\n            WebGLStrategyDataTexture.__vertexHandleOfPrimitiveObjectUids.set(primitive.objectUid, vertexHandles);\n        }\n    };\n    WebGLStrategyDataTexture.prototype.$prerender = function (meshComponent, instanceIDBufferUid) {\n        if (this.__isVAOSet) {\n            return;\n        }\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            // if (this.__isLoaded(i) && this.__isVAOSet) {\n            this.__vertexHandles[i] = WebGLStrategyDataTexture.__vertexHandleOfPrimitiveObjectUids.get(primitive.objectUid);\n            //this.__vertexShaderProgramHandles[i] = MeshRendererComponent.__shaderProgramHandleOfPrimitiveObjectUids.get(primitive.objectUid)!;\n            //  continue;\n            // }\n            this.__webglResourceRepository.setVertexDataToPipeline(this.__vertexHandles[i], primitive, instanceIDBufferUid);\n        }\n        this.__isVAOSet = true;\n    };\n    WebGLStrategyDataTexture.prototype.common_$prerender = function () {\n        var isHalfFloatMode = false;\n        if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2 ||\n            this.__webglResourceRepository.currentWebGLContextWrapper.isSupportWebGL1Extension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_1__[\"WebGLExtension\"].TextureHalfFloat)) {\n            isHalfFloatMode = true;\n        }\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_7__[\"BufferUse\"].GPUInstanceData);\n        var floatDataTextureBuffer = new Float32Array(buffer.getArrayBuffer());\n        var halfFloatDataTextureBuffer;\n        if (isHalfFloatMode) {\n            halfFloatDataTextureBuffer = new Uint16Array(floatDataTextureBuffer.length);\n            var convertLength = buffer.takenSizeInByte / 4; //components\n            convertLength /= 2; // bytes\n            for (var i = 0; i < convertLength; i++) {\n                halfFloatDataTextureBuffer[i] = _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_3__[\"MathUtil\"].toHalfFloat(floatDataTextureBuffer[i]);\n            }\n        }\n        if (this.__dataTextureUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_8__[\"default\"].InvalidCGAPIResourceUid) {\n            if (isHalfFloatMode) {\n                if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                    this.__webglResourceRepository.updateTexture(this.__dataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: buffer.takenSizeInByte / _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength / 4,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n                else {\n                    this.__webglResourceRepository.updateTexture(this.__dataTextureUid, halfFloatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: buffer.takenSizeInByte / _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength / 4,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].HalfFloat\n                    });\n                }\n            }\n            else {\n                if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                    this.__webglResourceRepository.updateTexture(this.__dataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: buffer.takenSizeInByte / _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength / 4,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n                else {\n                    this.__webglResourceRepository.updateTexture(this.__dataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: buffer.takenSizeInByte / _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength / 4,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n            }\n            return;\n        }\n        if (isHalfFloatMode) {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                this.__dataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA16F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n            else {\n                this.__dataTextureUid = this.__webglResourceRepository.createTexture(halfFloatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].HalfFloat, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n        }\n        else {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                this.__dataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA32F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n            else {\n                this.__dataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n        }\n    };\n    ;\n    WebGLStrategyDataTexture.prototype.attachGPUData = function (primitive) {\n        var material = primitive.material;\n        var gl = this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext();\n        var dataTexture = this.__webglResourceRepository.getWebGLResource(this.__dataTextureUid);\n        gl.bindTexture(gl.TEXTURE_2D, dataTexture);\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(material._shaderProgramUid);\n        var uniform_dataTexture = gl.getUniformLocation(shaderProgram, 'u_dataTexture');\n        gl.uniform1i(uniform_dataTexture, 0);\n    };\n    ;\n    WebGLStrategyDataTexture.prototype.attatchShaderProgram = function (material) {\n        var shaderProgramUid = material._shaderProgramUid;\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(shaderProgramUid);\n        gl.useProgram(shaderProgram);\n    };\n    WebGLStrategyDataTexture.prototype.attachVertexData = function (i, primitive, glw, instanceIDBufferUid) {\n        var vaoHandles = this.__vertexHandles[i];\n        var vao = this.__webglResourceRepository.getWebGLResource(vaoHandles.vaoHandle);\n        var gl = glw.getRawContext();\n        if (vao != null) {\n            glw.bindVertexArray(vao);\n        }\n        else {\n            this.__webglResourceRepository.setVertexDataToPipeline(vaoHandles, primitive, instanceIDBufferUid);\n            var ibo = this.__webglResourceRepository.getWebGLResource(vaoHandles.iboHandle);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        }\n    };\n    WebGLStrategyDataTexture.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new (WebGLStrategyDataTexture)();\n        }\n        return this.__instance;\n    };\n    WebGLStrategyDataTexture.prototype.common_$render = function (primitive, viewMatrix, projectionMatrix) {\n        var material = primitive.material;\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        this.attatchShaderProgram(material);\n        var gl = glw.getRawContext();\n        this.__webglResourceRepository.setUniformValue(material._shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_9__[\"ShaderSemantics\"].ViewMatrix, true, 4, 'f', true, { x: viewMatrix.v }, {});\n        this.__webglResourceRepository.setUniformValue(material._shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_9__[\"ShaderSemantics\"].ProjectionMatrix, true, 4, 'f', true, { x: projectionMatrix.v }, {});\n        return true;\n    };\n    WebGLStrategyDataTexture.__vertexHandleOfPrimitiveObjectUids = new Map();\n    return WebGLStrategyDataTexture;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLStrategyDataTexture);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLStrategyDataTexture.ts?");

/***/ }),

/***/ "./src/webgl/WebGLStrategyTransformFeedback.ts":
/*!*****************************************************!*\
  !*** ./src/webgl/WebGLStrategyTransformFeedback.ts ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _WebGLExtension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WebGLExtension */ \"./src/webgl/WebGLExtension.ts\");\n/* harmony import */ var _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\n/* harmony import */ var _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../foundation/definitions/PixelFormat */ \"./src/foundation/definitions/PixelFormat.ts\");\n/* harmony import */ var _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../foundation/definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../foundation/definitions/TextureParameter */ \"./src/foundation/definitions/TextureParameter.ts\");\n/* harmony import */ var _foundation_core_EntityRepository__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../foundation/core/EntityRepository */ \"./src/foundation/core/EntityRepository.ts\");\n/* harmony import */ var _foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../foundation/definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _foundation_components_MeshComponent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../foundation/components/MeshComponent */ \"./src/foundation/components/MeshComponent.ts\");\n/* harmony import */ var _foundation_geometry_Primitive__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../foundation/geometry/Primitive */ \"./src/foundation/geometry/Primitive.ts\");\n/* harmony import */ var _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../foundation/definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../foundation/definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _foundation_definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../foundation/definitions/PrimitiveMode */ \"./src/foundation/definitions/PrimitiveMode.ts\");\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../foundation/definitions/ShaderSemantics */ \"./src/foundation/definitions/ShaderSemantics.ts\");\n/* harmony import */ var _shaders_ClassicShader__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./shaders/ClassicShader */ \"./src/webgl/shaders/ClassicShader.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar WebGLStrategyTransformFeedback = /** @class */ (function () {\n    function WebGLStrategyTransformFeedback() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        this.__instanceDataTextureUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid;\n        this.__vertexDataTextureUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid;\n        //  private __shaderProgramUid: CGAPIResourceHandle = CGAPIResourceRepository.InvalidCGAPIResourceUid;\n        this.__primitiveHeaderUboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid;\n        this.__indexCountToSubtractUboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid;\n        this.__entitiesUidUboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid;\n        this.__primitiveUidUboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid;\n        this.__isVertexReady = false;\n    }\n    Object.defineProperty(WebGLStrategyTransformFeedback.prototype, \"__transformFeedbackShaderText\", {\n        get: function () {\n            var _in = _shaders_ClassicShader__WEBPACK_IMPORTED_MODULE_16__[\"default\"].getInstance().glsl_vertex_in;\n            var _texture = _shaders_ClassicShader__WEBPACK_IMPORTED_MODULE_16__[\"default\"].getInstance().glsl_texture;\n            return \"\\n    uniform mat4 u_worldMatrix;\\n    uniform mat4 u_viewMatrix;\\n    uniform mat4 u_projectionMatrix;\\n    uniform mat3 u_normalMatrix;\\n\\n    mat4 getMatrix(float instanceId) {\\n      return u_worldMatrix;\\n    }\\n\\n    mat4 getViewMatrix(float instanceId) {\\n      return u_viewMatrix;\\n    }\\n\\n    mat4 getProjectionMatrix(float instanceId) {\\n      return u_projectionMatrix;\\n    }\\n\\n    mat3 getNormalMatrix(float instanceId) {\\n      return u_normalMatrix;\\n    }\\n\\n    layout (std140) uniform indexCountsToSubtract {\\n      ivec4 counts[256];\\n    } u_indexCountsToSubtract;\\n    layout (std140) uniform entityUids {\\n      ivec4 ids[256];\\n    } u_entityData;\\n    layout (std140) uniform primitiveUids {\\n      ivec4 ids[256];\\n    } u_primitiveData;\\n    layout (std140) uniform primitiveHeader {\\n      ivec4 data[256];\\n    } u_primitiveHeader;\\n\\n    out vec4 position;\\n    //out vec3 colors;\\n\\n    uniform sampler2D u_instanceDataTexture;\\n    uniform sampler2D u_vertexDataTexture;\\n\\n    // void main(){\\n    //   int indexOfVertices = gl_VertexID + 3*gl_InstanceID;\\n\\n    //   int entityUidMinusOne = 0;\\n    //   int primitiveUid = 0;\\n    //   for (int i=0; i<=indexOfVertices; i++) {\\n    //     for (int j=0; j<1024; j++) {\\n    //       int value = u_indexCountsToSubtract.counts[j/4][j%4];\\n    //       int result = int(step(float(value), float(i)));\\n    //       if (result > 0) {\\n    //         entityUidMinusOne = result * int(u_entityData.ids[j/4][j%4]) - 1;\\n    //         primitiveUid = result * u_primitiveData.ids[j/4][j%4];\\n    //       } else {\\n    //         break;\\n    //       }\\n    //     }\\n    //   }\\n\\n    //   ivec4 indicesMeta = u_primitiveHeader.data[9*primitiveUid + 0];\\n    //   int primIndicesByteOffset = indicesMeta.x;\\n    //   int primIndicesComponentSizeInByte = indicesMeta.y;\\n    //   int primIndicesLength = indicesMeta.z;\\n\\n    //   int idx = gl_VertexID - primIndicesByteOffset / 4 /*byte*/;\\n\\n    //   // get Indices\\n    //   int texelLength = \" + _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength + \";\\n    //   vec4 indexVec4 = texelFetch(u_vertexDataTexture, ivec2(idx%texelLength, idx/texelLength), 0);\\n    //   int index = int(indexVec4[idx%4]);\\n\\n    //   // get Positions\\n    //   ivec4 indicesData = u_primitiveHeader.data[9*primitiveUid + 1];\\n    //   int primPositionsByteOffset = indicesData.x;\\n    //   idx = primPositionsByteOffset/4 + index;\\n    //   vec4 posVec4 = texelFetch(u_vertexDataTexture, ivec2(idx%texelLength, idx/texelLength), 0);\\n\\n    //   position = posVec4;\\n    //}\\n\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebGLStrategyTransformFeedback.prototype, \"__transformFeedbackFragmentShaderText\", {\n        get: function () {\n            return \"#version 300 es\\nprecision highp float;\\n\\nout vec4 outColor;\\n\\nvoid main(){\\n    outColor = vec4(1.0);\\n}\\n    \";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebGLStrategyTransformFeedback.prototype.setupShaderProgram = function (meshComponent) {\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            var material = primitive.material;\n            if (material) {\n                if (material._shaderProgramUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid) {\n                    return;\n                }\n                // Shader Setup\n                material.createProgram(this.__transformFeedbackShaderText);\n                this.__webglResourceRepository.setupUniformLocations(material._shaderProgramUid, [\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_15__[\"ShaderSemantics\"].ViewMatrix, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_15__[\"ShaderSemantics\"].ProjectionMatrix, isPlural: false, isSystem: true }\n                ]);\n            }\n        }\n    };\n    WebGLStrategyTransformFeedback.prototype.$load = function (meshComponent) {\n        if (this.__isVertexReady) {\n            return;\n        }\n        this.setupShaderProgram(meshComponent);\n        var buffer = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance().getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric);\n        var indicesBufferView = buffer.takeBufferView({ byteLengthToNeed: 4 * 3, byteStride: 4, isAoS: false });\n        var indicesAccessor = indicesBufferView.takeAccessor({ compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_11__[\"CompositionType\"].Scalar, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].UnsingedInt, count: 3 });\n        var attributeBufferView = buffer.takeBufferView({ byteLengthToNeed: 16 * 3, byteStride: 16, isAoS: false });\n        var attributeAccessor = attributeBufferView.takeAccessor({ compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_11__[\"CompositionType\"].Vec4, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, count: 3 });\n        var indicesUint16Array = indicesAccessor.getTypedArray();\n        indicesUint16Array[0] = 0;\n        indicesUint16Array[1] = 1;\n        indicesUint16Array[2] = 2;\n        var primitive = _foundation_geometry_Primitive__WEBPACK_IMPORTED_MODULE_10__[\"default\"].createPrimitive({\n            indices: indicesUint16Array,\n            attributeCompositionTypes: [attributeAccessor.compositionType],\n            attributeSemantics: [_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_12__[\"VertexAttribute\"].Position],\n            attributes: [attributeAccessor.getTypedArray()],\n            primitiveMode: _foundation_definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_13__[\"PrimitiveMode\"].Triangles,\n            material: void 0\n        });\n        this.__vertexHandle = this.__webglResourceRepository.createVertexDataResources(primitive);\n        this.__isVertexReady = true;\n    };\n    WebGLStrategyTransformFeedback.prototype.$prerender = function (meshComponent, instanceIDBufferUid) {\n    };\n    WebGLStrategyTransformFeedback.prototype.__setupUBOPrimitiveHeaderData = function () {\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].UBOGeneric);\n        var floatDataTextureBuffer = new Int32Array(buffer.getArrayBuffer());\n        if (this.__primitiveHeaderUboUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid) {\n            //      this.__webglResourceRepository.updateUniformBuffer(this.__primitiveHeaderUboUid, floatDataTextureBuffer);\n            return;\n        }\n        this.__primitiveHeaderUboUid = this.__webglResourceRepository.createUniformBuffer(floatDataTextureBuffer);\n        this.__webglResourceRepository.bindUniformBufferBase(3, this.__primitiveHeaderUboUid);\n    };\n    WebGLStrategyTransformFeedback.prototype.__setupGPUInstanceMetaData = function () {\n        if (this.__primitiveUidUboUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid) {\n            return;\n        }\n        var entities = _foundation_core_EntityRepository__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getInstance()._getEntities();\n        var entityIds = new Int32Array(entities.length);\n        var primitiveIds = new Int32Array(entities.length);\n        var indexCountToSubtract = new Int32Array(entities.length);\n        var tmpSumIndexCount = 0;\n        entities.forEach(function (entity, i) {\n            var meshComponent = entity.getComponent(_foundation_components_MeshComponent__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n            if (meshComponent) {\n                primitiveIds[i] = meshComponent.getPrimitiveAt(0).primitiveUid;\n                entityIds[i] = entity.entityUID;\n                var indexCountOfPrimitive = meshComponent.getPrimitiveAt(0).indicesAccessor.elementCount;\n                indexCountToSubtract[i] = tmpSumIndexCount + indexCountOfPrimitive;\n                tmpSumIndexCount += indexCountOfPrimitive;\n            }\n        });\n        this.__indexCountToSubtractUboUid = this.__webglResourceRepository.createUniformBuffer(indexCountToSubtract);\n        this.__webglResourceRepository.bindUniformBufferBase(0, this.__indexCountToSubtractUboUid);\n        this.__entitiesUidUboUid = this.__webglResourceRepository.createUniformBuffer(entityIds);\n        this.__webglResourceRepository.bindUniformBufferBase(1, this.__entitiesUidUboUid);\n        this.__primitiveUidUboUid = this.__webglResourceRepository.createUniformBuffer(primitiveIds);\n        this.__webglResourceRepository.bindUniformBufferBase(2, this.__primitiveUidUboUid);\n    };\n    WebGLStrategyTransformFeedback.prototype.__setupGPUInstanceData = function () {\n        var isHalfFloatMode = false;\n        if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2 ||\n            this.__webglResourceRepository.currentWebGLContextWrapper.isSupportWebGL1Extension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_1__[\"WebGLExtension\"].TextureHalfFloat)) {\n            isHalfFloatMode = true;\n        }\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].GPUInstanceData);\n        var floatDataTextureBuffer = new Float32Array(buffer.getArrayBuffer());\n        var halfFloatDataTextureBuffer;\n        if (isHalfFloatMode) {\n            halfFloatDataTextureBuffer = new Uint16Array(floatDataTextureBuffer.length);\n            var convertLength = buffer.takenSizeInByte / 4; //components\n            convertLength /= 2; // bytes\n            for (var i = 0; i < convertLength; i++) {\n                halfFloatDataTextureBuffer[i] = _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_3__[\"MathUtil\"].toHalfFloat(floatDataTextureBuffer[i]);\n            }\n        }\n        if (this.__instanceDataTextureUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid) {\n            if (isHalfFloatMode) {\n                if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                    this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n                else {\n                    this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid, halfFloatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].HalfFloat\n                    });\n                }\n            }\n            else {\n                if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                    this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n                else {\n                    this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n            }\n            return;\n        }\n        if (isHalfFloatMode) {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                this.__instanceDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA16F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n            else {\n                this.__instanceDataTextureUid = this.__webglResourceRepository.createTexture(halfFloatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].HalfFloat, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n        }\n        else {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                this.__instanceDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA32F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n            else {\n                this.__instanceDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n        }\n    };\n    WebGLStrategyTransformFeedback.prototype.__setupGPUVertexData = function () {\n        if (this.__vertexDataTextureUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_14__[\"default\"].InvalidCGAPIResourceUid) {\n            return;\n        }\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].GPUVertexData);\n        var floatDataTextureBuffer = new Float32Array(buffer.getArrayBuffer());\n        if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n            this.__vertexDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA32F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n            });\n        }\n        else {\n            this.__vertexDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n            });\n        }\n    };\n    WebGLStrategyTransformFeedback.prototype.common_$prerender = function () {\n        this.__setupUBOPrimitiveHeaderData();\n        this.__setupGPUInstanceMetaData();\n        this.__setupGPUInstanceData();\n        this.__setupGPUVertexData();\n    };\n    ;\n    WebGLStrategyTransformFeedback.prototype.attachGPUData = function (primitive) {\n        var material = primitive.material;\n        {\n            var gl = this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext();\n            var dataTexture = this.__webglResourceRepository.getWebGLResource(this.__instanceDataTextureUid);\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, dataTexture);\n            var shaderProgram = this.__webglResourceRepository.getWebGLResource(material._shaderProgramUid);\n            var uniform_instanceDataTexture = gl.getUniformLocation(shaderProgram, 'u_instanceDataTexture');\n            gl.uniform1i(uniform_instanceDataTexture, 0);\n        }\n        {\n            var gl = this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext();\n            var dataTexture = this.__webglResourceRepository.getWebGLResource(this.__vertexDataTextureUid);\n            gl.activeTexture(gl.TEXTURE1);\n            gl.bindTexture(gl.TEXTURE_2D, dataTexture);\n            var shaderProgram = this.__webglResourceRepository.getWebGLResource(material._shaderProgramUid);\n            var uniform_vertexDataTexture = gl.getUniformLocation(shaderProgram, 'u_vertexDataTexture');\n            gl.uniform1i(uniform_vertexDataTexture, 1);\n        }\n        this.__webglResourceRepository.bindUniformBlock(material._shaderProgramUid, 'indexCountsToSubtract', 0);\n        this.__webglResourceRepository.bindUniformBlock(material._shaderProgramUid, 'entityUids', 1);\n        this.__webglResourceRepository.bindUniformBlock(material._shaderProgramUid, 'primitiveUids', 2);\n        this.__webglResourceRepository.bindUniformBlock(material._shaderProgramUid, 'primitiveHeader', 3);\n    };\n    ;\n    WebGLStrategyTransformFeedback.prototype.attatchShaderProgram = function (material) {\n        var shaderProgramUid = material._shaderProgramUid;\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(shaderProgramUid);\n        gl.useProgram(shaderProgram);\n    };\n    WebGLStrategyTransformFeedback.prototype.attachVertexData = function (i, primitive, glw, instanceIDBufferUid) {\n    };\n    WebGLStrategyTransformFeedback.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new WebGLStrategyTransformFeedback();\n        }\n        return this.__instance;\n    };\n    WebGLStrategyTransformFeedback.prototype.common_$render = function (primitive, viewMatrix, projectionMatrix) {\n        var material = primitive.material;\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        this.attatchShaderProgram(primitive.material);\n        var gl = glw.getRawContext();\n        this.__webglResourceRepository.setUniformValue(material._shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_15__[\"ShaderSemantics\"].ViewMatrix, true, 4, 'f', true, { x: viewMatrix.v }, {});\n        this.__webglResourceRepository.setUniformValue(material._shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_15__[\"ShaderSemantics\"].ProjectionMatrix, true, 4, 'f', true, { x: projectionMatrix.v }, {});\n        return true;\n    };\n    return WebGLStrategyTransformFeedback;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLStrategyTransformFeedback);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLStrategyTransformFeedback.ts?");

/***/ }),

/***/ "./src/webgl/WebGLStrategyUBO.ts":
/*!***************************************!*\
  !*** ./src/webgl/WebGLStrategyUBO.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../foundation/core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\n/* harmony import */ var _foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/components/SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n/* harmony import */ var _foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../foundation/definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../foundation/definitions/ShaderSemantics */ \"./src/foundation/definitions/ShaderSemantics.ts\");\n\n\n\n\n\n\n\nvar WebGLStrategyUBO = /** @class */ (function () {\n    function WebGLStrategyUBO() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        this.__uboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_5__[\"default\"].InvalidCGAPIResourceUid;\n        //private __shaderProgramUid: CGAPIResourceHandle = CGAPIResourceRepository.InvalidCGAPIResourceUid;\n        this.__vertexHandles = [];\n        this.__isVAOSet = false;\n        this.vertexShaderMethodDefinitions_UBO = \"layout (std140) uniform matrix {\\n    mat4 world[1024];\\n  } u_matrix;\\n\\n  uniform mat4 u_viewMatrix;\\n  uniform mat4 u_projectionMatrix;\\n  uniform mat3 u_normalMatrix;\\n\\n  mat4 getMatrix(float instanceId) {\\n    float index = instanceId;\\n    return transpose(u_matrix.world[int(index)]);\\n  }\\n\\n  mat4 getViewMatrix(float instanceId) {\\n    return u_viewMatrix;\\n  }\\n\\n  mat4 getProjectionMatrix(float instanceId) {\\n    return u_projectionMatrix;\\n  }\\n\\n  mat3 getNormalMatrix(float instanceId) {\\n    return u_normalMatrix;\\n  }\\n\\n  \";\n    }\n    WebGLStrategyUBO.prototype.setupShaderProgram = function (meshComponent) {\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            var material = primitive.material;\n            if (material) {\n                if (material._shaderProgramUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_5__[\"default\"].InvalidCGAPIResourceUid) {\n                    return;\n                }\n                // Shader Setup\n                material.createProgram(this.vertexShaderMethodDefinitions_UBO);\n                this.__webglResourceRepository.setupUniformLocations(material._shaderProgramUid, [\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_6__[\"ShaderSemantics\"].ViewMatrix, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_6__[\"ShaderSemantics\"].ProjectionMatrix, isPlural: false, isSystem: true }\n                ]);\n            }\n        }\n    };\n    WebGLStrategyUBO.prototype.__isLoaded = function (index) {\n        if (this.__vertexHandles[index] != null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    WebGLStrategyUBO.prototype.$load = function (meshComponent) {\n        if (this.__isLoaded(0)) {\n            return;\n        }\n        this.setupShaderProgram(meshComponent);\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            var vertexHandles = this.__webglResourceRepository.createVertexDataResources(primitive);\n            this.__vertexHandles[i] = vertexHandles;\n            WebGLStrategyUBO.__vertexHandleOfPrimitiveObjectUids.set(primitive.objectUid, vertexHandles);\n        }\n    };\n    WebGLStrategyUBO.prototype.$prerender = function (meshComponent, instanceIDBufferUid) {\n        if (this.__isVAOSet) {\n            return;\n        }\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            // if (this.__isLoaded(i) && this.__isVAOSet) {\n            this.__vertexHandles[i] = WebGLStrategyUBO.__vertexHandleOfPrimitiveObjectUids.get(primitive.objectUid);\n            //this.__vertexShaderProgramHandles[i] = MeshRendererComponent.__shaderProgramHandleOfPrimitiveObjectUids.get(primitive.objectUid)!;\n            //  continue;\n            // }\n            this.__webglResourceRepository.setVertexDataToPipeline(this.__vertexHandles[i], primitive, instanceIDBufferUid);\n        }\n        this.__isVAOSet = true;\n    };\n    WebGLStrategyUBO.prototype.common_$prerender = function () {\n        var isHalfFloatMode = false;\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_4__[\"BufferUse\"].GPUInstanceData);\n        var floatDataTextureBuffer = new Float32Array(buffer.getArrayBuffer());\n        var halfFloatDataTextureBuffer;\n        if (isHalfFloatMode) {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                halfFloatDataTextureBuffer = new Uint16Array(floatDataTextureBuffer.length);\n                var convertLength = buffer.takenSizeInByte / 4; //components\n                convertLength /= 2; // bytes\n                for (var i = 0; i < convertLength; i++) {\n                    halfFloatDataTextureBuffer[i] = _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_2__[\"MathUtil\"].toHalfFloat(floatDataTextureBuffer[i]);\n                }\n            }\n            if (this.__uboUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_5__[\"default\"].InvalidCGAPIResourceUid) {\n                this.__webglResourceRepository.updateUniformBuffer(this.__uboUid, halfFloatDataTextureBuffer);\n                return;\n            }\n            this.__uboUid = this.__webglResourceRepository.createUniformBuffer(halfFloatDataTextureBuffer);\n        }\n        else {\n            if (this.__uboUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_5__[\"default\"].InvalidCGAPIResourceUid) {\n                this.__webglResourceRepository.updateUniformBuffer(this.__uboUid, _foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAccessor('worldMatrix', _foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"]).dataViewOfBufferView);\n                return;\n            }\n            this.__uboUid = this.__webglResourceRepository.createUniformBuffer(_foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAccessor('worldMatrix', _foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"]).dataViewOfBufferView);\n        }\n        this.__webglResourceRepository.bindUniformBufferBase(0, this.__uboUid);\n    };\n    ;\n    WebGLStrategyUBO.prototype.attachGPUData = function (primitive) {\n        this.__webglResourceRepository.bindUniformBlock(primitive.material._shaderProgramUid, 'matrix', 0);\n    };\n    ;\n    WebGLStrategyUBO.prototype.attatchShaderProgram = function (material) {\n        var shaderProgramUid = material._shaderProgramUid;\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(shaderProgramUid);\n        gl.useProgram(shaderProgram);\n    };\n    WebGLStrategyUBO.prototype.attachVertexData = function (i, primitive, glw, instanceIDBufferUid) {\n        var vaoHandles = this.__vertexHandles[i];\n        var vao = this.__webglResourceRepository.getWebGLResource(vaoHandles.vaoHandle);\n        var gl = glw.getRawContext();\n        if (vao != null) {\n            glw.bindVertexArray(vao);\n        }\n        else {\n            this.__webglResourceRepository.setVertexDataToPipeline(vaoHandles, primitive, instanceIDBufferUid);\n            var ibo = this.__webglResourceRepository.getWebGLResource(vaoHandles.iboHandle);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        }\n    };\n    WebGLStrategyUBO.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new WebGLStrategyUBO();\n        }\n        return this.__instance;\n    };\n    WebGLStrategyUBO.prototype.common_$render = function (primitive, viewMatrix, projectionMatrix) {\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var material = primitive.material;\n        this.attatchShaderProgram(material);\n        var gl = glw.getRawContext();\n        this.__webglResourceRepository.setUniformValue(material._shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_6__[\"ShaderSemantics\"].ViewMatrix, true, 4, 'f', true, { x: viewMatrix.v }, {});\n        this.__webglResourceRepository.setUniformValue(material._shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_6__[\"ShaderSemantics\"].ProjectionMatrix, true, 4, 'f', true, { x: projectionMatrix.v }, {});\n        return true;\n    };\n    WebGLStrategyUBO.__vertexHandleOfPrimitiveObjectUids = new Map();\n    return WebGLStrategyUBO;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLStrategyUBO);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLStrategyUBO.ts?");

/***/ }),

/***/ "./src/webgl/WebGLStrategyUniform.ts":
/*!*******************************************!*\
  !*** ./src/webgl/WebGLStrategyUniform.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _foundation_math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/math/RowMajarMatrix44 */ \"./src/foundation/math/RowMajarMatrix44.ts\");\n/* harmony import */ var _foundation_components_SkeletalComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/components/SkeletalComponent */ \"./src/foundation/components/SkeletalComponent.ts\");\n/* harmony import */ var _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../foundation/definitions/ShaderSemantics */ \"./src/foundation/definitions/ShaderSemantics.ts\");\n/* harmony import */ var _foundation_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../foundation/core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _foundation_components_LightComponent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../foundation/components/LightComponent */ \"./src/foundation/components/LightComponent.ts\");\n/* harmony import */ var _foundation_core_Config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../foundation/core/Config */ \"./src/foundation/core/Config.ts\");\n/* harmony import */ var _foundation_system_ModuleManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../foundation/system/ModuleManager */ \"./src/foundation/system/ModuleManager.ts\");\n/* harmony import */ var _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../foundation/definitions/PixelFormat */ \"./src/foundation/definitions/PixelFormat.ts\");\n/* harmony import */ var _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../foundation/definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../foundation/definitions/TextureParameter */ \"./src/foundation/definitions/TextureParameter.ts\");\n/* harmony import */ var _foundation_components_MeshRendererComponent__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../foundation/components/MeshRendererComponent */ \"./src/foundation/components/MeshRendererComponent.ts\");\n/* harmony import */ var _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../foundation/definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _foundation_math_MutableRowMajarMatrix44__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../foundation/math/MutableRowMajarMatrix44 */ \"./src/foundation/math/MutableRowMajarMatrix44.ts\");\n/* harmony import */ var _foundation_math_Vector3__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../foundation/math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _foundation_definitions_HdriFormat__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../foundation/definitions/HdriFormat */ \"./src/foundation/definitions/HdriFormat.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar WebGLStrategyUniform = /** @class */ (function () {\n    function WebGLStrategyUniform() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        this.vertexShaderMethodDefinitions_uniform = \"\\n  uniform mat4 u_worldMatrix;\\n  uniform mat4 u_viewMatrix;\\n  uniform mat4 u_projectionMatrix;\\n  uniform mat3 u_normalMatrix;\\n\\n  mat4 getMatrix(float instanceId) {\\n    return u_worldMatrix;\\n  }\\n\\n  mat4 getViewMatrix(float instanceId) {\\n    return u_viewMatrix;\\n  }\\n\\n  mat4 getProjectionMatrix(float instanceId) {\\n    return u_projectionMatrix;\\n  }\\n\\n  mat3 getNormalMatrix(float instanceId) {\\n    return u_normalMatrix;\\n  }\\n  \";\n        this.__lastShader = -1;\n    }\n    WebGLStrategyUniform.prototype.setupShaderProgram = function (meshComponent) {\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            var material = primitive.material;\n            if (material) {\n                if (material._shaderProgramUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].InvalidCGAPIResourceUid) {\n                    return;\n                }\n                var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n                var gl = glw.getRawContext();\n                // Shader Setup\n                material.createProgram(this.vertexShaderMethodDefinitions_uniform);\n                var args = [\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].WorldMatrix, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].ViewMatrix, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].ProjectionMatrix, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].NormalMatrix, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].BoneMatrix, isPlural: true, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].BoneCompressedChank, isPlural: true, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].BoneCompressedInfo, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].LightNumber, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].ViewPosition, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].SkinningMode, compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__[\"CompositionType\"].Scalar, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Int, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].DiffuseEnvTexture, compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__[\"CompositionType\"].TextureCube, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Int, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].SpecularEnvTexture, compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__[\"CompositionType\"].TextureCube, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Int, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].IBLParameter, compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__[\"CompositionType\"].Vec4, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Float, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].BrdfLutTexture, compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__[\"CompositionType\"].Texture2D, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Int, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].VertexAttributesExistenceArray, compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__[\"CompositionType\"].Scalar, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Int, isPlural: false, isSystem: true },\n                    { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].HDRIFormat, compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__[\"CompositionType\"].Vec2, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Int, isPlural: false, isSystem: true },\n                ];\n                if (primitive.primitiveMode.index === gl.POINTS) {\n                    args.push({ semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].PointSize, compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__[\"CompositionType\"].Scalar, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Float, isPlural: false, isSystem: true }, { semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].PointDistanceAttenuation, compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_13__[\"CompositionType\"].Vec3, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Float, isPlural: false, isSystem: true });\n                }\n                var lights = [];\n                for (var i_1 = 0; i_1 < _foundation_core_Config__WEBPACK_IMPORTED_MODULE_7__[\"default\"].maxLightNumberInShader; i_1++) {\n                    lights.push({ semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].LightPosition, isPlural: false, prefix: \"lights[\" + i_1 + \"].\", index: i_1, isSystem: true });\n                    lights.push({ semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].LightDirection, isPlural: false, prefix: \"lights[\" + i_1 + \"].\", index: i_1, isSystem: true });\n                    lights.push({ semantic: _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].LightIntensity, isPlural: false, prefix: \"lights[\" + i_1 + \"].\", index: i_1, isSystem: true });\n                }\n                this.__webglResourceRepository.setupUniformLocations(material._shaderProgramUid, args.concat(lights));\n                material.setUniformLocations(material._shaderProgramUid);\n            }\n        }\n    };\n    WebGLStrategyUniform.prototype.$load = function (meshComponent) {\n        return __awaiter(this, void 0, void 0, function () {\n            var primitiveNum, i, primitive, vertexHandles, pbrCookTorranceBrdfLutDataUrl, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.setupShaderProgram(meshComponent);\n                        primitiveNum = meshComponent.getPrimitiveNumber();\n                        for (i = 0; i < primitiveNum; i++) {\n                            primitive = meshComponent.getPrimitiveAt(i);\n                            vertexHandles = this.__webglResourceRepository.createVertexDataResources(primitive);\n                            WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids.set(primitive.primitiveUid, vertexHandles);\n                        }\n                        this.__dummyWhiteTextureUid = this.__webglResourceRepository.createDummyTexture();\n                        this.__dummyBlackTextureUid = this.__webglResourceRepository.createDummyTexture(\"rgba(0, 0, 0, 1)\");\n                        this.__dummyBlackCubeTextureUid = this.__webglResourceRepository.createDummyCubeTexture();\n                        pbrCookTorranceBrdfLutDataUrl = _foundation_system_ModuleManager__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getInstance().getModule('pbr').pbrCookTorranceBrdfLutDataUrl;\n                        _a = this;\n                        return [4 /*yield*/, this.__webglResourceRepository.createTextureFromDataUri(pbrCookTorranceBrdfLutDataUrl, {\n                                level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_9__[\"PixelFormat\"].RGBA,\n                                border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_9__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_11__[\"TextureParameter\"].Linear, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_11__[\"TextureParameter\"].Linear,\n                                wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_11__[\"TextureParameter\"].ClampToEdge, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_11__[\"TextureParameter\"].ClampToEdge, generateMipmap: false, anisotropy: false\n                            })];\n                    case 1:\n                        _a.__pbrCookTorranceBrdfLutDataUrlUid = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    WebGLStrategyUniform.prototype.$prerender = function (meshComponent, instanceIDBufferUid) {\n        var vertexHandles = [];\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        if (meshComponent.weights.length > 0) {\n            for (var i = 0; i < primitiveNum; i++) {\n                var primitive = meshComponent.getPrimitiveAt(i);\n                vertexHandles[i] = WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids.get(primitive.primitiveUid);\n                this.__webglResourceRepository.resendVertexBuffer(primitive, vertexHandles[i].vboHandles);\n            }\n        }\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            vertexHandles[i] = WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids.get(primitive.primitiveUid);\n            if (!vertexHandles[i].setComplete) {\n                //continue;\n            }\n            this.__webglResourceRepository.setVertexDataToPipeline(vertexHandles[i], primitive, instanceIDBufferUid);\n            vertexHandles[i].setComplete = true;\n        }\n    };\n    WebGLStrategyUniform.prototype.common_$prerender = function () {\n        var componentRepository = _foundation_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getInstance();\n        this.__lightComponents = componentRepository.getComponentsWithType(_foundation_components_LightComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n    };\n    ;\n    WebGLStrategyUniform.prototype.attachGPUData = function (primitive) {\n    };\n    ;\n    WebGLStrategyUniform.prototype.attatchShaderProgram = function (material) {\n    };\n    WebGLStrategyUniform.prototype.attachVertexData = function (i, primitive, glw, instanceIDBufferUid) {\n        var vertexHandle = WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids.get(primitive.primitiveUid);\n        var vaoHandles = vertexHandle;\n        var vao = this.__webglResourceRepository.getWebGLResource(vaoHandles.vaoHandle);\n        var gl = glw.getRawContext();\n        if (vao != null) {\n            glw.bindVertexArray(vao);\n        }\n        else {\n            this.__webglResourceRepository.setVertexDataToPipeline(vaoHandles, primitive, instanceIDBufferUid);\n            var ibo = this.__webglResourceRepository.getWebGLResource(vaoHandles.iboHandle);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        }\n    };\n    WebGLStrategyUniform.prototype.dettachVertexData = function (glw) {\n        var gl = glw.getRawContext();\n        if (glw.bindVertexArray) {\n            glw.bindVertexArray(null);\n        }\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    };\n    WebGLStrategyUniform.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new WebGLStrategyUniform();\n        }\n        return this.__instance;\n    };\n    WebGLStrategyUniform.prototype.common_$render = function (primitive, viewMatrix, projectionMatrix) {\n        return false;\n    };\n    WebGLStrategyUniform.isOpaqueMode = function () {\n        return WebGLStrategyUniform.__isOpaqueMode;\n    };\n    WebGLStrategyUniform.isTransparentMode = function () {\n        return !WebGLStrategyUniform.__isOpaqueMode;\n    };\n    WebGLStrategyUniform.prototype.$render = function (idx, meshComponent, worldMatrix, normalMatrix, entity, renderPass, diffuseCube, specularCube) {\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        if (idx === 0) {\n            gl.disable(gl.BLEND);\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthMask(true);\n            WebGLStrategyUniform.__isOpaqueMode = true;\n        }\n        if (idx === _foundation_components_MeshRendererComponent__WEBPACK_IMPORTED_MODULE_12__[\"default\"].firstTranparentIndex) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n            gl.depthMask(false);\n            WebGLStrategyUniform.__isOpaqueMode = false;\n        }\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            if (WebGLStrategyUniform.isOpaqueMode() && primitive.isBlend()) {\n                continue;\n            }\n            if (WebGLStrategyUniform.isTransparentMode() && primitive.isOpaque()) {\n                continue;\n            }\n            //this.attatchShaderProgram(primitive.material!);\n            this.attachVertexData(i, primitive, glw, _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].InvalidCGAPIResourceUid);\n            var material = primitive.material;\n            /*\n            if (meshComponent.isFirstOpaquePrimitiveAt(i)) {\n              gl.disable(gl.BLEND);\n              gl.depthMask(true);\n            }\n            if (meshComponent.isFirstTransparentPrimitiveAt(i)) {\n              gl.enable(gl.BLEND);\n              gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n              gl.depthMask(false);\n            }\n      */\n            var shaderProgram = this.__webglResourceRepository.getWebGLResource(material._shaderProgramUid);\n            var shaderProgramUid = material._shaderProgramUid;\n            var force = false;\n            if (shaderProgramUid !== this.__lastShader) {\n                gl.useProgram(shaderProgram);\n                this.__lastShader = shaderProgramUid;\n                force = true;\n            }\n            // Uniforms from System\n            var vertexHandle = WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids.get(primitive.primitiveUid);\n            this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].VertexAttributesExistenceArray, false, 1, 'i', true, { x: vertexHandle.attributesFlags }, { force: force });\n            /// Matrices\n            _foundation_math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_2__[\"default\"].transposeTo(worldMatrix, WebGLStrategyUniform.transposedMatrix44);\n            this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].WorldMatrix, true, 4, 'f', true, { x: WebGLStrategyUniform.transposedMatrix44.v }, { force: force });\n            this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].NormalMatrix, true, 3, 'f', true, { x: normalMatrix.v }, { force: force });\n            var cameraComponent = renderPass.cameraComponent;\n            if (cameraComponent) {\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].ViewMatrix, true, 4, 'f', true, { x: cameraComponent.viewMatrix.v }, { force: force });\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].ProjectionMatrix, true, 4, 'f', true, { x: cameraComponent.projectionMatrix.v }, { force: force });\n                // ViewPosition\n                var cameraPosition = cameraComponent.worldPosition;\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].ViewPosition, false, 3, 'f', true, { x: cameraPosition.v }, { force: force });\n            }\n            // Lights\n            this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].LightNumber, false, 1, 'i', false, { x: this.__lightComponents.length }, { force: force });\n            for (var i_2 = 0; i_2 < this.__lightComponents.length; i_2++) {\n                if (i_2 >= _foundation_core_Config__WEBPACK_IMPORTED_MODULE_7__[\"default\"].maxLightNumberInShader) {\n                    break;\n                }\n                var lightComponent = this.__lightComponents[i_2];\n                var sceneGraphComponent = lightComponent.entity.getSceneGraph();\n                var worldLightPosition = sceneGraphComponent.worldPosition;\n                var worldLightDirection = lightComponent.direction;\n                var worldLightIntensity = lightComponent.intensity;\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].LightPosition, false, 4, 'f', false, { x: worldLightPosition.x, y: worldLightPosition.y, z: worldLightPosition.z, w: lightComponent.type.index }, { force: force }, i_2);\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].LightDirection, false, 4, 'f', false, { x: worldLightDirection.x, y: worldLightDirection.y, z: worldLightDirection.z, w: 0 }, { force: force }, i_2);\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].LightIntensity, false, 4, 'f', false, { x: worldLightIntensity.x, y: worldLightIntensity.y, z: worldLightIntensity.z, w: 0 }, { force: force }, i_2);\n            }\n            /// Skinning\n            var skeletalComponent = entity.getComponent(_foundation_components_SkeletalComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n            if (skeletalComponent) {\n                var jointMatrices = skeletalComponent.jointMatrices;\n                var jointCompressedChanks = skeletalComponent.jointCompressedChanks;\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].BoneMatrix, true, 4, 'f', true, { x: jointMatrices }, { force: force });\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].BoneCompressedChank, false, 4, 'f', true, { x: jointCompressedChanks }, { force: force });\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].BoneCompressedInfo, false, 4, 'f', true, { x: skeletalComponent.jointCompressedInfo.v }, { force: force });\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].SkinningMode, false, 1, 'i', false, { x: true }, { force: force });\n            }\n            else {\n                this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].SkinningMode, false, 1, 'i', false, { x: false }, { force: force });\n            }\n            var updated = void 0;\n            // Env map\n            updated = this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].DiffuseEnvTexture, false, 1, 'i', false, { x: 6 }, { force: force });\n            if (updated) {\n                gl.activeTexture(gl.TEXTURE6);\n                if (diffuseCube && diffuseCube.isTextureReady) {\n                    var texture = this.__webglResourceRepository.getWebGLResource(diffuseCube.cgApiResourceUid);\n                    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n                }\n                else {\n                    var texture = this.__webglResourceRepository.getWebGLResource(this.__dummyBlackCubeTextureUid);\n                    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n                }\n            }\n            updated = this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].SpecularEnvTexture, false, 1, 'i', false, { x: 7 }, { force: force });\n            if (updated) {\n                gl.activeTexture(gl.TEXTURE7);\n                if (specularCube && specularCube.isTextureReady) {\n                    var texture = this.__webglResourceRepository.getWebGLResource(specularCube.cgApiResourceUid);\n                    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n                }\n                else {\n                    var texture = this.__webglResourceRepository.getWebGLResource(this.__dummyBlackCubeTextureUid);\n                    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n                }\n            }\n            var mipmapLevelNumber = 1;\n            if (specularCube) {\n                mipmapLevelNumber = specularCube.mipmapLevelNumber;\n            }\n            var meshRenderComponent = entity.getComponent(_foundation_components_MeshRendererComponent__WEBPACK_IMPORTED_MODULE_12__[\"default\"]);\n            this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].IBLParameter, false, 4, 'f', false, { x: mipmapLevelNumber, y: meshRenderComponent.diffuseCubeMapContribution, z: meshRenderComponent.specularCubeMapContribution, w: meshRenderComponent.rotationOfCubeMap }, { force: force });\n            var diffuseHdriType = _foundation_definitions_HdriFormat__WEBPACK_IMPORTED_MODULE_16__[\"HdriFormat\"].LDR_SRGB.index;\n            var specularHdriType = _foundation_definitions_HdriFormat__WEBPACK_IMPORTED_MODULE_16__[\"HdriFormat\"].LDR_SRGB.index;\n            if (meshRenderComponent.diffuseCubeMap) {\n                diffuseHdriType = meshRenderComponent.diffuseCubeMap.hdriFormat.index;\n            }\n            if (meshRenderComponent.specularCubeMap) {\n                specularHdriType = meshRenderComponent.specularCubeMap.hdriFormat.index;\n            }\n            this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].HDRIFormat, false, 2, 'i', false, { x: diffuseHdriType, y: specularHdriType }, { force: force });\n            // BRDF LUT\n            updated = this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].BrdfLutTexture, false, 1, 'i', false, { x: 5 }, { force: force });\n            if (updated) {\n                gl.activeTexture(gl.TEXTURE5);\n                if (this.__pbrCookTorranceBrdfLutDataUrlUid != null) {\n                    var texture = this.__webglResourceRepository.getWebGLResource(this.__pbrCookTorranceBrdfLutDataUrlUid);\n                    gl.bindTexture(gl.TEXTURE_2D, texture);\n                }\n                else {\n                    var texture = this.__webglResourceRepository.getWebGLResource(this.__dummyWhiteTextureUid);\n                    gl.bindTexture(gl.TEXTURE_2D, texture);\n                }\n            }\n            // Point size\n            var pointDistanceAttenuation = new _foundation_math_Vector3__WEBPACK_IMPORTED_MODULE_15__[\"default\"](0.0, 0.1, 0.01);\n            this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].PointSize, false, 1, 'f', false, { x: 30.0 }, { force: force });\n            this.__webglResourceRepository.setUniformValue(shaderProgramUid, _foundation_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_4__[\"ShaderSemantics\"].PointDistanceAttenuation, false, 3, 'f', true, { x: pointDistanceAttenuation.v }, { force: force });\n            //from material\n            if (material) {\n                material.setUniformValues(shaderProgramUid, force);\n            }\n            if (primitive.indicesAccessor) {\n                gl.drawElements(primitive.primitiveMode.index, primitive.indicesAccessor.elementCount, primitive.indicesAccessor.componentType.index, 0);\n            }\n            else {\n                gl.drawArrays(primitive.primitiveMode.index, 0, primitive.getVertexCountAsVerticesBased());\n            }\n            this.dettachVertexData(glw);\n        }\n        //    gl.useProgram(null);\n        this.__lastShader = -1;\n    };\n    WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids = new Map();\n    WebGLStrategyUniform.__isOpaqueMode = true;\n    WebGLStrategyUniform.transposedMatrix44 = new _foundation_math_MutableRowMajarMatrix44__WEBPACK_IMPORTED_MODULE_14__[\"default\"]([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    return WebGLStrategyUniform;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLStrategyUniform);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLStrategyUniform.ts?");

/***/ }),

/***/ "./src/webgl/getRenderingStrategy.ts":
/*!*******************************************!*\
  !*** ./src/webgl/getRenderingStrategy.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _foundation_definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../foundation/definitions/ProcessApproach */ \"./src/foundation/definitions/ProcessApproach.ts\");\n/* harmony import */ var _WebGLStrategyUBO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WebGLStrategyUBO */ \"./src/webgl/WebGLStrategyUBO.ts\");\n/* harmony import */ var _WebGLStrategyTransformFeedback__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WebGLStrategyTransformFeedback */ \"./src/webgl/WebGLStrategyTransformFeedback.ts\");\n/* harmony import */ var _WebGLStrategyDataTexture__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WebGLStrategyDataTexture */ \"./src/webgl/WebGLStrategyDataTexture.ts\");\n/* harmony import */ var _WebGLStrategyUniform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WebGLStrategyUniform */ \"./src/webgl/WebGLStrategyUniform.ts\");\n\n\n\n\n\nvar getRenderingStrategy = function (processApproach) {\n    // Strategy\n    if (processApproach.index === _foundation_definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_0__[\"ProcessApproach\"].UBOWebGL2.index) {\n        return _WebGLStrategyUBO__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n    }\n    else if (processApproach.index === _foundation_definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_0__[\"ProcessApproach\"].TransformFeedbackWebGL2.index) {\n        return _WebGLStrategyTransformFeedback__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n    }\n    else if (processApproach.index === _foundation_definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_0__[\"ProcessApproach\"].UniformWebGL1.index ||\n        processApproach.index === _foundation_definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_0__[\"ProcessApproach\"].UniformWebGL2.index) {\n        return _WebGLStrategyUniform__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getInstance();\n    }\n    else {\n        return _WebGLStrategyDataTexture__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (getRenderingStrategy);\n\n\n//# sourceURL=webpack:///./src/webgl/getRenderingStrategy.ts?");

/***/ }),

/***/ "./src/webgl/main.ts":
/*!***************************!*\
  !*** ./src/webgl/main.ts ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _getRenderingStrategy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getRenderingStrategy */ \"./src/webgl/getRenderingStrategy.ts\");\n/* harmony import */ var _shaders_GLSLShader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shaders/GLSLShader */ \"./src/webgl/shaders/GLSLShader.ts\");\n/* harmony import */ var _WebGLContextWrapper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WebGLContextWrapper */ \"./src/webgl/WebGLContextWrapper.ts\");\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _WebGLStrategyDataTexture__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WebGLStrategyDataTexture */ \"./src/webgl/WebGLStrategyDataTexture.ts\");\n/* harmony import */ var _WebGLStrategyTransformFeedback__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WebGLStrategyTransformFeedback */ \"./src/webgl/WebGLStrategyTransformFeedback.ts\");\n/* harmony import */ var _WebGLStrategyUBO__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WebGLStrategyUBO */ \"./src/webgl/WebGLStrategyUBO.ts\");\n/* harmony import */ var _WebGLStrategyUniform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./WebGLStrategyUniform */ \"./src/webgl/WebGLStrategyUniform.ts\");\n\n\n\n\n\n\n\n\nvar WebGL = Object.freeze({\n    getRenderingStrategy: _getRenderingStrategy__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    GLSLShader: _shaders_GLSLShader__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    WebGLContextWrapper: _WebGLContextWrapper__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    WebGLResourceRepository: _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    WebGLStrategyDataTexture: _WebGLStrategyDataTexture__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    WebGLStrategyTransformFeedback: _WebGLStrategyTransformFeedback__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    WebGLStrategyUBO: _WebGLStrategyUBO__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    WebGLStrategyUniform: _WebGLStrategyUniform__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGL);\n\n\n//# sourceURL=webpack:///./src/webgl/main.ts?");

/***/ })

}]);