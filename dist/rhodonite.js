/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"main": 0
/******/ 	};
/******/
/******/
/******/
/******/ 	// script path function
/******/ 	function jsonpScriptSrc(chunkId) {
/******/ 		return __webpack_require__.p + "rhodonite-" + ({"effekseer":"effekseer","pbr":"pbr","sparkgear":"sparkgear","webgl":"webgl"}[chunkId]||chunkId) + ".js"
/******/ 	}
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// JSONP chunk loading for javascript
/******/
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData !== 0) { // 0 means "already installed".
/******/
/******/ 			// a Promise means "currently loading".
/******/ 			if(installedChunkData) {
/******/ 				promises.push(installedChunkData[2]);
/******/ 			} else {
/******/ 				// setup Promise in chunk cache
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 				});
/******/ 				promises.push(installedChunkData[2] = promise);
/******/
/******/ 				// start chunk loading
/******/ 				var script = document.createElement('script');
/******/ 				var onScriptComplete;
/******/
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.src = jsonpScriptSrc(chunkId);
/******/
/******/ 				onScriptComplete = function (event) {
/******/ 					// avoid mem leaks in IE.
/******/ 					script.onerror = script.onload = null;
/******/ 					clearTimeout(timeout);
/******/ 					var chunk = installedChunks[chunkId];
/******/ 					if(chunk !== 0) {
/******/ 						if(chunk) {
/******/ 							var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 							var realSrc = event && event.target && event.target.src;
/******/ 							var error = new Error('Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')');
/******/ 							error.type = errorType;
/******/ 							error.request = realSrc;
/******/ 							chunk[1](error);
/******/ 						}
/******/ 						installedChunks[chunkId] = undefined;
/******/ 					}
/******/ 				};
/******/ 				var timeout = setTimeout(function(){
/******/ 					onScriptComplete({ type: 'timeout', target: script });
/******/ 				}, 120000);
/******/ 				script.onerror = script.onload = onScriptComplete;
/******/ 				document.head.appendChild(script);
/******/ 			}
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/foundation/main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/foundation/components/AnimationComponent.ts":
/*!*********************************************************!*\
  !*** ./src/foundation/components/AnimationComponent.ts ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AnimationComponent; });\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WellKnownComponentTIDs */ \"./src/foundation/components/WellKnownComponentTIDs.ts\");\n/* harmony import */ var _definitions_Animation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/Animation */ \"./src/foundation/definitions/Animation.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _math_Quaternion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math/Quaternion */ \"./src/foundation/math/Quaternion.ts\");\n/* harmony import */ var _TransformComponent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TransformComponent */ \"./src/foundation/components/TransformComponent.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n\n\n\n\n\n\n\n\nclass AnimationComponent extends _core_Component__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(entityUid, componentSid, entityRepository) {\n        super(entityUid, componentSid, entityRepository);\n        this.__animationLine = {};\n        this.__backupDefaultValues = {};\n        this.__currentProcessStage = _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_7__[\"ProcessStage\"].Create;\n    }\n    static get componentTID() {\n        return _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__[\"WellKnownComponentTIDs\"].AnimationComponentTID;\n    }\n    setAnimation(animationAttributeName, animationInputArray, animationOutputArray, interpolation) {\n        //    console.log(animationAttributeName, animationInputArray, animationOutputArray);\n        const line = {\n            input: animationInputArray,\n            output: animationOutputArray,\n            outputAttributeName: animationAttributeName,\n            outputCompositionType: animationOutputArray[0].compositionType,\n            interpolationMethod: interpolation\n        };\n        this.__animationLine[animationAttributeName] = line;\n    }\n    static lerp(start, end, ratio, compositionType) {\n        if (compositionType === _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_4__[\"CompositionType\"].Scalar) {\n            return start * (1 - ratio) + end * ratio;\n        }\n        else {\n            if (start instanceof _math_Quaternion__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\n                return _math_Quaternion__WEBPACK_IMPORTED_MODULE_5__[\"default\"].qlerp(start, end, ratio);\n            }\n            else {\n                const objectClass = start.constructor;\n                return objectClass.add(objectClass.multiply(start, (1 - ratio)), objectClass.multiply(end, ratio));\n            }\n        }\n    }\n    static interpolate(inputArray, outputArray, input, compositionType, method = _definitions_Animation__WEBPACK_IMPORTED_MODULE_3__[\"Animation\"].Linear) {\n        if (input < inputArray[0]) {\n            return outputArray[0].clone(); // out of range!\n        }\n        if (inputArray[inputArray.length - 1] <= input) {\n            return outputArray[outputArray.length - 1].clone(); // out of range!\n        }\n        if (method === _definitions_Animation__WEBPACK_IMPORTED_MODULE_3__[\"Animation\"].Linear) {\n            for (let i = 0; i < inputArray.length; i++) {\n                if (typeof inputArray[i + 1] === \"undefined\") {\n                    break;\n                }\n                if (inputArray[i] <= input && input < inputArray[i + 1]) {\n                    let ratio = (input - inputArray[i]) / (inputArray[i + 1] - inputArray[i]);\n                    let resultValue = this.lerp(outputArray[i].clone(), outputArray[i + 1].clone(), ratio, compositionType);\n                    return resultValue;\n                }\n            }\n        }\n        else if (method === _definitions_Animation__WEBPACK_IMPORTED_MODULE_3__[\"Animation\"].Step) {\n            for (let i = 0; i < inputArray.length; i++) {\n                if (typeof inputArray[i + 1] === \"undefined\") {\n                    break;\n                }\n                if (inputArray[i] <= input && input < inputArray[i + 1]) {\n                    return outputArray[i].clone();\n                }\n            }\n        }\n        return outputArray[0].clone(); // out of range!\n    }\n    getStartInputValueOfAnimation() {\n        let latestInputValue = Number.MAX_VALUE;\n        for (let attributeName in this.__animationLine) {\n            let inputValueArray = this.__animationLine[attributeName].input;\n            let inputLatestValueAtThisAttribute = inputValueArray[0];\n            if (inputLatestValueAtThisAttribute < latestInputValue) {\n                latestInputValue = inputLatestValueAtThisAttribute;\n                if (latestInputValue < AnimationComponent.__startInputValueOfAllComponent) {\n                    AnimationComponent.__startInputValueOfAllComponent = latestInputValue;\n                }\n            }\n        }\n        return latestInputValue;\n    }\n    getEndInputValueOfAnimation() {\n        let latestInputValue = -Number.MAX_VALUE;\n        for (let attributeName in this.__animationLine) {\n            let inputValueArray = this.__animationLine[attributeName].input;\n            let inputLatestValueAtThisAttribute = inputValueArray[inputValueArray.length - 1];\n            if (inputLatestValueAtThisAttribute > latestInputValue) {\n                latestInputValue = inputLatestValueAtThisAttribute;\n                if (latestInputValue > AnimationComponent.__endInputValueOfAllComponent) {\n                    AnimationComponent.__endInputValueOfAllComponent = latestInputValue;\n                }\n            }\n        }\n        return latestInputValue;\n    }\n    static get startInputValue() {\n        const components = _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance().getComponentsWithType(AnimationComponent);\n        components.forEach(component => {\n            component.getStartInputValueOfAnimation();\n        });\n        return AnimationComponent.__startInputValueOfAllComponent;\n    }\n    static get endInputValue() {\n        const components = _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance().getComponentsWithType(AnimationComponent);\n        components.forEach(component => {\n            component.getEndInputValueOfAnimation();\n        });\n        return AnimationComponent.__endInputValueOfAllComponent;\n    }\n    $create() {\n        this.__transformComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _TransformComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_7__[\"ProcessStage\"].Logic);\n    }\n    $logic() {\n        for (let attributeName in this.__animationLine) {\n            if (this.__backupDefaultValues[attributeName] == null) {\n                this.__backupDefaultValues[attributeName] = this.__transformComponent[attributeName];\n            }\n            if (AnimationComponent.isAnimating) {\n                const line = this.__animationLine[attributeName];\n                let value = AnimationComponent.interpolate(line.input, line.output, AnimationComponent.globalTime, line.outputCompositionType, line.interpolationMethod);\n                this.__transformComponent[attributeName] = value;\n            }\n            else {\n                this.__transformComponent[attributeName] = this.__backupDefaultValues[attributeName];\n            }\n        }\n    }\n}\nAnimationComponent.globalTime = 0;\nAnimationComponent.isAnimating = true;\nAnimationComponent.__startInputValueOfAllComponent = Number.MAX_VALUE;\nAnimationComponent.__endInputValueOfAllComponent = -Number.MAX_VALUE;\n_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].registerComponentClass(AnimationComponent);\n\n\n//# sourceURL=webpack:///./src/foundation/components/AnimationComponent.ts?");

/***/ }),

/***/ "./src/foundation/components/CameraComponent.ts":
/*!******************************************************!*\
  !*** ./src/foundation/components/CameraComponent.ts ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CameraComponent; });\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WellKnownComponentTIDs */ \"./src/foundation/components/WellKnownComponentTIDs.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _definitions_CameraType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../definitions/CameraType */ \"./src/foundation/definitions/CameraType.ts\");\n/* harmony import */ var _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n/* harmony import */ var _math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../math/RowMajarMatrix44 */ \"./src/foundation/math/RowMajarMatrix44.ts\");\n/* harmony import */ var _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../math/MutableMatrix44 */ \"./src/foundation/math/MutableMatrix44.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n/* harmony import */ var _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../math/MutableVector4 */ \"./src/foundation/math/MutableVector4.ts\");\n/* harmony import */ var _CameraControllerComponent__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./CameraControllerComponent */ \"./src/foundation/components/CameraControllerComponent.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass CameraComponent extends _core_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(entityUid, componentSid, entityRepository) {\n        super(entityUid, componentSid, entityRepository);\n        this._eye = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].zero();\n        this._eyeInner = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dummy();\n        this._direction = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dummy();\n        this._directionInner = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dummy();\n        this._up = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dummy();\n        this._upInner = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dummy();\n        // x: left, y:right, z:top, w: bottom\n        this._corner = _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"].dummy();\n        this._cornerInner = _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"].dummy();\n        // x: zNear, y: zFar,\n        // if perspective, z: fovy, w: aspect\n        // if ortho, z: xmag, w: ymag\n        this._parameters = _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"].dummy();\n        this._parametersInner = _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"].dummy();\n        this.type = _definitions_CameraType__WEBPACK_IMPORTED_MODULE_5__[\"CameraType\"].Perspective;\n        this._projectionMatrix = _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dummy();\n        this._viewMatrix = _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dummy();\n        this._tmp_f = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dummy();\n        this._tmp_s = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dummy();\n        this._tmp_u = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dummy();\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'eyeInner', _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0, 0, 0]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'direction', _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0, 0, -1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'up', _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0, 1, 0]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'directionInner', _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0, 0, -1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'upInner', _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0, 1, 0]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'corner', _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [-1, 1, 1, -1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'cornerInner', _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [-1, 1, 1, -1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'parameters', _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0.1, 10000, 90, 1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'parametersInner', _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0.1, 10000, 90, 1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'projectionMatrix', _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'viewMatrix', _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'tmp_f', _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0, 0, 0]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'tmp_s', _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0, 0, 0]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'tmp_u', _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_9__[\"ComponentType\"].Float, [0, 0, 0]);\n        this.submitToAllocation(20);\n        this.__sceneGraphComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_11__[\"ProcessStage\"].PreRender);\n        CameraComponent.main = componentSid;\n    }\n    get eye() {\n        return _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].zero();\n    }\n    get eyeInner() {\n        return this._eyeInner;\n    }\n    set eyeInner(vec) {\n        this._eyeInner = vec;\n    }\n    set upInner(vec) {\n        this._upInner.copyComponents(vec);\n    }\n    set up(vec) {\n        this._up.copyComponents(vec);\n    }\n    get up() {\n        return this._up.clone();\n    }\n    get upInner() {\n        return this._up.clone();\n    }\n    set direction(vec) {\n        this._direction.copyComponents(vec);\n    }\n    set directionInner(vec) {\n        this._directionInner.copyComponents(vec);\n    }\n    get direction() {\n        return this._direction.clone();\n    }\n    get directionInner() {\n        return this._directionInner;\n    }\n    set corner(vec) {\n        this._corner.copyComponents(vec);\n    }\n    get corner() {\n        return this._corner.clone();\n    }\n    set left(value) {\n        this._corner.x = value;\n    }\n    set leftInner(value) {\n        this._cornerInner.x = value;\n    }\n    get left() {\n        return this._corner.x;\n    }\n    set right(value) {\n        this._corner.y = value;\n    }\n    set rightInner(value) {\n        this._cornerInner.y = value;\n    }\n    get right() {\n        return this._corner.y;\n    }\n    set top(value) {\n        this._corner.z = value;\n    }\n    set topInner(value) {\n        this._cornerInner.z = value;\n    }\n    get top() {\n        return this._corner.z;\n    }\n    set bottom(value) {\n        this._corner.w = value;\n    }\n    set bottomInner(value) {\n        this._cornerInner.w = value;\n    }\n    get bottom() {\n        return this._corner.w;\n    }\n    set cornerInner(vec) {\n        this._corner = new _math_MutableVector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"](vec);\n    }\n    get cornerInner() {\n        return this._corner;\n    }\n    set parameters(vec) {\n        this._parameters.copyComponents(vec);\n    }\n    set parametersInner(vec) {\n        this._parametersInner.copyComponents(vec);\n    }\n    get parameters() {\n        return this._parameters.clone();\n    }\n    set zNear(val) {\n        this._parameters.x = val;\n    }\n    set zNearInner(val) {\n        this._parametersInner.x = val;\n    }\n    get zNearInner() {\n        return this._parametersInner.x;\n    }\n    get zNear() {\n        return this._parameters.x;\n    }\n    set zFar(val) {\n        this._parameters.y = val;\n    }\n    set zFarInner(val) {\n        this._parametersInner.y = val;\n    }\n    get zFar() {\n        return this._parameters.y;\n    }\n    set fovy(val) {\n        this._parameters.z = val;\n    }\n    get fovy() {\n        return this._parameters.z;\n    }\n    set fovyInner(val) {\n        this._parametersInner.z = val;\n    }\n    set aspect(val) {\n        this._parameters.w = val;\n    }\n    get aspect() {\n        return this._parameters.w;\n    }\n    set xmag(val) {\n        this._parameters.z = val;\n    }\n    get xmag() {\n        return this._parameters.z;\n    }\n    set ymag(val) {\n        this._parameters.w = val;\n    }\n    get ymag() {\n        return this._parameters.w;\n    }\n    static get componentTID() {\n        return _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__[\"WellKnownComponentTIDs\"].CameraComponentTID;\n    }\n    $logic() {\n        const cameraControllerComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _CameraControllerComponent__WEBPACK_IMPORTED_MODULE_13__[\"default\"]);\n        if (cameraControllerComponent == null) {\n            this.eyeInner = this.eye;\n            this.directionInner = this.direction;\n            this.upInner = this.up;\n            this.cornerInner = this.corner;\n            this.parametersInner = this.parameters;\n        }\n    }\n    calcProjectionMatrix() {\n        const zNear = this._parametersInner.x;\n        const zFar = this._parametersInner.y;\n        if (this.type === _definitions_CameraType__WEBPACK_IMPORTED_MODULE_5__[\"CameraType\"].Perspective) {\n            const fovy = this._parametersInner.z;\n            const aspect = this._parametersInner.w;\n            var yscale = 1.0 / Math.tan((0.5 * fovy * Math.PI) / 180);\n            var xscale = yscale / aspect;\n            this._projectionMatrix.setComponents(xscale, 0, 0, 0, 0, yscale, 0, 0, 0, 0, -(zFar + zNear) / (zFar - zNear), -(2.0 * zFar * zNear) / (zFar - zNear), 0, 0, -1, 0);\n        }\n        else if (this.type === _definitions_CameraType__WEBPACK_IMPORTED_MODULE_5__[\"CameraType\"].Orthographic) {\n            const xmag = this._parametersInner.z;\n            const ymag = this._parametersInner.w;\n            this._projectionMatrix.setComponents(1 / xmag, 0.0, 0.0, 0, 0.0, 1 / ymag, 0.0, 0, 0.0, 0.0, -2 / (zFar - zNear), -(zFar + zNear) / (zFar - zNear), 0.0, 0.0, 0.0, 1.0);\n        }\n        else {\n            const left = this._cornerInner.x;\n            const right = this._cornerInner.y;\n            const top = this._cornerInner.z;\n            const bottom = this._cornerInner.w;\n            this._projectionMatrix.setComponents(2 * zNear / (right - left), 0.0, (right + left) / (right - left), 0.0, 0.0, 2 * zNear / (top - bottom), (top + bottom) / (top - bottom), 0.0, 0.0, 0.0, -(zFar + zNear) / (zFar - zNear), -1 * 2 * zFar * zNear / (zFar - zNear), 0.0, 0.0, -1.0, 0.0);\n        }\n        return this._projectionMatrix;\n    }\n    get projectionMatrix() {\n        return this._projectionMatrix;\n    }\n    calcViewMatrix() {\n        const eye = this.eyeInner;\n        const f = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].normalize(_math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].subtract(this._directionInner, eye));\n        const s = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].normalize(_math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].cross(f, this._upInner));\n        const u = _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].cross(s, f);\n        this._viewMatrix.setComponents(s.x, s.y, s.z, -_math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dotProduct(s, eye), u.x, u.y, u.z, -_math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dotProduct(u, eye), -f.x, -f.y, -f.z, _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dotProduct(f, eye), 0, 0, 0, 1);\n        const invertWorldMatrix = _math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_7__[\"default\"].invert(this.__sceneGraphComponent.worldMatrix);\n        this._viewMatrix.multiply(invertWorldMatrix);\n        return this._viewMatrix;\n    }\n    get viewMatrix() {\n        return this._viewMatrix;\n    }\n    $create({ strategy }) {\n        if (this.__sceneGraphComponent != null) {\n            return;\n        }\n        this.__sceneGraphComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_11__[\"ProcessStage\"].Logic);\n    }\n    $prerender() {\n        this.calcProjectionMatrix();\n        this.calcViewMatrix();\n    }\n    get worldPosition() {\n        const worldPosition = new _math_Vector3__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.__sceneGraphComponent.worldMatrixInner.multiplyVector(new _math_Vector4__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.eyeInner)));\n        return worldPosition;\n    }\n}\nCameraComponent.main = -1;\n_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].registerComponentClass(CameraComponent);\n\n\n//# sourceURL=webpack:///./src/foundation/components/CameraComponent.ts?");

/***/ }),

/***/ "./src/foundation/components/CameraControllerComponent.ts":
/*!****************************************************************!*\
  !*** ./src/foundation/components/CameraControllerComponent.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CameraControllerComponent; });\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _misc_MiscUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../misc/MiscUtil */ \"./src/foundation/misc/MiscUtil.ts\");\n/* harmony import */ var _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WellKnownComponentTIDs */ \"./src/foundation/components/WellKnownComponentTIDs.ts\");\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math/MutableVector3 */ \"./src/foundation/math/MutableVector3.ts\");\n/* harmony import */ var _math_MathUtil__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\n/* harmony import */ var _math_Matrix33__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../math/Matrix33 */ \"./src/foundation/math/Matrix33.ts\");\n/* harmony import */ var _CameraComponent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./CameraComponent */ \"./src/foundation/components/CameraComponent.ts\");\n/* harmony import */ var _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../math/MutableMatrix33 */ \"./src/foundation/math/MutableMatrix33.ts\");\n/* harmony import */ var _TransformComponent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./TransformComponent */ \"./src/foundation/components/TransformComponent.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _math_Matrix44__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../math/Matrix44 */ \"./src/foundation/math/Matrix44.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass CameraControllerComponent extends _core_Component__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(entityUid, componentSid, entityRepository) {\n        super(entityUid, componentSid, entityRepository);\n        this.__isKeyUp = false;\n        this.__movedMouseYOnCanvas = -1;\n        this.__movedMouseXOnCanvas = -1;\n        this.__clickedMouseYOnCanvas = -1;\n        this.__clickedMouseXOnCanvas = -1;\n        this.__mouse_translate_y = 0;\n        this.__mouse_translate_x = 0;\n        this.__efficiency = 1;\n        this.__lengthOfCenterToEye = 1;\n        this.__foyvBias = 1.0;\n        this.__scaleOfTraslation = 5.0;\n        this.__mouseTranslateVec = _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].zero();\n        this.__newEyeToCenterVec = _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].zero();\n        this.__newUpVec = _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].zero();\n        this.__newTangentVec = _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].zero();\n        this.__verticalAngleThrethold = 0;\n        this.__verticalAngleOfVectors = 0;\n        this.__isForceGrab = false;\n        this.__isSymmetryMode = false;\n        this.__doResetWhenCameraSettingChanged = false;\n        this.__rot_bgn_x = 0;\n        this.__rot_bgn_y = 0;\n        this.__rot_x = 0;\n        this.__rot_y = 0;\n        this.__wheel_y = 1;\n        this.__eyeVec = _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].zero();\n        this.__centerVec = _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].zero();\n        this.__upVec = _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].zero();\n        this.__shiftCameraTo = _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].zero();\n        this.__lengthCenterToCorner = 0.5;\n        this.__lengthCameraToObject = 1;\n        this.__scaleOfLengthCameraToCenter = 1;\n        this.__zFarAdjustingFactorBasedOnAABB = 2.0;\n        this.registerEventListeners();\n    }\n    setTarget(targetEntity) {\n        this.__targetEntity = targetEntity;\n    }\n    getTarget() {\n        return this.__targetEntity;\n    }\n    $create() {\n        this.__cameraComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _CameraComponent__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n        this.__transformComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _TransformComponent__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_11__[\"ProcessStage\"].Logic);\n    }\n    __mouseUp(evt) {\n        this.__isKeyUp = true;\n        this.__movedMouseYOnCanvas = -1;\n        this.__movedMouseXOnCanvas = -1;\n    }\n    __mouseDown(evt) {\n        //MiscUtil.preventDefaultForDesktopOnly(evt);\n        //    evt.stopPropagation();\n        let rect = evt.target.getBoundingClientRect();\n        let clientX = null;\n        let clientY = null;\n        if (evt.clientX) {\n            clientX = evt.clientX;\n            clientY = evt.clientY;\n        }\n        else {\n            clientX = evt.touches[0].clientX;\n            clientY = evt.touches[0].clientY;\n        }\n        this.__clickedMouseXOnCanvas = clientX - rect.left;\n        this.__clickedMouseYOnCanvas = clientY - rect.top;\n        this.__movedMouseYOnCanvas = -1;\n        this.__movedMouseXOnCanvas = -1;\n        this.__rot_bgn_x = this.__rot_x;\n        this.__rot_bgn_y = this.__rot_y;\n        this.__isKeyUp = false;\n        if (typeof evt.buttons !== \"undefined\") {\n            //      this.updateCamera();\n        }\n        return false;\n    }\n    __mouseMove(evt) {\n        //MiscUtil.preventDefaultForDesktopOnly(evt);\n        //evt.stopPropagation();\n        if (this.__isKeyUp) {\n            return;\n        }\n        let rect = evt.target.getBoundingClientRect();\n        let clientX = null;\n        let clientY = null;\n        if (evt.clientX) {\n            clientX = evt.clientX;\n            clientY = evt.clientY;\n        }\n        else {\n            clientX = evt.touches[0].clientX;\n            clientY = evt.touches[0].clientY;\n        }\n        this.__movedMouseXOnCanvas = clientX - rect.left;\n        this.__movedMouseYOnCanvas = clientY - rect.top;\n        if (typeof evt.buttons !== \"undefined\") {\n            let data = evt.buttons;\n            let button_l = data & 0x0001 ? true : false;\n            let button_c = data & 0x0004 ? true : false;\n            if (button_c) {\n                this.__mouse_translate_y =\n                    ((this.__movedMouseYOnCanvas - this.__clickedMouseYOnCanvas) / 1000) *\n                        this.__efficiency;\n                this.__mouse_translate_x =\n                    ((this.__movedMouseXOnCanvas - this.__clickedMouseXOnCanvas) / 1000) *\n                        this.__efficiency;\n                let scale = this.__lengthOfCenterToEye *\n                    this.__foyvBias *\n                    this.__scaleOfTraslation;\n                if (evt.shiftKey) {\n                    this.__mouseTranslateVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].add(this.__mouseTranslateVec, _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].normalize(this.__newEyeToCenterVec)\n                        .multiply(-this.__mouse_translate_y)\n                        .multiply(scale));\n                }\n                else {\n                    this.__mouseTranslateVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].add(this.__mouseTranslateVec, _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].normalize(this.__newUpVec)\n                        .multiply(this.__mouse_translate_y)\n                        .multiply(scale));\n                }\n                this.__mouseTranslateVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].add(this.__mouseTranslateVec, _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"].normalize(this.__newTangentVec)\n                    .multiply(this.__mouse_translate_x)\n                    .multiply(scale));\n                this.__clickedMouseYOnCanvas = this.__movedMouseYOnCanvas;\n                this.__clickedMouseXOnCanvas = this.__movedMouseXOnCanvas;\n            }\n            //      this.updateCamera();\n            if (!button_l) {\n                return;\n            }\n        }\n        // calc rotation angle\n        let delta_y = (this.__movedMouseYOnCanvas - this.__clickedMouseYOnCanvas) *\n            this.__efficiency;\n        let delta_x = (this.__movedMouseXOnCanvas - this.__clickedMouseXOnCanvas) *\n            this.__efficiency;\n        this.__rot_y = this.__rot_bgn_y - delta_y;\n        this.__rot_x = this.__rot_bgn_x - delta_x;\n        // check if rotation angle is within range\n        if (this.__verticalAngleThrethold - this.__verticalAngleOfVectors <\n            this.__rot_y) {\n            //        this._rot_y -= this._rot_y - (this._verticalAngleThrethold - this._verticalAngleOfVectors);\n        }\n        if (this.__rot_y <\n            -this.__verticalAngleThrethold + this.__verticalAngleOfVectors) {\n            //       this._rot_y += this._rot_y - (this._verticalAngleThrethold - this._verticalAngleOfVectors);\n        }\n        //    this.updateCamera();\n    }\n    ;\n    __mouseWheel(evt) {\n        _misc_MiscUtil__WEBPACK_IMPORTED_MODULE_1__[\"MiscUtil\"].preventDefaultForDesktopOnly(evt);\n        this.dolly += evt.deltaY / 600;\n    }\n    ;\n    __contexMenu(evt) {\n        if (evt.preventDefault) {\n            _misc_MiscUtil__WEBPACK_IMPORTED_MODULE_1__[\"MiscUtil\"].preventDefaultForDesktopOnly(evt);\n        }\n        else {\n            evt.returnValue = false;\n        }\n    }\n    ;\n    __mouseDblClick(evt) {\n        if (evt.shiftKey) {\n            this.__mouseTranslateVec = new _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"](0, 0, 0);\n        }\n        else if (evt.ctrlKey) {\n            this.__rot_y = 0;\n            this.__rot_x = 0;\n            this.__rot_bgn_y = 0;\n            this.__rot_bgn_x = 0;\n        }\n    }\n    ;\n    resetDolly() {\n        this.dolly = 1;\n    }\n    set dolly(value) {\n        this.__wheel_y = value;\n        this.__wheel_y = Math.min(this.__wheel_y, 3);\n        this.__wheel_y = Math.max(this.__wheel_y, 0.01);\n    }\n    get dolly() {\n        return this.__wheel_y;\n    }\n    registerEventListeners(eventTargetDom = document) {\n        if (eventTargetDom) {\n            if (\"ontouchend\" in document) {\n                eventTargetDom.addEventListener(\"touchstart\", this.__mouseDown.bind(this));\n                eventTargetDom.addEventListener(\"touchend\", this.__mouseUp.bind(this));\n                eventTargetDom.addEventListener(\"touchmove\", this.__mouseMove.bind(this));\n            }\n            if (\"onmouseup\" in document) {\n                eventTargetDom.addEventListener(\"mousedown\", this.__mouseDown.bind(this));\n                eventTargetDom.addEventListener(\"mouseup\", this.__mouseUp.bind(this));\n                eventTargetDom.addEventListener(\"mousemove\", this.__mouseMove.bind(this));\n            }\n            if (window.WheelEvent) {\n                eventTargetDom.addEventListener(\"wheel\", this.__mouseWheel.bind(this));\n            }\n            eventTargetDom.addEventListener(\"contextmenu\", this.__contexMenu.bind(this), false);\n            eventTargetDom.addEventListener(\"dblclick\", this.__mouseDblClick.bind(this));\n        }\n    }\n    unregisterEventListeners(eventTargetDom = document) {\n        if (eventTargetDom) {\n            if (\"ontouchend\" in document) {\n                eventTargetDom.removeEventListener(\"touchstart\", this.__mouseDown.bind(this));\n                eventTargetDom.removeEventListener(\"touchend\", this.__mouseUp.bind(this));\n                eventTargetDom.removeEventListener(\"touchmove\", this.__mouseMove, {\n                    passive: false\n                });\n            }\n            if (\"onmouseup\" in document) {\n                eventTargetDom.removeEventListener(\"mousedown\", this.__mouseDown.bind(this));\n                eventTargetDom.removeEventListener(\"mouseup\", this.__mouseUp.bind(this));\n                eventTargetDom.removeEventListener(\"mousemove\", this.__mouseMove, {\n                    passive: false\n                });\n            }\n            if (window.WheelEvent) {\n                eventTargetDom.removeEventListener(\"wheel\", this.__mouseWheel.bind(this));\n            }\n            eventTargetDom.removeEventListener(\"contextmenu\", this.__contexMenu.bind(this), false);\n            eventTargetDom.removeEventListener(\"dblclick\", this.__mouseDblClick.bind(this));\n        }\n    }\n    __getFovyFromCamera(camera) {\n        if (camera.fovy) {\n            return camera.fovy;\n        }\n        else {\n            return _math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].radianToDegree(2 * Math.atan(Math.abs(camera.top - camera.bottom) / (2 * camera.zNear)));\n        }\n    }\n    $logic() {\n        const data0 = this.__updateTargeting(this.__cameraComponent);\n        const eye = data0.newEyeVec;\n        const center = data0.newCenterVec;\n        const up = data0.newUpVec;\n        const data = this.__convert(this.__cameraComponent, eye, center, up);\n        const cc = this.__cameraComponent;\n        cc.eyeInner = data.newEyeVec;\n        cc.directionInner = data.newCenterVec;\n        cc.upInner = data.newUpVec;\n        cc.zNearInner = data.newZNear;\n        cc.zFarInner = data.newZFar;\n        cc.leftInner = data.newLeft;\n        cc.rightInner = data.newRight;\n        cc.topInner = data.newTop;\n        cc.bottomInner = data.newBottom;\n        cc.fovyInner = data.fovy;\n    }\n    __convert(camera, eye, center, up) {\n        let newEyeVec = null;\n        let newCenterVec;\n        let newUpVec = null;\n        if (this.__isKeyUp || !this.__isForceGrab) {\n            this.__eyeVec =\n                this.__shiftCameraTo != null\n                    ? _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].add(_math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].subtract(this.__shiftCameraTo, center), eye)\n                    : eye;\n            this.__centerVec =\n                this.__shiftCameraTo != null ? this.__shiftCameraTo : new _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"](center);\n            this.__upVec = new _math_MutableVector3__WEBPACK_IMPORTED_MODULE_5__[\"default\"](up);\n        }\n        let fovy = this.__getFovyFromCamera(camera);\n        if (this.__isSymmetryMode) {\n            let centerToEyeVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].subtract(this.__eyeVec, this.__centerVec);\n            centerToEyeVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].multiply(centerToEyeVec, (this.__wheel_y * 1.0) / Math.tan(_math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].degreeToRadian(fovy / 2.0)));\n            this.__lengthOfCenterToEye = centerToEyeVec.length();\n            let horizontalAngleOfVectors = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].angleOfVectors(new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](centerToEyeVec.x, 0, centerToEyeVec.z), new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 0, 1));\n            let horizontalSign = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].cross(new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](centerToEyeVec.x, 0, centerToEyeVec.z), new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 0, 1)).y;\n            if (horizontalSign >= 0) {\n                horizontalSign = 1;\n            }\n            else {\n                horizontalSign = -1;\n            }\n            horizontalAngleOfVectors *= horizontalSign;\n            let rotateM_Reset = _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__[\"default\"].rotateY(_math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].degreeToRadian(horizontalAngleOfVectors));\n            let rotateM_X = _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__[\"default\"].rotateX(_math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].degreeToRadian(this.__rot_y));\n            let rotateM_Y = _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__[\"default\"].rotateY(_math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].degreeToRadian(this.__rot_x));\n            let rotateM_Revert = _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__[\"default\"].rotateY(_math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].degreeToRadian(-horizontalAngleOfVectors));\n            let rotateM = _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__[\"default\"].multiply(rotateM_Revert, _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__[\"default\"].multiply(rotateM_Y, _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__[\"default\"].multiply(rotateM_X, rotateM_Reset)));\n            newUpVec = rotateM.multiplyVector(this.__upVec);\n            this.__newUpVec = newUpVec;\n            newEyeVec = rotateM.multiplyVector(centerToEyeVec).add(this.__centerVec);\n            newCenterVec = this.__centerVec.clone();\n            this.__newEyeToCenterVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].subtract(newCenterVec, newEyeVec);\n            this.__newTangentVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].cross(this.__newUpVec, this.__newEyeToCenterVec);\n            newEyeVec.add(this.__mouseTranslateVec);\n            newCenterVec.add(this.__mouseTranslateVec);\n            let horizonResetVec = rotateM_Reset.multiplyVector(centerToEyeVec);\n            this.__verticalAngleOfVectors = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].angleOfVectors(horizonResetVec, new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 0, 1));\n            let verticalSign = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].cross(horizonResetVec, new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 0, 1)).x;\n            if (verticalSign >= 0) {\n                verticalSign = 1;\n            }\n            else {\n                verticalSign = -1;\n            }\n            //this._verticalAngleOfVectors *= verticalSign;\n        }\n        else {\n            let centerToEyeVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].subtract(this.__eyeVec, this.__centerVec);\n            centerToEyeVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].multiply(centerToEyeVec, (this.__wheel_y * 1.0) / Math.tan(_math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].degreeToRadian(fovy / 2.0)));\n            let rotateM_X = _math_Matrix33__WEBPACK_IMPORTED_MODULE_7__[\"default\"].rotateX(_math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].degreeToRadian(this.__rot_y));\n            let rotateM_Y = _math_Matrix33__WEBPACK_IMPORTED_MODULE_7__[\"default\"].rotateY(_math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].degreeToRadian(this.__rot_x));\n            let rotateM = _math_Matrix33__WEBPACK_IMPORTED_MODULE_7__[\"default\"].multiply(rotateM_Y, rotateM_X);\n            newUpVec = rotateM.multiplyVector(this.__upVec);\n            this.__newUpVec = newUpVec;\n            newEyeVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].add(rotateM.multiplyVector(centerToEyeVec), this.__centerVec);\n            newCenterVec = this.__centerVec.clone();\n            this.__newEyeToCenterVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].subtract(newCenterVec, newEyeVec);\n            this.__newTangentVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].cross(this.__newUpVec, this.__newEyeToCenterVec);\n            newEyeVec.add(this.__mouseTranslateVec);\n            newCenterVec.add(this.__mouseTranslateVec);\n        }\n        const newCenterToEyeLength = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].lengthBtw(newEyeVec, newCenterVec);\n        let newLeft = camera.left;\n        let newRight = camera.right;\n        let newTop = camera.top;\n        let newBottom = camera.bottom;\n        let newZNear = camera.zNear;\n        let newZFar = camera.zFar;\n        let ratio = 1;\n        if (typeof newLeft !== \"undefined\") {\n            if (typeof this.__lengthCenterToCorner !== \"undefined\") {\n                //let aabb = this.__getTargetAABB();\n                ratio =\n                    camera.zNear /\n                        Math.abs(newCenterToEyeLength - this.__lengthCenterToCorner);\n                const minRatio = 0.001;\n                if (ratio < minRatio) {\n                    ratio = minRatio;\n                }\n                let scale = 1 / ratio;\n                newLeft *= scale;\n                newRight *= scale;\n                newTop *= scale;\n                newBottom *= scale;\n                newZFar *= scale;\n                newZNear *= scale;\n            }\n        }\n        if (this.__targetEntity) {\n            newZFar =\n                camera.zNear + _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].subtract(newCenterVec, newEyeVec).length();\n            newZFar +=\n                this.__getTargetAABB().lengthCenterToCorner *\n                    this.__zFarAdjustingFactorBasedOnAABB;\n        }\n        this.__foyvBias = Math.tan(_math_MathUtil__WEBPACK_IMPORTED_MODULE_6__[\"MathUtil\"].degreeToRadian(fovy / 2.0));\n        return {\n            newEyeVec,\n            newCenterVec,\n            newUpVec,\n            newZNear,\n            newZFar,\n            newLeft,\n            newRight,\n            newTop,\n            newBottom,\n            fovy\n        };\n    }\n    __getTargetAABB() {\n        return this.__targetEntity.getSceneGraph().worldAABB;\n    }\n    __updateTargeting(camera) {\n        const eyeVec = camera.eye;\n        const centerVec = camera.direction;\n        const upVec = camera.up;\n        const fovy = camera.fovy;\n        if (this.__targetEntity == null) {\n            return { newEyeVec: eyeVec, newCenterVec: centerVec, newUpVec: upVec };\n        }\n        let targetAABB = this.__getTargetAABB();\n        const cameraZNearPlaneHeight = camera.top - camera.bottom;\n        this.__lengthCenterToCorner = targetAABB.lengthCenterToCorner;\n        this.__lengthCameraToObject =\n            (targetAABB.lengthCenterToCorner / Math.sin((fovy * Math.PI) / 180 / 2)) *\n                this.__scaleOfLengthCameraToCenter;\n        let newCenterVec = targetAABB.centerPoint; //new Vector3(-0.0190, -0.10556, 0.0133);//targetAABB.centerPoint;//this.__targetEntity!.getSceneGraph().worldPosition;//targetAABB.centerPoint;\n        let centerToCameraVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].subtract(eyeVec, centerVec);\n        let centerToCameraVecNormalized = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].normalize(centerToCameraVec);\n        let newEyeVec = _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].add(_math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"].multiply(centerToCameraVecNormalized, this.__lengthCameraToObject), newCenterVec);\n        let newUpVec = null;\n        if (camera.entity.getSceneGraph()) {\n            const sg = camera.entity.getSceneGraph();\n            let mat = _math_Matrix44__WEBPACK_IMPORTED_MODULE_13__[\"default\"].invert(sg.worldMatrixInner);\n            newEyeVec = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](mat.multiplyVector(new _math_Vector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"](newEyeVec.x, newEyeVec.y, newEyeVec.z, 1)));\n            newCenterVec = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](mat.multiplyVector(new _math_Vector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"](newCenterVec.x, newCenterVec.y, newCenterVec.z, 1)));\n            newUpVec = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](mat.multiplyVector(new _math_Vector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"](upVec.x, upVec.y, upVec.z, 1)));\n        }\n        else {\n            newUpVec = upVec;\n        }\n        return { newEyeVec, newCenterVec, newUpVec };\n    }\n    static get componentTID() {\n        return _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__[\"WellKnownComponentTIDs\"].CameraControllerComponentTID;\n    }\n}\n_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_3__[\"default\"].registerComponentClass(CameraControllerComponent);\n\n\n//# sourceURL=webpack:///./src/foundation/components/CameraControllerComponent.ts?");

/***/ }),

/***/ "./src/foundation/components/LightComponent.ts":
/*!*****************************************************!*\
  !*** ./src/foundation/components/LightComponent.ts ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LightComponent; });\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WellKnownComponentTIDs */ \"./src/foundation/components/WellKnownComponentTIDs.ts\");\n/* harmony import */ var _definitions_LightType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/LightType */ \"./src/foundation/definitions/LightType.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n\n\n\n\n\n\n\nclass LightComponent extends _core_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(entityUid, componentSid, entityRepository) {\n        super(entityUid, componentSid, entityRepository);\n        this.type = _definitions_LightType__WEBPACK_IMPORTED_MODULE_3__[\"LightType\"].Point;\n        this.intensity = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](1, 1, 1);\n        this.__initialdirection = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 1, 0);\n        this.__direction = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 1, 0);\n        this.spotExponent = 1.0;\n        this.spotCutoff = 30; // in degree\n    }\n    static get componentTID() {\n        return _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__[\"WellKnownComponentTIDs\"].LightComponentTID;\n    }\n    $create() {\n        this.__sceneGraphComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_6__[\"ProcessStage\"].Logic);\n    }\n    $logic() {\n        this.__direction = this.__sceneGraphComponent.normalMatrixInner.multiplyVector(this.__initialdirection);\n    }\n    get direction() {\n        return this.__direction;\n    }\n}\n_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].registerComponentClass(LightComponent);\n\n\n//# sourceURL=webpack:///./src/foundation/components/LightComponent.ts?");

/***/ }),

/***/ "./src/foundation/components/MeshComponent.ts":
/*!****************************************************!*\
  !*** ./src/foundation/components/MeshComponent.ts ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MeshComponent; });\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WellKnownComponentTIDs */ \"./src/foundation/components/WellKnownComponentTIDs.ts\");\n/* harmony import */ var _definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n/* harmony import */ var _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../definitions/PrimitiveMode */ \"./src/foundation/definitions/PrimitiveMode.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _core_MemoryManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _math_AABB__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../math/AABB */ \"./src/foundation/math/AABB.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass MeshComponent extends _core_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(entityUid, componentSid, entityRepository) {\n        super(entityUid, componentSid, entityRepository);\n        this.__primitives = [];\n        this.__localAABB = new _math_AABB__WEBPACK_IMPORTED_MODULE_11__[\"default\"]();\n        this.__viewDepth = -Number.MAX_VALUE;\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_4__[\"ProcessStage\"].Load);\n    }\n    static get componentTID() {\n        return _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__[\"WellKnownComponentTIDs\"].MeshComponentTID;\n    }\n    addPrimitive(primitive) {\n        this.__primitives.push(primitive);\n    }\n    getPrimitiveAt(i) {\n        return this.__primitives[i];\n    }\n    getPrimitiveNumber() {\n        return this.__primitives.length;\n    }\n    $load() {\n        //    this.makeVerticesSepareted();\n        this.__calcTangents();\n        //this.__calcFaceNormals();\n        //  this.__calcBaryCentricCoord();\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_4__[\"ProcessStage\"].Mount);\n    }\n    __calcFaceNormals() {\n        for (let primitive of this.__primitives) {\n            const positionIdx = primitive.attributeSemantics.indexOf(_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_3__[\"VertexAttribute\"].Position);\n            const positionAccessor = primitive.attributeAccessors[positionIdx];\n            const indicesAccessor = primitive.indicesAccessor;\n            let incrementNum = 3; // PrimitiveMode.Triangles\n            if (primitive.primitiveMode === _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_5__[\"PrimitiveMode\"].TriangleStrip ||\n                primitive.primitiveMode === _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_5__[\"PrimitiveMode\"].TriangleFan) {\n                incrementNum = 1;\n            }\n            const vertexNum = primitive.getVertexCountAsIndicesBased();\n            const buffer = _core_MemoryManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getInstance().getBuffer(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric);\n            const normalAttributeByteSize = positionAccessor.byteLength;\n            const normalBufferView = buffer.takeBufferView({ byteLengthToNeed: normalAttributeByteSize, byteStride: 0, isAoS: false });\n            const normalAccessor = normalBufferView.takeAccessor({ compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_9__[\"CompositionType\"].Vec3, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Float, count: positionAccessor.elementCount });\n            for (let i = 0; i < vertexNum - 2; i += incrementNum) {\n                const pos0 = positionAccessor.getVec3(i, { indicesAccessor });\n                const pos1 = positionAccessor.getVec3(i + 1, { indicesAccessor });\n                const pos2 = positionAccessor.getVec3(i + 2, { indicesAccessor });\n                this.__calcFaceNormalFor3Vertices(i, pos0, pos1, pos2, normalAccessor, indicesAccessor);\n            }\n            primitive.addVertexAttribute(normalAccessor, _definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_3__[\"VertexAttribute\"].FaceNormal);\n        }\n    }\n    __calcFaceNormalFor3Vertices(i, pos0, pos1, pos2, normalAccessor, indicesAccessor) {\n        // Calc normal\n        const ax = pos1.x - pos0.x;\n        const ay = pos1.y - pos0.y;\n        const az = pos1.z - pos0.z;\n        const bx = pos2.x - pos0.x;\n        const by = pos2.y - pos0.y;\n        const bz = pos2.z - pos0.z;\n        let nx = ay * bz - az * by;\n        let ny = az * bx - ax * bz;\n        let nz = ax * by - ay * bx;\n        let da = Math.sqrt(nx * nx + ny * ny + nz * nz);\n        if (da <= 1e-6) {\n            da = 0.0001;\n        }\n        da = 1.0 / da;\n        nx *= da;\n        ny *= da;\n        nz *= da;\n        const faceNormal = new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](nx, ny, nz);\n        normalAccessor.setVec3(i, faceNormal.x, faceNormal.y, faceNormal.z, { indicesAccessor });\n        normalAccessor.setVec3(i + 1, faceNormal.x, faceNormal.y, faceNormal.z, { indicesAccessor });\n        normalAccessor.setVec3(i + 2, faceNormal.x, faceNormal.y, faceNormal.z, { indicesAccessor });\n    }\n    __calcTangents() {\n        for (let primitive of this.__primitives) {\n            const texcoordIdx = primitive.attributeSemantics.indexOf(_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_3__[\"VertexAttribute\"].Texcoord0);\n            const positionIdx = primitive.attributeSemantics.indexOf(_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_3__[\"VertexAttribute\"].Position);\n            if (texcoordIdx !== -1) {\n                const positionAccessor = primitive.attributeAccessors[positionIdx];\n                const texcoordAccessor = primitive.attributeAccessors[texcoordIdx];\n                const indicesAccessor = primitive.indicesAccessor;\n                let incrementNum = 3; // PrimitiveMode.Triangles\n                if (primitive.primitiveMode === _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_5__[\"PrimitiveMode\"].TriangleStrip ||\n                    primitive.primitiveMode === _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_5__[\"PrimitiveMode\"].TriangleFan) {\n                    incrementNum = 1;\n                }\n                const vertexNum = primitive.getVertexCountAsIndicesBased();\n                const buffer = _core_MemoryManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getInstance().getBuffer(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric);\n                const tangentAttributeByteSize = positionAccessor.byteLength;\n                const tangentBufferView = buffer.takeBufferView({ byteLengthToNeed: tangentAttributeByteSize, byteStride: 0, isAoS: false });\n                const tangentAccessor = tangentBufferView.takeAccessor({ compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_9__[\"CompositionType\"].Vec3, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Float, count: positionAccessor.elementCount });\n                for (let i = 0; i < vertexNum - 2; i += incrementNum) {\n                    const pos0 = positionAccessor.getVec3(i, { indicesAccessor });\n                    const pos1 = positionAccessor.getVec3(i + 1, { indicesAccessor });\n                    const pos2 = positionAccessor.getVec3(i + 2, { indicesAccessor });\n                    const uv0 = texcoordAccessor.getVec2(i, { indicesAccessor });\n                    const uv1 = texcoordAccessor.getVec2(i + 1, { indicesAccessor });\n                    const uv2 = texcoordAccessor.getVec2(i + 2, { indicesAccessor });\n                    this.__calcTangentFor3Vertices(i, pos0, pos1, pos2, uv0, uv1, uv2, tangentAccessor, indicesAccessor);\n                }\n                primitive.addVertexAttribute(tangentAccessor, _definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_3__[\"VertexAttribute\"].Tangent);\n            }\n        }\n    }\n    __calcTangentFor3Vertices(i, pos0, pos1, pos2, uv0, uv1, uv2, tangentAccessor, indicesAccessor) {\n        const tan0Vec3 = this.__calcTangentPerVertex(pos0, pos1, pos2, uv0, uv1, uv2);\n        const tan1Vec3 = this.__calcTangentPerVertex(pos1, pos2, pos0, uv1, uv2, uv0);\n        const tan2Vec3 = this.__calcTangentPerVertex(pos2, pos0, pos1, uv2, uv0, uv1);\n        tangentAccessor.setVec3(i, tan0Vec3.x, tan0Vec3.y, tan0Vec3.z, { indicesAccessor });\n        tangentAccessor.setVec3(i + 1, tan1Vec3.x, tan1Vec3.y, tan1Vec3.z, { indicesAccessor });\n        tangentAccessor.setVec3(i + 2, tan2Vec3.x, tan2Vec3.y, tan2Vec3.z, { indicesAccessor });\n    }\n    __calcTangentPerVertex(pos0Vec3, pos1Vec3, pos2Vec3, uv0Vec2, uv1Vec2, uv2Vec2) {\n        let cp0 = [\n            new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pos0Vec3.x, uv0Vec2.x, uv0Vec2.y),\n            new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pos0Vec3.y, uv0Vec2.x, uv0Vec2.y),\n            new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pos0Vec3.z, uv0Vec2.x, uv0Vec2.y)\n        ];\n        let cp1 = [\n            new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pos1Vec3.x, uv1Vec2.x, uv1Vec2.y),\n            new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pos1Vec3.y, uv1Vec2.x, uv1Vec2.y),\n            new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pos1Vec3.z, uv1Vec2.x, uv1Vec2.y)\n        ];\n        let cp2 = [\n            new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pos2Vec3.x, uv2Vec2.x, uv2Vec2.y),\n            new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pos2Vec3.y, uv2Vec2.x, uv2Vec2.y),\n            new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pos2Vec3.z, uv2Vec2.x, uv2Vec2.y)\n        ];\n        let u = [];\n        let v = [];\n        for (let i = 0; i < 3; i++) {\n            let v1 = _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"].subtract(cp1[i], cp0[i]);\n            let v2 = _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"].subtract(cp2[i], cp1[i]);\n            let abc = _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"].cross(v1, v2);\n            let validate = Math.abs(abc.x) < Number.EPSILON;\n            if (validate) {\n                console.assert(validate, \"Polygons or polygons on UV are degenerate!\");\n                return new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](0, 0, 0);\n            }\n            u[i] = -abc.y / abc.x;\n            v[i] = -abc.z / abc.x;\n        }\n        return _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"].normalize(new _math_Vector3__WEBPACK_IMPORTED_MODULE_6__[\"default\"](u[0], u[1], u[2]));\n    }\n    get AABB() {\n        if (this.__localAABB.isVanilla()) {\n            for (let primitive of this.__primitives) {\n                this.__localAABB.mergeAABB(primitive.AABB);\n            }\n        }\n        return this.__localAABB;\n    }\n    calcViewDepth(cameraComponent) {\n        const viewMatrix = cameraComponent.viewMatrix;\n        const centerPosition_inLocal = new _math_Vector4__WEBPACK_IMPORTED_MODULE_12__[\"default\"](this.AABB.centerPoint);\n        const centerPosition_inView = viewMatrix.multiplyVector(centerPosition_inLocal);\n        this.__viewDepth = centerPosition_inView.z;\n        return this.__viewDepth;\n    }\n    get viewDepth() {\n        return this.__viewDepth;\n    }\n    makeVerticesSepareted() {\n        for (let primitive of this.__primitives) {\n            if (primitive.hasIndices()) {\n                const buffer = _core_MemoryManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getInstance().getBuffer(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].GPUVertexData);\n                const vertexCount = primitive.getVertexCountAsIndicesBased();\n                const indexAccessor = primitive.indicesAccessor;\n                for (let i in primitive.attributeAccessors) {\n                    const attributeAccessor = primitive.attributeAccessors[i];\n                    const elementSizeInBytes = attributeAccessor.elementSizeInBytes;\n                    const bufferView = buffer.takeBufferView({ byteLengthToNeed: elementSizeInBytes * vertexCount, byteStride: 0, isAoS: false });\n                    const newAccessor = bufferView.takeAccessor({ compositionType: attributeAccessor.compositionType, componentType: attributeAccessor.componentType, count: vertexCount });\n                    for (let j = 0; j < vertexCount; j++) {\n                        const idx = indexAccessor.getScalar(j, {});\n                        newAccessor.setElementFromSameCompositionAccessor(j, attributeAccessor, idx);\n                    }\n                    primitive.setVertexAttributes(newAccessor, primitive.attributeSemantics[i]);\n                }\n                const indicesAccessor = primitive.indicesAccessor;\n                const elementSizeInBytes = indicesAccessor.elementSizeInBytes;\n                const bufferView = buffer.takeBufferView({ byteLengthToNeed: elementSizeInBytes * vertexCount, byteStride: 0, isAoS: false });\n                const newAccessor = bufferView.takeAccessor({ compositionType: indicesAccessor.compositionType, componentType: indicesAccessor.componentType, count: vertexCount });\n                for (let j = 0; j < vertexCount; j++) {\n                    //const idx = indexAccessor!.getScalar(j, {});\n                    newAccessor.setScalar(j, j, {});\n                }\n                primitive.setIndices(newAccessor);\n            }\n        }\n    }\n    __calcBaryCentricCoord() {\n        for (let primitive of this.__primitives) {\n            const buffer = _core_MemoryManager__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getInstance().getBuffer(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric);\n            const positionIdx = primitive.attributeSemantics.indexOf(_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_3__[\"VertexAttribute\"].Position);\n            const positionAccessor = primitive.attributeAccessors[positionIdx];\n            const indicesAccessor = primitive.indicesAccessor;\n            const baryCentricCoordAttributeByteSize = positionAccessor.byteLength;\n            const baryCentricCoordBufferView = buffer.takeBufferView({ byteLengthToNeed: baryCentricCoordAttributeByteSize, byteStride: 0, isAoS: false });\n            const baryCentricCoordAccessor = baryCentricCoordBufferView.takeAccessor({ compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_9__[\"CompositionType\"].Vec3, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"].Float, count: positionAccessor.elementCount });\n            const vertexNum = positionAccessor.elementCount;\n            let num = vertexNum;\n            if (indicesAccessor) {\n                num = indicesAccessor.elementCount;\n            }\n            for (let ver_i = 0; ver_i < num; ver_i++) {\n                let idx = ver_i;\n                if (indicesAccessor) {\n                    idx = indicesAccessor.getScalar(ver_i, {});\n                }\n                baryCentricCoordAccessor.setVec3(idx, idx % 3 === 0 ? 1 : 0, // 1 0 0  1 0 0  1 0 0,\n                idx % 3 === 1 ? 1 : 0, // 0 1 0  0 1 0  0 1 0,\n                idx % 3 === 2 ? 1 : 0, // 0 0 1  0 0 1  0 0 1\n                {});\n            }\n            primitive.addVertexAttribute(baryCentricCoordAccessor, _definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_3__[\"VertexAttribute\"].BaryCentricCoord);\n        }\n    }\n}\n_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].registerComponentClass(MeshComponent);\n\n\n//# sourceURL=webpack:///./src/foundation/components/MeshComponent.ts?");

/***/ }),

/***/ "./src/foundation/components/MeshRendererComponent.ts":
/*!************************************************************!*\
  !*** ./src/foundation/components/MeshRendererComponent.ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MeshRendererComponent; });\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _MeshComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MeshComponent */ \"./src/foundation/components/MeshComponent.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n/* harmony import */ var _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n/* harmony import */ var _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WellKnownComponentTIDs */ \"./src/foundation/components/WellKnownComponentTIDs.ts\");\n/* harmony import */ var _CameraComponent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CameraComponent */ \"./src/foundation/components/CameraComponent.ts\");\n/* harmony import */ var _math_Matrix44__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../math/Matrix44 */ \"./src/foundation/math/Matrix44.ts\");\n/* harmony import */ var _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _core_MemoryManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _core_Config__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/Config */ \"./src/foundation/core/Config.ts\");\n/* harmony import */ var _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _system_ModuleManager__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../system/ModuleManager */ \"./src/foundation/system/ModuleManager.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass MeshRendererComponent extends _core_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(entityUid, componentSid, entityRepository) {\n        super(entityUid, componentSid, entityRepository);\n        this.__vertexHandles = [];\n        this.isVisible = true;\n        this.__sceneGraphComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n        const componentRepository = _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        const cameraComponents = componentRepository.getComponentsWithType(_CameraComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n        if (cameraComponents) {\n            MeshRendererComponent.__cameraComponent = cameraComponents[0];\n        }\n    }\n    static get componentTID() {\n        return _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_5__[\"WellKnownComponentTIDs\"].MeshRendererComponentTID;\n    }\n    static get firstOpaqueSid() {\n        return MeshRendererComponent.__firstOpaqueSid;\n    }\n    static get firstTranparentSid() {\n        return MeshRendererComponent.__firstTransparentSid;\n    }\n    $create({ processApproach }) {\n        if (this.__meshComponent != null) {\n            return;\n        }\n        this.__meshComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _MeshComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n        const moduleManager = _system_ModuleManager__WEBPACK_IMPORTED_MODULE_14__[\"default\"].getInstance();\n        const moduleName = 'webgl';\n        const webglModule = moduleManager.getModule(moduleName);\n        this.__webglRenderingStrategy = webglModule.getRenderingStrategy(processApproach);\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Load);\n    }\n    $load() {\n        this.__webglRenderingStrategy.$load(this.__meshComponent);\n        if (this.diffuseCubeMap && !this.diffuseCubeMap.startedToLoad) {\n            this.diffuseCubeMap.loadTextureImagesAsync();\n        }\n        if (this.specularCubeMap && !this.specularCubeMap.startedToLoad) {\n            this.specularCubeMap.loadTextureImagesAsync();\n        }\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].PreRender);\n    }\n    $prerender() {\n        this.__webglRenderingStrategy.$prerender(this.__meshComponent, MeshRendererComponent.__instanceIDBufferUid);\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Render);\n    }\n    $render() {\n        if (this.__webglRenderingStrategy.$render == null) {\n            return;\n        }\n        const entity = this.__entityRepository.getEntity(this.__entityUid);\n        this.__webglRenderingStrategy.$render(this.__meshComponent, this.__sceneGraphComponent.worldMatrix, this.__sceneGraphComponent.normalMatrix, entity, this.diffuseCubeMap, this.specularCubeMap);\n    }\n    static common_$load(processApproach) {\n        const moduleManager = _system_ModuleManager__WEBPACK_IMPORTED_MODULE_14__[\"default\"].getInstance();\n        const moduleName = 'webgl';\n        const webglModule = moduleManager.getModule(moduleName);\n        MeshRendererComponent.__staticWebglModule = webglModule;\n        // Strategy\n        MeshRendererComponent.__webGLStrategy = webglModule.getRenderingStrategy(processApproach);\n        // ResourceRepository\n        MeshRendererComponent.__webglResourceRepository = webglModule.WebGLResourceRepository.getInstance();\n    }\n    static common_$prerender() {\n        const gl = MeshRendererComponent.__webglResourceRepository.currentWebGLContextWrapper;\n        if (gl == null) {\n            throw new Error('No WebGLRenderingContext!');\n        }\n        MeshRendererComponent.__webGLStrategy.common_$prerender();\n        if (MeshRendererComponent.__isReady()) {\n            return 0;\n        }\n        MeshRendererComponent.__instanceIDBufferUid = MeshRendererComponent.__setupInstanceIDBuffer();\n        return MeshRendererComponent.__instanceIDBufferUid;\n    }\n    static __isReady() {\n        if (MeshRendererComponent.__instanceIDBufferUid !== _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_8__[\"default\"].InvalidCGAPIResourceUid) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    static __setupInstanceIDBuffer() {\n        if (MeshRendererComponent.__instanceIdAccessor == null) {\n            const buffer = _core_MemoryManager__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getInstance().getBuffer(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_11__[\"BufferUse\"].CPUGeneric);\n            const count = _core_Config__WEBPACK_IMPORTED_MODULE_10__[\"default\"].maxEntityNumber;\n            const bufferView = buffer.takeBufferView({ byteLengthToNeed: 4 /*byte*/ * count, byteStride: 0, isAoS: false });\n            MeshRendererComponent.__instanceIdAccessor = bufferView.takeAccessor({ compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_12__[\"CompositionType\"].Scalar, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_13__[\"ComponentType\"].Float, count: count });\n        }\n        const meshComponents = MeshRendererComponent.__componentRepository.getComponentsWithType(_MeshComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n        if (meshComponents == null) {\n            return _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_8__[\"default\"].InvalidCGAPIResourceUid;\n        }\n        for (var i = 0; i < meshComponents.length; i++) {\n            MeshRendererComponent.__instanceIdAccessor.setScalar(i, meshComponents[i].entityUID, {});\n        }\n        return MeshRendererComponent.__webglResourceRepository.createVertexBuffer(MeshRendererComponent.__instanceIdAccessor);\n    }\n    static common_$render() {\n        MeshRendererComponent.__cameraComponent = MeshRendererComponent.__componentRepository.getComponent(_CameraComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"], _CameraComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"].main);\n        let viewMatrix = MeshRendererComponent.__tmp_indentityMatrix;\n        let projectionMatrix = MeshRendererComponent.__tmp_indentityMatrix;\n        if (MeshRendererComponent.__cameraComponent) {\n            viewMatrix = MeshRendererComponent.__cameraComponent.viewMatrix;\n            projectionMatrix = MeshRendererComponent.__cameraComponent.projectionMatrix;\n        }\n        if (!MeshRendererComponent.__webGLStrategy.common_$render(viewMatrix, projectionMatrix)) {\n            return;\n        }\n        const meshComponents = MeshRendererComponent.__componentRepository.getComponentsWithType(_MeshComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n        const meshComponent = meshComponents[0];\n        const primitiveNum = meshComponent.getPrimitiveNumber();\n        const glw = MeshRendererComponent.__webglResourceRepository.currentWebGLContextWrapper;\n        for (let i = 0; i < primitiveNum; i++) {\n            const primitive = meshComponent.getPrimitiveAt(i);\n            MeshRendererComponent.__webGLStrategy.attachVertexData(i, primitive, glw, MeshRendererComponent.__instanceIDBufferUid);\n            MeshRendererComponent.__webGLStrategy.attatchShaderProgram();\n            MeshRendererComponent.__webGLStrategy.attachGPUData();\n            const meshComponents = MeshRendererComponent.__componentRepository.getComponentsWithType(_MeshComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n            //      glw.drawElementsInstanced(primitive.primitiveMode.index, primitive.indicesAccessor!.elementCount, primitive.indicesAccessor!.componentType.index, primitive.indicesAccessor!.byteOffsetInBuffer, meshComponents.length);\n            glw.drawElementsInstanced(primitive.primitiveMode.index, primitive.indicesAccessor.elementCount, primitive.indicesAccessor.componentType.index, 0, meshComponents.length);\n        }\n    }\n    static sort_$render() {\n        if (MeshRendererComponent.__manualTransparentSids == null) {\n            const sortedMeshComponentSids = MeshRendererComponent.sort_$render_inner();\n            return sortedMeshComponentSids;\n        }\n        else if (MeshRendererComponent.__manualTransparentSids.length === 0) {\n            return [];\n        }\n        else {\n            const sortedMeshComponentSids = MeshRendererComponent.sort_$render_inner(MeshRendererComponent.__manualTransparentSids);\n            return sortedMeshComponentSids;\n        }\n        return [];\n    }\n    static sort_$render_inner(transparentMeshComponentSids = []) {\n        const meshComponents = _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance().getComponentsWithType(_MeshComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n        const opaqueMeshComponentSids = [];\n        const transparentMeshComponents = [];\n        for (let i = 0; i < meshComponents.length; i++) {\n            const meshRendererComponent = meshComponents[i].entity.getComponent(MeshRendererComponent);\n            if (!meshRendererComponent.isVisible) {\n                continue;\n            }\n            if (meshRendererComponent.currentProcessStage === _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Render) {\n                const meshComponent = meshComponents[i];\n                let isBlendTypeMesh = false;\n                for (let j = 0; j < meshComponent.getPrimitiveNumber(); j++) {\n                    const primitive = meshComponent.getPrimitiveAt(j);\n                    if (primitive.material != null && primitive.material.isBlend()) {\n                        isBlendTypeMesh = true;\n                    }\n                }\n                if (transparentMeshComponentSids.length === 0 && isBlendTypeMesh) {\n                    transparentMeshComponents.push(meshComponent);\n                }\n                else {\n                    opaqueMeshComponentSids.push(meshComponent.componentSID);\n                }\n                const cameraComponent = _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance().getComponent(_CameraComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"], _CameraComponent__WEBPACK_IMPORTED_MODULE_6__[\"default\"].main);\n                if (cameraComponent) {\n                    meshComponent.calcViewDepth(cameraComponent);\n                }\n            }\n        }\n        transparentMeshComponents.sort(function (a, b) {\n            if (a.viewDepth < b.viewDepth)\n                return -1;\n            if (a.viewDepth > b.viewDepth)\n                return 1;\n            return 0;\n        });\n        if (transparentMeshComponentSids.length === 0) {\n            transparentMeshComponentSids = transparentMeshComponents.map((meshComponent) => {\n                return meshComponent.componentSID;\n            });\n        }\n        MeshRendererComponent.__firstOpaqueSid = opaqueMeshComponentSids[0];\n        MeshRendererComponent.__firstTransparentSid = transparentMeshComponentSids[0];\n        const sortedMeshComponentSids = opaqueMeshComponentSids.concat(transparentMeshComponentSids);\n        sortedMeshComponentSids.push(_core_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"].invalidComponentSID);\n        return sortedMeshComponentSids;\n    }\n    static set manualTransparentSids(sids) {\n        MeshRendererComponent.__manualTransparentSids = sids;\n    }\n}\nMeshRendererComponent.__shaderProgramHandleOfPrimitiveObjectUids = new Map();\nMeshRendererComponent.__componentRepository = _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\nMeshRendererComponent.__instanceIDBufferUid = _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_8__[\"default\"].InvalidCGAPIResourceUid;\nMeshRendererComponent.__tmp_indentityMatrix = _math_Matrix44__WEBPACK_IMPORTED_MODULE_7__[\"default\"].identity();\nMeshRendererComponent.__firstOpaqueSid = _core_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"].invalidComponentSID;\nMeshRendererComponent.__firstTransparentSid = _core_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"].invalidComponentSID;\n_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].registerComponentClass(MeshRendererComponent);\n\n\n//# sourceURL=webpack:///./src/foundation/components/MeshRendererComponent.ts?");

/***/ }),

/***/ "./src/foundation/components/SceneGraphComponent.ts":
/*!**********************************************************!*\
  !*** ./src/foundation/components/SceneGraphComponent.ts ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SceneGraphComponent; });\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _math_Matrix44__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math/Matrix44 */ \"./src/foundation/math/Matrix44.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WellKnownComponentTIDs */ \"./src/foundation/components/WellKnownComponentTIDs.ts\");\n/* harmony import */ var _math_MutableRowMajarMatrix44__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math/MutableRowMajarMatrix44 */ \"./src/foundation/math/MutableRowMajarMatrix44.ts\");\n/* harmony import */ var _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n/* harmony import */ var _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../math/MutableMatrix44 */ \"./src/foundation/math/MutableMatrix44.ts\");\n/* harmony import */ var _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../math/MutableMatrix33 */ \"./src/foundation/math/MutableMatrix33.ts\");\n/* harmony import */ var _math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../math/RowMajarMatrix44 */ \"./src/foundation/math/RowMajarMatrix44.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _math_AABB__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../math/AABB */ \"./src/foundation/math/AABB.ts\");\n/* harmony import */ var _MeshComponent__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./MeshComponent */ \"./src/foundation/components/MeshComponent.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass SceneGraphComponent extends _core_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(entityUid, componentSid, entityRepository) {\n        super(entityUid, componentSid, entityRepository);\n        this.__children = [];\n        this._worldMatrix = _math_MutableRowMajarMatrix44__WEBPACK_IMPORTED_MODULE_5__[\"default\"].dummy();\n        this._normalMatrix = _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__[\"default\"].dummy();\n        this.__isWorldMatrixUpToDate = false;\n        this.__tmpMatrix = _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_8__[\"default\"].identity();\n        this.__worldAABB = new _math_AABB__WEBPACK_IMPORTED_MODULE_13__[\"default\"]();\n        this.__isWorldAABBDirty = true;\n        // Skeletal\n        this.isRootJoint = false;\n        this.jointIndex = -1;\n        this._jointsOfParentHierarchies = [];\n        const thisClass = SceneGraphComponent;\n        //    this.__currentProcessStage = ProcessStage.Logic;\n        this.isAbleToBeParent = false;\n        this.beAbleToBeParent(true);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_6__[\"BufferUse\"].GPUInstanceData, 'worldMatrix', _math_MutableRowMajarMatrix44__WEBPACK_IMPORTED_MODULE_5__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_3__[\"ComponentType\"].Float, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_6__[\"BufferUse\"].CPUGeneric, 'normalMatrix', _math_MutableMatrix33__WEBPACK_IMPORTED_MODULE_9__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_3__[\"ComponentType\"].Float, [1, 0, 0, 0, 1, 0, 0, 0, 1]);\n        this.submitToAllocation();\n        //this.__updatedProperly = false;\n    }\n    isJoint() {\n        if (this.jointIndex >= 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    static get componentTID() {\n        return _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_4__[\"WellKnownComponentTIDs\"].SceneGraphComponentTID;\n    }\n    beAbleToBeParent(flag) {\n        this.isAbleToBeParent = flag;\n    }\n    setWorldMatrixDirty() {\n        this.__isWorldMatrixUpToDate = false;\n        SceneGraphComponent._isAllUpdate = false;\n        this.__isWorldAABBDirty = true;\n    }\n    addChild(sg) {\n        if (this.__children != null) {\n            sg.__parent = this;\n            this.__children.push(sg);\n        }\n        else {\n            console.error('This is not allowed to have children.');\n        }\n    }\n    get children() {\n        return this.__children;\n    }\n    get parent() {\n        return this.__parent;\n    }\n    get worldMatrixInner() {\n        //    if (!this.__isWorldMatrixUpToDate) {\n        //this._worldMatrix.identity();\n        this._worldMatrix.copyComponents(this.calcWorldMatrixRecursively(this.isJoint()));\n        this.__isWorldMatrixUpToDate = true;\n        //  }\n        return this._worldMatrix;\n    }\n    get worldMatrix() {\n        return this.worldMatrixInner.clone();\n    }\n    get normalMatrixInner() {\n        this._normalMatrix.copyComponents(_math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].transpose(_math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].invert(this.worldMatrix)));\n        //this._normalMatrix.copyComponents(this.worldMatrix);\n        return this._normalMatrix;\n    }\n    get normalMatrix() {\n        return this.normalMatrixInner.clone();\n    }\n    $create() {\n        this.__meshComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _MeshComponent__WEBPACK_IMPORTED_MODULE_14__[\"default\"]);\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_7__[\"ProcessStage\"].Logic);\n    }\n    $logic() {\n        // if (!this.__isWorldMatrixUpToDate) {\n        //this._worldMatrix.identity();\n        this._worldMatrix.copyComponents(this.calcWorldMatrixRecursively(this.isJoint()));\n        this.__isWorldMatrixUpToDate = true;\n        //}\n    }\n    static common_$prerender() {\n        SceneGraphComponent._isAllUpdate = true;\n    }\n    isWorldMatrixUpToDateRecursively() {\n        if (this.__isWorldMatrixUpToDate) {\n            if (this.__parent) {\n                let result = this.__parent.isWorldMatrixUpToDateRecursively();\n                return result;\n            }\n            else {\n                return true;\n            }\n        }\n        return false;\n    }\n    calcWorldMatrixRecursively(isJointMode) {\n        const entity = this.__entityRepository.getEntity(this.__entityUid);\n        const transform = entity.getTransform();\n        if (SceneGraphComponent._isAllUpdate) {\n            return this._worldMatrix;\n        }\n        else {\n            const matrix = transform.matrixInner;\n            if (this.__parent == null || (isJointMode && this.__parent != null && !this.__parent.isJoint())) {\n                return matrix;\n            }\n            this.__tmpMatrix.copyComponents(matrix);\n            let matrixFromAncestorToParent;\n            if (this.isWorldMatrixUpToDateRecursively()) {\n                matrixFromAncestorToParent = this.__parent._worldMatrix;\n            }\n            else {\n                matrixFromAncestorToParent = this.__parent.calcWorldMatrixRecursively(isJointMode);\n            }\n            this.__tmpMatrix.multiplyByLeft(matrixFromAncestorToParent);\n        }\n        return this.__tmpMatrix;\n        // let matrix;\n        // let currentMatrix = transform.matrixInner;\n        // if (this.__parent == null) {\n        //   return currentMatrix;\n        // }\n        // matrix = Matrix44.multiply(this.__parent!.calcWorldMatrixRecursively(), currentMatrix);\n        // return matrix;\n    }\n    static flattenHierarchy(sceneGraphComponent, isJointMode) {\n        const results = [];\n        if (!isJointMode || sceneGraphComponent.isJoint()) {\n            results.push(sceneGraphComponent);\n        }\n        if (sceneGraphComponent.isAbleToBeParent) {\n            const children = sceneGraphComponent.children;\n            for (let i = 0; i < children.length; i++) {\n                const hitChildren = this.flattenHierarchy(children[i], isJointMode);\n                Array.prototype.push.apply(results, hitChildren);\n            }\n        }\n        return results;\n    }\n    get worldPosition() {\n        const zeroVector = new _math_Vector4__WEBPACK_IMPORTED_MODULE_11__[\"default\"](0, 0, 0, 1);\n        const worldPosition = new _math_Vector3__WEBPACK_IMPORTED_MODULE_12__[\"default\"](this.worldMatrixInner.multiplyVector(zeroVector));\n        return worldPosition;\n    }\n    calcWorldAABB() {\n        const that = this;\n        var aabb = (function mergeAABBRecursively(elem) {\n            if (elem.__meshComponent != null) {\n                elem.__worldAABB = _math_AABB__WEBPACK_IMPORTED_MODULE_13__[\"default\"].multiplyMatrix(new _math_Matrix44__WEBPACK_IMPORTED_MODULE_2__[\"default\"](elem.worldMatrixInner), elem.__meshComponent.AABB);\n            }\n            var children = elem.children;\n            for (let i = 0; i < children.length; i++) {\n                var aabb = mergeAABBRecursively(children[i]);\n                if (aabb instanceof _math_AABB__WEBPACK_IMPORTED_MODULE_13__[\"default\"]) {\n                    elem.__worldAABB.mergeAABB(aabb);\n                }\n                else {\n                    console.assert(\"calculation of AABB error!\");\n                }\n            }\n            return elem.__worldAABB;\n            return new _math_AABB__WEBPACK_IMPORTED_MODULE_13__[\"default\"]();\n        })(this);\n        this.__worldAABB.mergeAABB(aabb);\n        return this.__worldAABB;\n    }\n    get worldAABB() {\n        if (this.__isWorldAABBDirty) {\n            this.calcWorldAABB();\n            this.__isWorldAABBDirty = false;\n        }\n        return this.__worldAABB;\n    }\n}\nSceneGraphComponent._isAllUpdate = false;\n_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].registerComponentClass(SceneGraphComponent);\n\n\n//# sourceURL=webpack:///./src/foundation/components/SceneGraphComponent.ts?");

/***/ }),

/***/ "./src/foundation/components/SkeletalComponent.ts":
/*!********************************************************!*\
  !*** ./src/foundation/components/SkeletalComponent.ts ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SkeletalComponent; });\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WellKnownComponentTIDs */ \"./src/foundation/components/WellKnownComponentTIDs.ts\");\n/* harmony import */ var _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math/Matrix44 */ \"./src/foundation/math/Matrix44.ts\");\n/* harmony import */ var _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n\n\n\n\n\n\nclass SkeletalComponent extends _core_Component__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(entityUid, componentSid, entityRepository) {\n        super(entityUid, componentSid, entityRepository);\n        this._jointIndices = [];\n        this.__joints = [];\n        this._inverseBindMatrices = [];\n        this.isSkinning = true;\n    }\n    static get componentTID() {\n        return _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_2__[\"WellKnownComponentTIDs\"].SkeletalComponentTID;\n    }\n    $create() {\n        this.__sceneGraphComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_5__[\"ProcessStage\"].Load);\n    }\n    $load() {\n        if (this.jointsHierarchy == null) {\n            return;\n        }\n        const joints = _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"].flattenHierarchy(this.jointsHierarchy, true);\n        let jointCount = 0;\n        for (let i = 0; i < this._jointIndices.length; i++) {\n            for (let j = 0; j < joints.length; j++) {\n                if (this._jointIndices[i] === joints[j].jointIndex) {\n                    this.__joints.push(joints[j]);\n                    //          joints[j].skeletalMesh = this;\n                    let inverseBindMatrix = (this._inverseBindMatrices[jointCount] !== void 0) ? this._inverseBindMatrices[jointCount] : _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].identity();\n                    joints[j]._inverseBindMatrix = inverseBindMatrix;\n                    joints[j]._bindMatrix = _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].invert(inverseBindMatrix);\n                    jointCount++;\n                    break;\n                }\n            }\n        }\n        const calcParentJointsMatricesRecursively = (joint) => {\n            let parentJoint = joint.parent;\n            let results = [];\n            if (parentJoint) {\n                let result = calcParentJointsMatricesRecursively(parentJoint);\n                if (Array.isArray(result)) {\n                    Array.prototype.push.apply(results, result);\n                }\n                // for glTF2.0\n                for (let gltfJointIndex of this._jointIndices) {\n                    if (parentJoint.jointIndex === gltfJointIndex) {\n                        results.push(parentJoint);\n                        return results;\n                    }\n                }\n                return results;\n            }\n            return null;\n        };\n        let jointsParentHierarchies = null;\n        for (let i = 0; i < this.__joints.length; i++) {\n            jointsParentHierarchies = calcParentJointsMatricesRecursively(this.__joints[i]);\n            if (jointsParentHierarchies != null) {\n                this.__joints[i]._jointsOfParentHierarchies = jointsParentHierarchies;\n            }\n        }\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_5__[\"ProcessStage\"].Logic);\n    }\n    $logic() {\n        let skeletalMeshWorldMatrix;\n        let jointZeroWorldMatrix;\n        let flatMatrices = [];\n        const matrices = [];\n        if (this.isSkinning) {\n            for (let i = this.__joints.length - 1; i >= 0; i--) {\n                let globalJointTransform = null;\n                let inverseBindMatrix = this.__joints[i]._inverseBindMatrix;\n                globalJointTransform = new _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.__joints[i].worldMatrixInner);\n                skeletalMeshWorldMatrix = globalJointTransform;\n                if (i === 0) {\n                    jointZeroWorldMatrix = globalJointTransform;\n                }\n                matrices[i] = _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].identity();\n                matrices[i] = _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].multiply(matrices[i], globalJointTransform);\n                matrices[i] = _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].multiply(matrices[i], inverseBindMatrix);\n                if (this._bindShapeMatrix) {\n                    matrices[i] = _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].multiply(matrices[i], this._bindShapeMatrix); // only for glTF1\n                }\n            }\n            flatMatrices = [];\n            for (let i = 0; i < matrices.length; i++) {\n                Array.prototype.push.apply(flatMatrices, matrices[i].flattenAsArray());\n            }\n        }\n        if (matrices.length < 4) {\n            let identityMatrices = [];\n            for (let i = 0; i < (4 - matrices.length); i++) {\n                Array.prototype.push.apply(identityMatrices, [1, 0, 0, 0,\n                    0, 1, 0, 0,\n                    0, 0, 1, 0,\n                    0, 0, 0, 1]);\n            }\n            Array.prototype.push.apply(flatMatrices, identityMatrices);\n        }\n        this.__jointMatrices = flatMatrices;\n    }\n    get jointMatrices() {\n        return this.__jointMatrices;\n    }\n}\n_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].registerComponentClass(SkeletalComponent);\n\n\n//# sourceURL=webpack:///./src/foundation/components/SkeletalComponent.ts?");

/***/ }),

/***/ "./src/foundation/components/TransformComponent.ts":
/*!*********************************************************!*\
  !*** ./src/foundation/components/TransformComponent.ts ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TransformComponent; });\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _math_Quaternion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math/Quaternion */ \"./src/foundation/math/Quaternion.ts\");\n/* harmony import */ var _math_Matrix33__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math/Matrix33 */ \"./src/foundation/math/Matrix33.ts\");\n/* harmony import */ var _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math/Matrix44 */ \"./src/foundation/math/Matrix44.ts\");\n/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./WellKnownComponentTIDs */ \"./src/foundation/components/WellKnownComponentTIDs.ts\");\n/* harmony import */ var _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n/* harmony import */ var _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../math/MutableMatrix44 */ \"./src/foundation/math/MutableMatrix44.ts\");\n/* harmony import */ var _math_MutableQuaterion__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../math/MutableQuaterion */ \"./src/foundation/math/MutableQuaterion.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import AnimationComponent from './AnimationComponent';\nclass TransformComponent extends _core_Component__WEBPACK_IMPORTED_MODULE_4__[\"default\"] {\n    constructor(entityUid, componentSid, entityComponent) {\n        super(entityUid, componentSid, entityComponent);\n        this._translate = _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dummy();\n        this._rotate = _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dummy();\n        this._scale = _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dummy();\n        this._quaternion = _math_MutableQuaterion__WEBPACK_IMPORTED_MODULE_11__[\"default\"].dummy();\n        this._matrix = _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dummy();\n        this._invMatrix = _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dummy();\n        this._normalMatrix = _math_Matrix33__WEBPACK_IMPORTED_MODULE_2__[\"default\"].dummy();\n        this.__toUpdateAllTransform = true;\n        this._updateCount = 0;\n        this.__updateCountAtLastLogic = 0;\n        // dependencies\n        this._dependentAnimationComponentId = 0;\n        const thisClass = TransformComponent;\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'translate', _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_6__[\"ComponentType\"].Float, [0, 0, 0]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'rotate', _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_6__[\"ComponentType\"].Float, [0, 0, 0]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'scale', _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_6__[\"ComponentType\"].Float, [1, 1, 1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'quaternion', _math_MutableQuaterion__WEBPACK_IMPORTED_MODULE_11__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_6__[\"ComponentType\"].Float, [0, 0, 0, 1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'matrix', _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_6__[\"ComponentType\"].Float, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'invMatrix', _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_6__[\"ComponentType\"].Float, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n        this.registerMember(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].CPUGeneric, 'normalMatrix', _math_Matrix33__WEBPACK_IMPORTED_MODULE_2__[\"default\"], _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_6__[\"ComponentType\"].Float, [1, 0, 0, 0, 1, 0, 0, 0, 1]);\n        this.submitToAllocation();\n        this._is_translate_updated = true;\n        this._is_euler_angles_updated = true;\n        this._is_scale_updated = true;\n        this._is_quaternion_updated = true;\n        this._is_trs_matrix_updated = true;\n        this._is_inverse_trs_matrix_updated = true;\n        this._is_normal_trs_matrix_updated = true;\n        this.moveStageTo(_definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_12__[\"ProcessStage\"].Logic);\n    }\n    static get renderedPropertyCount() {\n        return null;\n    }\n    static get componentTID() {\n        return _WellKnownComponentTIDs__WEBPACK_IMPORTED_MODULE_7__[\"WellKnownComponentTIDs\"].TransformComponentTID;\n    }\n    $logic() {\n        if (this.__updateCountAtLastLogic !== this._updateCount) {\n            const sceneGraphComponent = this.__entityRepository.getComponentOfEntity(this.__entityUid, _SceneGraphComponent__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n            sceneGraphComponent.setWorldMatrixDirty();\n            this.__updateCountAtLastLogic = this._updateCount;\n        }\n    }\n    set toUpdateAllTransform(flag) {\n        this.__toUpdateAllTransform = flag;\n    }\n    get toUpdateAllTransform() {\n        return this.__toUpdateAllTransform;\n    }\n    _needUpdate() {\n        this._updateCount++;\n    }\n    set translate(vec) {\n        this._translate.v[0] = vec.v[0];\n        this._translate.v[1] = vec.v[1];\n        this._translate.v[2] = vec.v[2];\n        this._is_translate_updated = true;\n        this._is_trs_matrix_updated = false;\n        this._is_inverse_trs_matrix_updated = false;\n        this._is_normal_trs_matrix_updated = false;\n        this.__updateTransform();\n    }\n    get translate() {\n        return this.translateInner.clone();\n    }\n    get translateInner() {\n        if (this._is_translate_updated) {\n            return this._translate;\n        }\n        else if (this._is_trs_matrix_updated) {\n            this._translate.v[0] = this._matrix.m03;\n            this._translate.v[1] = this._matrix.m13;\n            this._translate.v[2] = this._matrix.m23;\n            this._is_translate_updated = true;\n        }\n        return this._translate;\n    }\n    set rotate(vec) {\n        this._rotate.v[0] = vec.v[0];\n        this._rotate.v[1] = vec.v[1];\n        this._rotate.v[2] = vec.v[2];\n        this._is_euler_angles_updated = true;\n        this._is_quaternion_updated = false;\n        this._is_trs_matrix_updated = false;\n        this._is_inverse_trs_matrix_updated = false;\n        this._is_normal_trs_matrix_updated = false;\n        this.__updateTransform();\n    }\n    get rotate() {\n        return this.rotateInner.clone();\n    }\n    get rotateInner() {\n        if (this._is_euler_angles_updated) {\n            return this._rotate;\n        }\n        else if (this._is_trs_matrix_updated) {\n            this._rotate = this._matrix.toEulerAngles();\n        }\n        else if (this._is_quaternion_updated) {\n            this._rotate = (new _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this._quaternion)).toEulerAngles();\n        }\n        this._is_euler_angles_updated = true;\n        return this._rotate;\n    }\n    set scale(vec) {\n        this._scale.v[0] = vec.v[0];\n        this._scale.v[1] = vec.v[1];\n        this._scale.v[2] = vec.v[2];\n        this._is_scale_updated = true;\n        this._is_trs_matrix_updated = false;\n        this._is_inverse_trs_matrix_updated = false;\n        this._is_normal_trs_matrix_updated = false;\n        this.__updateTransform();\n    }\n    get scale() {\n        return this.scaleInner.clone();\n    }\n    get scaleInner() {\n        if (this._is_scale_updated) {\n            return this._scale;\n        }\n        else if (this._is_trs_matrix_updated) {\n            let m = this._matrix;\n            this._scale.v[0] = Math.sqrt(m.m00 * m.m00 + m.m01 * m.m01 + m.m02 * m.m02);\n            this._scale.v[1] = Math.sqrt(m.m10 * m.m10 + m.m11 * m.m11 + m.m12 * m.m12);\n            this._scale.v[2] = Math.sqrt(m.m20 * m.m20 + m.m21 * m.m21 + m.m22 * m.m22);\n            this._is_scale_updated = true;\n        }\n        return this._scale;\n    }\n    set quaternion(quat) {\n        this._quaternion.v[0] = quat.v[0];\n        this._quaternion.v[1] = quat.v[1];\n        this._quaternion.v[2] = quat.v[2];\n        this._quaternion.v[3] = quat.v[3];\n        this._is_quaternion_updated = true;\n        this._is_euler_angles_updated = false;\n        this._is_trs_matrix_updated = false;\n        this._is_inverse_trs_matrix_updated = false;\n        this._is_normal_trs_matrix_updated = false;\n        this.__updateTransform();\n    }\n    get quaternion() {\n        return this.quaternionInner.clone();\n    }\n    get quaternionInner() {\n        if (this._is_quaternion_updated) {\n            return this._quaternion;\n        }\n        else if (!this._is_quaternion_updated) {\n            if (this._is_trs_matrix_updated) {\n                this._is_quaternion_updated = true;\n                this._quaternion.fromMatrix(this._matrix);\n                return this._quaternion;\n            }\n            else if (this._is_euler_angles_updated) {\n                TransformComponent.__tmpMat_quaternionInner.rotateXYZ(this._rotate.x, this._rotate.y, this._rotate.z);\n                this._is_quaternion_updated = true;\n                this._quaternion.fromMatrix(TransformComponent.__tmpMat_quaternionInner);\n                return this._quaternion;\n            }\n        }\n        return this._quaternion;\n    }\n    set matrix(mat) {\n        this._matrix = new _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"](mat, true);\n        this._is_trs_matrix_updated = true;\n        this._is_translate_updated = false;\n        this._is_euler_angles_updated = false;\n        this._is_quaternion_updated = false;\n        this._is_scale_updated = false;\n        this._is_inverse_trs_matrix_updated = false;\n        this._is_normal_trs_matrix_updated = false;\n        this.__updateTransform();\n    }\n    get matrix() {\n        return this.matrixInner.clone();\n    }\n    get matrixInner() {\n        if (this._is_trs_matrix_updated) {\n            return this._matrix;\n        }\n        // Clear and set Scale\n        const scale = this.scaleInner;\n        const n00 = scale.v[0];\n        // const n01 = 0;\n        // const n02 = 0;\n        // const n03 = 0;\n        // const n10 = 0;\n        const n11 = scale.v[1];\n        // const n12 = 0;\n        // const n13 = 0;\n        // const n20 = 0;\n        // const n21 = 0;\n        const n22 = scale.v[2];\n        // const n23 = 0;\n        // const n30 = 0;\n        // const n31 = 0;\n        // const n32 = 0;\n        // const n33 = 1;\n        const q = this.quaternionInner;\n        const sx = q.v[0] * q.v[0];\n        const sy = q.v[1] * q.v[1];\n        const sz = q.v[2] * q.v[2];\n        const cx = q.v[1] * q.v[2];\n        const cy = q.v[0] * q.v[2];\n        const cz = q.v[0] * q.v[1];\n        const wx = q.v[3] * q.v[0];\n        const wy = q.v[3] * q.v[1];\n        const wz = q.v[3] * q.v[2];\n        const m00 = 1.0 - 2.0 * (sy + sz);\n        const m01 = 2.0 * (cz - wz);\n        const m02 = 2.0 * (cy + wy);\n        // const m03 = 0.0;\n        const m10 = 2.0 * (cz + wz);\n        const m11 = 1.0 - 2.0 * (sx + sz);\n        const m12 = 2.0 * (cx - wx);\n        // const m13 = 0.0;\n        const m20 = 2.0 * (cy - wy);\n        const m21 = 2.0 * (cx + wx);\n        const m22 = 1.0 - 2.0 * (sx + sy);\n        // const m23 = 0.0;\n        // const m30 = 0.0;\n        // const m31 = 0.0;\n        // const m32 = 0.0;\n        // const m33 = 1.0;\n        const translate = this.translateInner;\n        // TranslateMatrix * RotateMatrix * ScaleMatrix\n        this._matrix.m00 = m00 * n00;\n        this._matrix.m01 = m01 * n11;\n        this._matrix.m02 = m02 * n22;\n        this._matrix.m03 = translate.v[0];\n        this._matrix.m10 = m10 * n00;\n        this._matrix.m11 = m11 * n11;\n        this._matrix.m12 = m12 * n22;\n        this._matrix.m13 = translate.v[1];\n        this._matrix.m20 = m20 * n00;\n        this._matrix.m21 = m21 * n11;\n        this._matrix.m22 = m22 * n22;\n        this._matrix.m23 = translate.v[2];\n        this._matrix.m30 = 0;\n        this._matrix.m31 = 0;\n        this._matrix.m32 = 0;\n        this._matrix.m33 = 1;\n        // const rotateMatrix = new Matrix44(this.quaternion);\n        // const matrix = MutableMatrix44.multiply(rotateMatrix, Matrix44.scale(this.scale));\n        // matrix.m03 = this.translate.x;\n        // matrix.m13 = this.translate.y;\n        // matrix.m23 = this.translate.z;\n        //this._matrix.copyComponents(matrix);\n        this._is_trs_matrix_updated = true;\n        return this._matrix;\n    }\n    get inverseMatrix() {\n        return this.inverseMatrixInner.clone();\n    }\n    get inverseMatrixInner() {\n        if (!this._is_inverse_trs_matrix_updated) {\n            this._invMatrix = _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].invert(this.matrixInner);\n            this._is_inverse_trs_matrix_updated = true;\n        }\n        return this._invMatrix;\n    }\n    get normalMatrix() {\n        return this.normalMatrixInner.clone();\n    }\n    get normalMatrixInner() {\n        if (!this._is_normal_trs_matrix_updated) {\n            this._normalMatrix = new _math_Matrix33__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].transpose(_math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].invert(this.matrix)));\n            this._is_normal_trs_matrix_updated = true;\n        }\n        return this._normalMatrix;\n    }\n    /**\n     * Set multiple transform information at once. By using this method,\n     * we reduce the cost of automatically updating other transform components inside this class.\n     * This method may be useful for animation processing and so on.\n     *\n     * The transform components of these arguments must not be mutually discrepant.\n     * for example. The transform components of matrix argument (translate, rotate/quaternion, scale)\n     * must be equal to translate, rotate, scale, quaternion arguments.\n     * And both rotate and quaternion arguments must be same rotation.\n     * If there is an argument passed with null or undefined, it is interpreted as unchanged.\n     *\n     * @param {*} translate\n     * @param {*} rotate\n     * @param {*} scale\n     * @param {*} quaternion\n     * @param {*} matrix\n     */\n    setTransform(translate, rotate, scale, quaternion, matrix) {\n        this._is_trs_matrix_updated = false;\n        this._is_inverse_trs_matrix_updated = false;\n        this._is_normal_trs_matrix_updated = false;\n        // Matrix\n        if (matrix != null) {\n            this._matrix = new _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"](matrix);\n            this._is_trs_matrix_updated = true;\n            this._is_translate_updated = false;\n            this._is_euler_angles_updated = false;\n            this._is_quaternion_updated = false;\n            this._is_scale_updated = false;\n        }\n        // Translate\n        if (translate != null) {\n            this._translate = translate.clone();\n            this._is_translate_updated = true;\n        }\n        // Roatation\n        if (rotate != null && quaternion != null) {\n            this._rotate = rotate.clone();\n            this._quaternion = new _math_MutableQuaterion__WEBPACK_IMPORTED_MODULE_11__[\"default\"](quaternion);\n            this._is_euler_angles_updated = true;\n            this._is_quaternion_updated = true;\n        }\n        else if (rotate != null) {\n            this._rotate = rotate.clone();\n            this._is_euler_angles_updated = true;\n            this._is_quaternion_updated = false;\n        }\n        else if (quaternion != null) {\n            this._quaternion = new _math_MutableQuaterion__WEBPACK_IMPORTED_MODULE_11__[\"default\"](quaternion);\n            this._is_euler_angles_updated = false;\n            this._is_quaternion_updated = true;\n        }\n        // Scale\n        if (scale != null) {\n            this._scale = scale.clone();\n            this._is_scale_updated = true;\n        }\n        this.__updateTransform();\n    }\n    __updateTransform() {\n        if (this.__toUpdateAllTransform) {\n            this.__updateRotation();\n            this.__updateTranslate();\n            this.__updateScale();\n        }\n        //this.__updateMatrix();\n        this._needUpdate();\n    }\n    __updateRotation() {\n        if (this._is_euler_angles_updated && !this._is_quaternion_updated) {\n            TransformComponent.__tmpMat_updateRotation.rotateXYZ(this._rotate.x, this._rotate.y, this._rotate.z);\n            this._quaternion.fromMatrix(TransformComponent.__tmpMat_updateRotation);\n            this._is_quaternion_updated = true;\n        }\n        else if (!this._is_euler_angles_updated && this._is_quaternion_updated) {\n            this._rotate = (new _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this._quaternion)).toEulerAngles();\n            this._is_euler_angles_updated = true;\n        }\n        else if (!this._is_euler_angles_updated && !this._is_quaternion_updated && this._is_trs_matrix_updated) {\n            const m = this._matrix;\n            this._quaternion.fromMatrix(m);\n            this._is_quaternion_updated = true;\n            this._rotate = m.toEulerAngles();\n            this._is_euler_angles_updated = true;\n        }\n    }\n    __updateTranslate() {\n        if (!this._is_translate_updated && this._is_trs_matrix_updated) {\n            const m = this._matrix;\n            this._translate.v[0] = m.m03;\n            this._translate.v[1] = m.m13;\n            this._translate.v[2] = m.m23;\n            this._is_translate_updated = true;\n        }\n    }\n    __updateScale() {\n        if (!this._is_scale_updated && this._is_trs_matrix_updated) {\n            const m = this._matrix;\n            this._scale.v[0] = Math.sqrt(m.m00 * m.m00 + m.m01 * m.m01 + m.m02 * m.m02);\n            this._scale.v[1] = Math.sqrt(m.m10 * m.m10 + m.m11 * m.m11 + m.m12 * m.m12);\n            this._scale.v[2] = Math.sqrt(m.m20 * m.m20 + m.m21 * m.m21 + m.m22 * m.m22);\n            this._is_scale_updated = true;\n        }\n    }\n    __updateMatrix() {\n        if (!this._is_trs_matrix_updated && this._is_translate_updated && this._is_quaternion_updated && this._is_scale_updated) {\n            const rotationMatrix = new _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this._quaternion);\n            let scale = this._scale;\n            this._matrix = _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].multiply(rotationMatrix, _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].scale(scale));\n            let translateVec = this._translate;\n            this._matrix.m03 = translateVec.x;\n            this._matrix.m13 = translateVec.y;\n            this._matrix.m23 = translateVec.z;\n            this._is_trs_matrix_updated = true;\n        }\n    }\n    setPropertiesFromJson(arg) {\n        let json = arg;\n        if (typeof arg === \"string\") {\n            json = JSON.parse(arg);\n        }\n        for (let key in json) {\n            if (json.hasOwnProperty(key) && key in this) {\n                if (key === \"quaternion\") {\n                    this[key] = new _math_Quaternion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](json[key]);\n                }\n                else if (key === 'matrix') {\n                    this[key] = new _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"](json[key]);\n                }\n                else {\n                    this[key] = new _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](json[key]);\n                }\n            }\n        }\n    }\n    setRotationFromNewUpAndFront(UpVec, FrontVec) {\n        let yDir = UpVec;\n        let xDir = _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cross(yDir, FrontVec);\n        let zDir = _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cross(xDir, yDir);\n        let rotateMatrix = _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].identity();\n        rotateMatrix.m00 = xDir.x;\n        rotateMatrix.m10 = xDir.y;\n        rotateMatrix.m20 = xDir.z;\n        rotateMatrix.m01 = yDir.x;\n        rotateMatrix.m11 = yDir.y;\n        rotateMatrix.m21 = yDir.z;\n        rotateMatrix.m02 = zDir.x;\n        rotateMatrix.m12 = zDir.y;\n        rotateMatrix.m22 = zDir.z;\n        this.rotateMatrix44 = rotateMatrix;\n    }\n    headToDirection(fromVec, toVec) {\n        const fromDir = _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].normalize(fromVec);\n        const toDir = _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].normalize(toVec);\n        const rotationDir = _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cross(fromDir, toDir);\n        const cosTheta = _math_Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dotProduct(fromDir, toDir);\n        let theta = Math.acos(cosTheta);\n        this.quaternion = _math_MutableQuaterion__WEBPACK_IMPORTED_MODULE_11__[\"default\"].axisAngle(rotationDir, theta);\n    }\n    set rotateMatrix44(rotateMatrix) {\n        this.quaternion = _math_MutableQuaterion__WEBPACK_IMPORTED_MODULE_11__[\"default\"].fromMatrix(rotateMatrix);\n    }\n    get rotateMatrix44() {\n        return new _math_Matrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.quaternion);\n    }\n}\nTransformComponent.__tmpMat_updateRotation = _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].identity();\nTransformComponent.__tmpMat_quaternionInner = _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_10__[\"default\"].identity();\n_core_ComponentRepository__WEBPACK_IMPORTED_MODULE_5__[\"default\"].registerComponentClass(TransformComponent);\n\n\n//# sourceURL=webpack:///./src/foundation/components/TransformComponent.ts?");

/***/ }),

/***/ "./src/foundation/components/WellKnownComponentTIDs.ts":
/*!*************************************************************!*\
  !*** ./src/foundation/components/WellKnownComponentTIDs.ts ***!
  \*************************************************************/
/*! exports provided: WellKnownComponentTIDs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WellKnownComponentTIDs\", function() { return WellKnownComponentTIDs; });\nconst AnimationComponentTID = 1;\nconst TransformComponentTID = 2;\nconst SceneGraphComponentTID = 3;\nconst MeshComponentTID = 4;\nconst MeshRendererComponentTID = 5;\nconst CameraControllerComponentTID = 6;\nconst CameraComponentTID = 7;\nconst LightComponentTID = 8;\nconst SkeletalComponentTID = 9;\nconst SparkGearComponentTID = 10;\nconst EffekseerComponentTID = 11;\nconst maxWellKnownTidNumber = 11;\nconst WellKnownComponentTIDs = Object.freeze({\n    AnimationComponentTID,\n    TransformComponentTID,\n    SceneGraphComponentTID,\n    MeshComponentTID,\n    MeshRendererComponentTID,\n    CameraControllerComponentTID,\n    CameraComponentTID,\n    LightComponentTID,\n    SkeletalComponentTID,\n    SparkGearComponentTID,\n    EffekseerComponentTID,\n    maxWellKnownTidNumber\n});\n\n\n//# sourceURL=webpack:///./src/foundation/components/WellKnownComponentTIDs.ts?");

/***/ }),

/***/ "./src/foundation/core/Component.ts":
/*!******************************************!*\
  !*** ./src/foundation/core/Component.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Component; });\n/* harmony import */ var _core_MemoryManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _math_Matrix44__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math/Matrix44 */ \"./src/foundation/math/Matrix44.ts\");\n/* harmony import */ var _math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math/RowMajarMatrix44 */ \"./src/foundation/math/RowMajarMatrix44.ts\");\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n/* harmony import */ var _Config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Config */ \"./src/foundation/core/Config.ts\");\n/* harmony import */ var _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math/MutableMatrix44 */ \"./src/foundation/math/MutableMatrix44.ts\");\n/* harmony import */ var _math_MutableRowMajarMatrix44__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../math/MutableRowMajarMatrix44 */ \"./src/foundation/math/MutableRowMajarMatrix44.ts\");\n\n\n\n\n\n\n\n/**\n * Component is a functional unit that can be added to an Entity instance.\n */\nclass Component {\n    /**\n     * The constructor of the Component class.\n     * When creating an Component, use the createComponent method of the ComponentRepository class\n     * instead of directly calling this constructor.\n     * @param entityUid Unique ID of the corresponding entity\n     * @param componentSid Scoped ID of the Component\n     * @param entityRepository The instance of the EntityRepository class (Dependency Injection)\n     */\n    constructor(entityUid, componentSid, entityRepository) {\n        this.__currentProcessStage = _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Create;\n        this.__entityUid = entityUid;\n        this._component_sid = componentSid;\n        this.__isAlive = true;\n        const stages = [\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Create,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Load,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Mount,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Logic,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].PreRender,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Render,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Unmount,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_3__[\"ProcessStage\"].Discard\n        ];\n        stages.forEach(stage => {\n            if (this.isExistProcessStageMethod(stage)) {\n                if (Component.__componentsOfProcessStages.get(stage) == null) {\n                    Component.__componentsOfProcessStages.set(stage, new Int32Array(_Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].maxEntityNumber));\n                    Component.__dirtyOfArrayOfProcessStages.set(stage, false);\n                    Component.__lengthOfArrayOfProcessStages.set(stage, 0);\n                }\n            }\n        });\n        this.__memoryManager = _core_MemoryManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        this.__entityRepository = entityRepository;\n    }\n    /**\n     * Move to the other stages of process\n     * @param processStage stage of component's process\n     */\n    moveStageTo(processStage) {\n        Component.__dirtyOfArrayOfProcessStages.set(this.__currentProcessStage, true);\n        Component.__dirtyOfArrayOfProcessStages.set(processStage, true);\n        this.__currentProcessStage = processStage;\n    }\n    /**\n     * Get the Type ID of the Component\n     */\n    static get componentTID() {\n        return 0;\n    }\n    /**\n     * Get the Scoped ID of the Component\n     */\n    get componentSID() {\n        return this._component_sid;\n    }\n    /**\n     * Get the unique ID of the entity corresponding to the component\n     */\n    get entityUID() {\n        return this.__entityUid;\n    }\n    get currentProcessStage() {\n        return this.__currentProcessStage;\n    }\n    static isExistProcessStageMethod(componentType, processStage, componentRepository) {\n        const component = componentRepository.getComponent(componentType, 0);\n        if (component == null) {\n            return false;\n        }\n        if (component[processStage.getMethodName()] == null) {\n            return false;\n        }\n        return true;\n    }\n    isExistProcessStageMethod(processStage) {\n        if (this[processStage.getMethodName()] == null) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Process the components\n     * @param param0 params\n     */\n    static process({ componentType, processStage, processApproach, componentRepository, strategy }) {\n        if (!Component.isExistProcessStageMethod(componentType, processStage, componentRepository)) {\n            return;\n        }\n        const array = this.__componentsOfProcessStages.get(processStage);\n        for (let i = 0; i < array.length; ++i) {\n            if (array[i] === Component.invalidComponentSID) {\n                break;\n            }\n            const componentSid = array[i];\n            const component = componentRepository.getComponent(componentType, componentSid);\n            component[processStage.getMethodName()]({\n                processStage,\n                processApproach,\n                strategy\n            });\n        }\n    }\n    static updateComponentsOfEachProcessStage(componentClass, processStage, componentRepository) {\n        if (!Component.isExistProcessStageMethod(componentClass, processStage, componentRepository)) {\n            return;\n        }\n        const dirty = Component.__componentsOfProcessStages.get(processStage);\n        if (dirty) {\n            const method = componentClass['sort_' + processStage.getMethodName()];\n            const components = componentRepository.getComponentsWithType(componentClass);\n            const array = Component.__componentsOfProcessStages.get(processStage);\n            let sids = [];\n            if (method != null) {\n                sids = method();\n                for (let i = 0; i < sids.length; i++) {\n                    array[i] = sids[i];\n                }\n            }\n            if (sids.length === 0) {\n                let count = 0;\n                for (let i = 0; i < components.length; ++i) {\n                    const component = components[i];\n                    if (processStage === component.__currentProcessStage) {\n                        array[count++] = component.componentSID;\n                    }\n                }\n                array[count] = Component.invalidComponentSID;\n            }\n        }\n    }\n    static getByteLengthSumOfMembers(bufferUse, componentClass) {\n        const byteLengthSumOfMembers = this.__byteLengthSumOfMembers.get(componentClass);\n        return byteLengthSumOfMembers.get(bufferUse);\n    }\n    static setupBufferView() {\n    }\n    registerDependency(component, isMust) {\n    }\n    static takeBufferView(bufferUse, componentClass, byteLengthSumOfMembers, count) {\n        const buffer = _core_MemoryManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance().getBuffer(bufferUse);\n        if (!this.__bufferViews.has(componentClass)) {\n            this.__bufferViews.set(componentClass, new Map());\n        }\n        const bufferViews = this.__bufferViews.get(componentClass);\n        if (!bufferViews.has(bufferUse)) {\n            bufferViews.set(bufferUse, buffer.takeBufferView({ byteLengthToNeed: byteLengthSumOfMembers * count, byteStride: 0, isAoS: false }));\n        }\n    }\n    takeOne(memberName, dataClassType, initValues) {\n        if (!this['_' + memberName].isDummy()) {\n            return;\n        }\n        let taken = Component.__accessors.get(this.constructor).get(memberName).takeOne();\n        if (dataClassType === _math_Matrix44__WEBPACK_IMPORTED_MODULE_1__[\"default\"] || dataClassType === _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\n            this['_' + memberName] = new dataClassType(taken, false, true);\n        }\n        else if (dataClassType === _math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_2__[\"default\"] || dataClassType === _math_MutableRowMajarMatrix44__WEBPACK_IMPORTED_MODULE_6__[\"default\"]) {\n            this['_' + memberName] = new dataClassType(taken, true);\n        }\n        else {\n            this['_' + memberName] = new dataClassType(taken);\n        }\n        for (let i = 0; i < this['_' + memberName].v.length; ++i) {\n            this['_' + memberName].v[i] = initValues[i];\n        }\n        return null;\n    }\n    static getAccessor(memberName, componentClass) {\n        return this.__accessors.get(componentClass).get(memberName);\n    }\n    static takeAccessor(bufferUse, memberName, componentClass, compositionType, componentType, count) {\n        if (!this.__accessors.has(componentClass)) {\n            this.__accessors.set(componentClass, new Map());\n        }\n        const accessors = this.__accessors.get(componentClass);\n        if (!accessors.has(memberName)) {\n            const bufferViews = this.__bufferViews.get(componentClass);\n            accessors.set(memberName, bufferViews.get(bufferUse).takeAccessor({ compositionType: compositionType, componentType, count: count }));\n        }\n    }\n    static getByteOffsetOfThisComponentTypeInBuffer(bufferUse, componentClass) {\n        return this.__bufferViews.get(componentClass).get(bufferUse).byteOffset;\n    }\n    static getByteOffsetOfFirstOfThisMemberInBuffer(memberName, componentClass) {\n        return this.__accessors.get(componentClass).get(memberName).byteOffsetInBuffer;\n    }\n    static getByteOffsetOfFirstOfThisMemberInBufferView(memberName, componentClass) {\n        return this.__accessors.get(componentClass).get(memberName).byteOffsetInBufferView;\n    }\n    static getCompositionTypeOfMember(memberName, componentClass) {\n        const memberInfoArray = this.__memberInfo.get(componentClass);\n        const info = memberInfoArray.find(info => {\n            return info.memberName === memberName;\n        });\n        if (info != null) {\n            return info.compositionType;\n        }\n        else {\n            return null;\n        }\n    }\n    static getComponentTypeOfMember(memberName, componentClass) {\n        const memberInfoArray = this.__memberInfo.get(componentClass);\n        const info = memberInfoArray.find(info => {\n            return info.memberName === memberName;\n        });\n        if (info != null) {\n            return info.componentType;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Register a member field of component class for memory allocation.\n     * @param bufferUse purpose type of buffer use\n     * @param memberName the name of member field\n     * @param dataClassType a class of data\n     * @param componentType a type of number\n     * @param initValues a initial value\n     */\n    registerMember(bufferUse, memberName, dataClassType, componentType, initValues) {\n        if (!Component.__memberInfo.has(this.constructor)) {\n            Component.__memberInfo.set(this.constructor, []);\n        }\n        const memberInfoArray = Component.__memberInfo.get(this.constructor);\n        memberInfoArray.push({ bufferUse: bufferUse, memberName: memberName, dataClassType: dataClassType,\n            compositionType: dataClassType.compositionType, componentType: componentType, initValues: initValues });\n    }\n    /**\n     * Allocate memory of self member fields\n     * @param count a number of entities to need allocate\n     */\n    submitToAllocation(count = _Config__WEBPACK_IMPORTED_MODULE_4__[\"default\"].maxEntityNumber) {\n        const componentClass = this.constructor;\n        const memberInfoArray = Component.__memberInfo.get(componentClass);\n        if (this._component_sid === 0) {\n            if (!Component.__members.has(componentClass)) {\n                Component.__members.set(componentClass, new Map());\n            }\n            const member = Component.__members.get(componentClass);\n            memberInfoArray.forEach(info => {\n                member.set(info.bufferUse, []);\n            });\n            memberInfoArray.forEach(info => {\n                member.get(info.bufferUse).push(info);\n            });\n            // take a BufferView for all entities for each member fields.\n            for (let bufferUse of member.keys()) {\n                const infoArray = member.get(bufferUse);\n                if (!Component.__byteLengthSumOfMembers.has(componentClass)) {\n                    Component.__byteLengthSumOfMembers.set(componentClass, new Map());\n                }\n                let byteLengthSumOfMembers = Component.__byteLengthSumOfMembers.get(componentClass);\n                if (!byteLengthSumOfMembers.has(bufferUse)) {\n                    byteLengthSumOfMembers.set(bufferUse, 0);\n                }\n                infoArray.forEach(info => {\n                    byteLengthSumOfMembers.set(bufferUse, byteLengthSumOfMembers.get(bufferUse) +\n                        info.compositionType.getNumberOfComponents() * info.componentType.getSizeInBytes());\n                });\n                if (infoArray.length > 0) {\n                    Component.takeBufferView(bufferUse, componentClass, byteLengthSumOfMembers.get(bufferUse), count);\n                }\n            }\n            // take a Accessor for all entities for each member fields (same as BufferView)\n            for (let bufferUse of member.keys()) {\n                const infoArray = member.get(bufferUse);\n                infoArray.forEach(info => {\n                    Component.takeAccessor(info.bufferUse, info.memberName, componentClass, info.compositionType, info.componentType, count);\n                });\n            }\n        }\n        const member = Component.__members.get(componentClass);\n        // take a field value allocation for each entity for each member field\n        for (let bufferUse of member.keys()) {\n            const infoArray = member.get(bufferUse);\n            infoArray.forEach(info => {\n                this.takeOne(info.memberName, info.dataClassType, info.initValues);\n            });\n        }\n    }\n    get entity() {\n        return this.__entityRepository.getEntity(this.__entityUid);\n    }\n}\nComponent.invalidComponentSID = -1;\nComponent.__componentsOfProcessStages = new Map();\nComponent.__lengthOfArrayOfProcessStages = new Map();\nComponent.__dirtyOfArrayOfProcessStages = new Map();\nComponent.__bufferViews = new Map();\nComponent.__accessors = new Map();\nComponent.__byteLengthSumOfMembers = new Map();\nComponent.__memberInfo = new Map();\nComponent.__members = new Map();\n\n\n//# sourceURL=webpack:///./src/foundation/core/Component.ts?");

/***/ }),

/***/ "./src/foundation/core/ComponentRepository.ts":
/*!****************************************************!*\
  !*** ./src/foundation/core/ComponentRepository.ts ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ComponentRepository; });\n/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ \"./src/foundation/core/Component.ts\");\n/* harmony import */ var _misc_IsUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../misc/IsUtil */ \"./src/foundation/misc/IsUtil.ts\");\n/* harmony import */ var _system_InitialSetting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../system/InitialSetting */ \"./src/foundation/system/InitialSetting.ts\");\n\n\n\nclass ComponentRepository {\n    constructor() {\n        this.__component_sid_count_map = new Map();\n        this.__components = new Map();\n    }\n    static registerComponentClass(componentClass) {\n        const thisClass = ComponentRepository;\n        thisClass.__componentClasses.set(componentClass.componentTID, componentClass);\n    }\n    static unregisterComponentClass(componentTID) {\n        const thisClass = ComponentRepository;\n        thisClass.__componentClasses.delete(componentTID);\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new ComponentRepository();\n        }\n        return this.__instance;\n    }\n    static getComponentClass(componentTid) {\n        return this.__componentClasses.get(componentTid);\n    }\n    createComponent(componentTid, entityUid, entityRepository) {\n        const thisClass = ComponentRepository;\n        const componentClass = thisClass.__componentClasses.get(componentTid);\n        if (componentClass != null) {\n            let component_sid_count = this.__component_sid_count_map.get(componentTid);\n            if (!_misc_IsUtil__WEBPACK_IMPORTED_MODULE_1__[\"default\"].exist(component_sid_count)) {\n                this.__component_sid_count_map.set(componentTid, 0);\n                component_sid_count = _Component__WEBPACK_IMPORTED_MODULE_0__[\"default\"].invalidComponentSID;\n            }\n            this.__component_sid_count_map.set(componentTid, ++component_sid_count);\n            const component = new componentClass(entityUid, component_sid_count, entityRepository);\n            if (!this.__components.has(componentTid)) {\n                this.__components.set(componentTid, []);\n            }\n            const array = this.__components.get(componentTid);\n            if (array != null) {\n                array[component.componentSID] = component;\n                return component;\n            }\n        }\n        return null;\n    }\n    getComponent(componentClass, componentSid) {\n        return this.getComponentFromComponentTID(componentClass.componentTID, componentSid);\n    }\n    getComponentFromComponentTID(componentTid, componentSid) {\n        const map = this.__components.get(componentTid);\n        if (map != null) {\n            const component = map[componentSid];\n            if (component != null) {\n                return map[componentSid];\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    static getMemoryBeginIndex(componentTid) {\n        let memoryBeginIndex = 0;\n        for (let i = 0; i < componentTid; i++) {\n            const componentClass = ComponentRepository.__componentClasses.get(i);\n            if (componentClass != null) {\n                const sizeOfComponent = componentClass.sizeOfThisComponent;\n                const maxEntityNumber = _system_InitialSetting__WEBPACK_IMPORTED_MODULE_2__[\"default\"].maxEntityNumber;\n                memoryBeginIndex += sizeOfComponent * maxEntityNumber;\n            }\n        }\n        return memoryBeginIndex;\n    }\n    getComponentsWithType(componentType) {\n        const components = this.__components.get(componentType.componentTID);\n        if (components == null) {\n            return [];\n        }\n        return components;\n    }\n    getComponentTIDs() {\n        const indices = [];\n        for (let type of this.__components.keys()) {\n            indices.push(type);\n        }\n        indices.sort(function (a, b) {\n            if (a < b)\n                return -1;\n            if (a > b)\n                return 1;\n            return 0;\n        });\n        return indices;\n    }\n}\nComponentRepository.__componentClasses = new Map();\n\n\n//# sourceURL=webpack:///./src/foundation/core/ComponentRepository.ts?");

/***/ }),

/***/ "./src/foundation/core/Config.ts":
/*!***************************************!*\
  !*** ./src/foundation/core/Config.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nlet maxEntityNumber = 5000;\nlet maxLightNumberInShader = 4;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object.freeze({ maxEntityNumber, maxLightNumberInShader }));\n\n\n//# sourceURL=webpack:///./src/foundation/core/Config.ts?");

/***/ }),

/***/ "./src/foundation/core/Entity.ts":
/*!***************************************!*\
  !*** ./src/foundation/core/Entity.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Entity; });\n/* harmony import */ var _components_TransformComponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/TransformComponent */ \"./src/foundation/components/TransformComponent.ts\");\n/* harmony import */ var _components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n\n\n/**\n * The Rhodonite Entity Class which are an entities that exists in space.\n * Entity can acquire those functions by having components on themselves.\n */\nclass Entity {\n    /**\n     * The constructor of the Entity class.\n     * When creating an Entity, use the createEntity method of the EntityRepository class\n     * instead of directly calling this constructor.\n     * @param entityUID The unique ID of the entity\n     * @param isAlive Whether this entity alive or not\n     * @param entityComponent The instance of EntityComponent (Dependency Injection)\n     */\n    constructor(entityUID, isAlive, entityComponent) {\n        this.__entity_uid = entityUID;\n        this.__isAlive = isAlive;\n        this.__entityRepository = entityComponent;\n        this.__uniqueName = 'entity_of_uid_' + entityUID;\n        Entity.__uniqueNames[entityUID] = this.__uniqueName;\n    }\n    /**\n     * Get Unique ID of the entity.\n     */\n    get entityUID() {\n        return this.__entity_uid;\n    }\n    /**\n     * Get the component of the specified type that the entity has\n     * @param componentType\n     */\n    getComponent(componentType) {\n        const map = this.__entityRepository._components[this.entityUID];\n        if (map != null) {\n            const component = map.get(componentType.componentTID);\n            if (component != null) {\n                return component;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the TransformComponent of the entity.\n     * It's a shortcut method of getComponent(TransformComponent).\n     */\n    getTransform() {\n        if (this.__transformComponent == null) {\n            this.__transformComponent = this.getComponent(_components_TransformComponent__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n        }\n        return this.__transformComponent;\n    }\n    /**\n     * Get the SceneGraphComponent of the entity.\n     * It's a shortcut method of getComponent(SceneGraphComponent).\n     */\n    getSceneGraph() {\n        if (this.__sceneGraphComponent == null) {\n            this.__sceneGraphComponent = this.getComponent(_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n        }\n        return this.__sceneGraphComponent;\n    }\n    /**\n     * Try to set a unique name of the entity.\n     * @param name\n     * @param toAddNameIfConflict If true, force to add name string to the current unique name string. If false, give up to change name.\n     */\n    tryToSetUniqueName(name, toAddNameIfConflict) {\n        if (Entity.__uniqueNames.indexOf(name) !== -1) {\n            // Conflict\n            if (toAddNameIfConflict) {\n                const newName = name + '_(' + this.__uniqueName + ')';\n                if (Entity.__uniqueNames.indexOf(newName) === -1) {\n                    this.__uniqueName = newName;\n                    Entity.__uniqueNames[this.__entity_uid] = this.__uniqueName;\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            this.__uniqueName = name;\n            Entity.__uniqueNames[this.__entity_uid] = this.__uniqueName;\n            return true;\n        }\n    }\n    /**\n     * Get the unique name of the entity.\n     */\n    get uniqueName() {\n        return this.__uniqueName;\n    }\n}\nEntity.invalidEntityUID = -1;\nEntity.__uniqueNames = [];\n\n\n//# sourceURL=webpack:///./src/foundation/core/Entity.ts?");

/***/ }),

/***/ "./src/foundation/core/EntityRepository.ts":
/*!*************************************************!*\
  !*** ./src/foundation/core/EntityRepository.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EntityRepository; });\n/* harmony import */ var _Entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Entity */ \"./src/foundation/core/Entity.ts\");\n/* harmony import */ var _ComponentRepository__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n\n\nclass EntityRepository {\n    constructor() {\n        this.__entity_uid_count = _Entity__WEBPACK_IMPORTED_MODULE_0__[\"default\"].invalidEntityUID;\n        this.__entities = [];\n        this._components = [];\n        this.__componentRepository = _ComponentRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new EntityRepository();\n        }\n        return this.__instance;\n    }\n    createEntity(componentClasses) {\n        const entity = new _Entity__WEBPACK_IMPORTED_MODULE_0__[\"default\"](++this.__entity_uid_count, true, this);\n        this.__entities[this.__entity_uid_count] = entity;\n        return this.addComponentsToEntity(componentClasses, entity.entityUID);\n    }\n    addComponentsToEntity(componentClasses, entityUid) {\n        const entity = this.getEntity(entityUid);\n        for (let componentClass of componentClasses) {\n            const component = this.__componentRepository.createComponent(componentClass.componentTID, entityUid, this);\n            let map = this._components[entity.entityUID];\n            if (map == null) {\n                map = new Map();\n                this._components[entity.entityUID] = map;\n            }\n            if (component != null) {\n                map.set(componentClass.componentTID, component);\n            }\n        }\n        return entity;\n    }\n    removeComponentsFromEntity(componentClasses, entityUid) {\n        const entity = this.getEntity(entityUid);\n        for (let componentClass of componentClasses) {\n            let map = this._components[entity.entityUID];\n            if (map == null) {\n                map = new Map();\n                this._components[entity.entityUID] = map;\n            }\n            map.delete(componentClass.componentTID);\n        }\n        return entity;\n    }\n    getEntity(entityUid) {\n        return this.__entities[entityUid];\n    }\n    getComponentOfEntity(entityUid, componentType) {\n        const entity = this._components[entityUid];\n        let component = null;\n        if (entity != null) {\n            component = entity.get(componentType.componentTID);\n            if (component != null) {\n                return component;\n            }\n            else {\n                return null;\n            }\n        }\n        return component;\n    }\n    _getEntities() {\n        return this.__entities.concat();\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/core/EntityRepository.ts?");

/***/ }),

/***/ "./src/foundation/core/MemoryManager.ts":
/*!**********************************************!*\
  !*** ./src/foundation/core/MemoryManager.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MemoryManager; });\n/* harmony import */ var _memory_Buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../memory/Buffer */ \"./src/foundation/memory/Buffer.ts\");\n/* harmony import */ var _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n\n\n/**\n * Usage\n * const mm = MemoryManager.getInstance();\n * this.translate = new Vector3(\n *   mm.assignMem(componentUID, propetyId, entityUID, isRendered)\n * );\n */\nclass MemoryManager {\n    constructor() {\n        //__entityMaxCount: number;\n        this.__buffers = {};\n        // BufferForGPUInstanceData\n        {\n            const arrayBuffer = new ArrayBuffer(MemoryManager.bufferWidthLength * MemoryManager.bufferHeightLength /*width*height*/ * 4 /*rgba*/ * 8 /*byte*/);\n            const buffer = new _memory_Buffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n                byteLength: arrayBuffer.byteLength,\n                arrayBuffer: arrayBuffer,\n                name: _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_1__[\"BufferUse\"].GPUInstanceData.toString()\n            });\n            this.__buffers[buffer.name] = buffer;\n        }\n        // BufferForGPUVertexData\n        {\n            const arrayBuffer = new ArrayBuffer(MemoryManager.bufferWidthLength * MemoryManager.bufferHeightLength /*width*height*/ * 4 /*rgba*/ * 8 /*byte*/);\n            const buffer = new _memory_Buffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n                byteLength: arrayBuffer.byteLength,\n                arrayBuffer: arrayBuffer,\n                name: _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_1__[\"BufferUse\"].GPUVertexData.toString()\n            });\n            this.__buffers[buffer.name] = buffer;\n        }\n        // BufferForUBO\n        {\n            const arrayBuffer = new ArrayBuffer((MemoryManager.bufferWidthLength - 1) * (MemoryManager.bufferHeightLength - 1) /*width*height*/ * 4 /*rgba*/ * 8 /*byte*/);\n            const buffer = new _memory_Buffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n                byteLength: arrayBuffer.byteLength,\n                arrayBuffer: arrayBuffer,\n                name: _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_1__[\"BufferUse\"].UBOGeneric.toString()\n            });\n            this.__buffers[buffer.name] = buffer;\n        }\n        // BufferForCP\n        {\n            const arrayBuffer = new ArrayBuffer(MemoryManager.bufferWidthLength * MemoryManager.bufferHeightLength /*width*height*/ * 4 /*rgba*/ * 8 /*byte*/);\n            const buffer = new _memory_Buffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n                byteLength: arrayBuffer.byteLength,\n                arrayBuffer: arrayBuffer,\n                name: _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_1__[\"BufferUse\"].CPUGeneric.toString()\n            });\n            this.__buffers[buffer.name] = buffer;\n        }\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new MemoryManager();\n        }\n        return this.__instance;\n    }\n    getBuffer(bufferUse) {\n        return this.__buffers[bufferUse.toString()];\n    }\n    static get bufferWidthLength() {\n        return MemoryManager.__bufferWidthLength;\n    }\n    static get bufferHeightLength() {\n        return MemoryManager.__bufferHeightLength;\n    }\n}\nMemoryManager.__bufferWidthLength = Math.pow(2, 11);\nMemoryManager.__bufferHeightLength = Math.pow(2, 11);\n\n\n//# sourceURL=webpack:///./src/foundation/core/MemoryManager.ts?");

/***/ }),

/***/ "./src/foundation/core/Object.ts":
/*!***************************************!*\
  !*** ./src/foundation/core/Object.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RnObject; });\nclass RnObject {\n    constructor(needToManage = false) {\n        this.__objectUid = -1;\n        if (needToManage) {\n            this.__objectUid = ++RnObject.currentMaxObjectCount;\n        }\n    }\n    get objectUid() {\n        return this.__objectUid;\n    }\n}\nRnObject.currentMaxObjectCount = -1;\nRnObject.InvalidObjectUID = -1;\n\n\n//# sourceURL=webpack:///./src/foundation/core/Object.ts?");

/***/ }),

/***/ "./src/foundation/definitions/AlphaMode.ts":
/*!*************************************************!*\
  !*** ./src/foundation/definitions/AlphaMode.ts ***!
  \*************************************************/
/*! exports provided: AlphaMode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AlphaMode\", function() { return AlphaMode; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass AlphaModeClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst Opaque = new AlphaModeClass({ index: 0, str: 'OPAQUE' });\nconst Mask = new AlphaModeClass({ index: 1, str: 'MASK' });\nconst Blend = new AlphaModeClass({ index: 2, str: 'BLEND' });\nconst typeList = [Opaque, Mask, Blend];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromString(str) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_fromString\"])({ typeList, str });\n}\nconst AlphaMode = Object.freeze({ Opaque, Mask, Blend, from, fromString });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/AlphaMode.ts?");

/***/ }),

/***/ "./src/foundation/definitions/Animation.ts":
/*!*************************************************!*\
  !*** ./src/foundation/definitions/Animation.ts ***!
  \*************************************************/
/*! exports provided: Animation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Animation\", function() { return Animation; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass AnimationClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst Linear = new AnimationClass({ index: 0, str: 'Linear' });\nconst Step = new AnimationClass({ index: 1, str: 'Step' });\nconst CubicSpline = new AnimationClass({ index: 2, str: 'CubicSpline' });\nconst typeList = [Linear, Step, CubicSpline];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromString(str) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_fromString\"])({ typeList, str });\n}\nconst Animation = Object.freeze({ Linear, Step, CubicSpline, from, fromString });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/Animation.ts?");

/***/ }),

/***/ "./src/foundation/definitions/BufferUse.ts":
/*!*************************************************!*\
  !*** ./src/foundation/definitions/BufferUse.ts ***!
  \*************************************************/
/*! exports provided: BufferUse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BufferUse\", function() { return BufferUse; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass BufferUseClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst GPUInstanceData = new BufferUseClass({ index: 0, str: 'GPUInstanceData' });\nconst GPUVertexData = new BufferUseClass({ index: 1, str: 'GPUVertexData' });\nconst UBOGeneric = new BufferUseClass({ index: 2, str: 'UBOGeneric' });\nconst CPUGeneric = new BufferUseClass({ index: 3, str: 'CPUGeneric' });\nconst typeList = [GPUInstanceData, GPUVertexData, UBOGeneric, CPUGeneric];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromString(str) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_fromString\"])({ typeList, str });\n}\nconst BufferUse = Object.freeze({ GPUInstanceData, GPUVertexData, UBOGeneric, CPUGeneric, from, fromString });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/BufferUse.ts?");

/***/ }),

/***/ "./src/foundation/definitions/CameraType.ts":
/*!**************************************************!*\
  !*** ./src/foundation/definitions/CameraType.ts ***!
  \**************************************************/
/*! exports provided: CameraType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CameraType\", function() { return CameraType; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass CameraTypeClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst Perspective = new CameraTypeClass({ index: 0, str: 'Perspective' });\nconst Orthographic = new CameraTypeClass({ index: 1, str: 'Orthographic' });\nconst Frustom = new CameraTypeClass({ index: 2, str: 'Frustom' });\nconst typeList = [Perspective, Orthographic, Frustom];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromString(str) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_fromString\"])({ typeList, str });\n}\nconst CameraType = Object.freeze({ Perspective, Orthographic, Frustom, from, fromString });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/CameraType.ts?");

/***/ }),

/***/ "./src/foundation/definitions/ComponentType.ts":
/*!*****************************************************!*\
  !*** ./src/foundation/definitions/ComponentType.ts ***!
  \*****************************************************/
/*! exports provided: ComponentType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComponentType\", function() { return ComponentType; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass ComponentTypeClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str, sizeInBytes }) {\n        super({ index, str });\n        this.__sizeInBytes = sizeInBytes;\n    }\n    getSizeInBytes() {\n        return this.__sizeInBytes;\n    }\n}\nconst Unknown = new ComponentTypeClass({ index: 5119, str: 'UNKNOWN', sizeInBytes: 0 });\nconst Byte = new ComponentTypeClass({ index: 5120, str: 'BYTE', sizeInBytes: 1 });\nconst UnsignedByte = new ComponentTypeClass({ index: 5121, str: 'UNSIGNED_BYTE', sizeInBytes: 1 });\nconst Short = new ComponentTypeClass({ index: 5122, str: 'SHORT', sizeInBytes: 2 });\nconst UnsignedShort = new ComponentTypeClass({ index: 5123, str: 'UNSIGNED_SHORT', sizeInBytes: 2 });\nconst Int = new ComponentTypeClass({ index: 5124, str: 'INT', sizeInBytes: 4 });\nconst UnsingedInt = new ComponentTypeClass({ index: 5125, str: 'UNSIGNED_INT', sizeInBytes: 4 });\nconst Float = new ComponentTypeClass({ index: 5126, str: 'FLOAT', sizeInBytes: 4 });\nconst Double = new ComponentTypeClass({ index: 5127, str: 'DOUBLE', sizeInBytes: 8 });\nconst HalfFloat = new ComponentTypeClass({ index: 0x8D61, str: 'HALF_FLOAT_OES', sizeInBytes: 2 });\nconst typeList = [Unknown, Byte, UnsignedByte, Short, UnsignedShort, Int, UnsingedInt, Float, Double, HalfFloat];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array) {\n        return Byte;\n    }\n    else if (typedArray instanceof Uint8Array || typedArray instanceof Uint8ClampedArray) {\n        return UnsignedByte;\n    }\n    else if (typedArray instanceof Int16Array) {\n        return Short;\n    }\n    else if (typedArray instanceof Uint16Array) {\n        return UnsignedShort;\n    }\n    else if (typedArray instanceof Int32Array) {\n        return Int;\n    }\n    else if (typedArray instanceof Uint32Array) {\n        return UnsingedInt;\n    }\n    else if (typedArray instanceof Float32Array) {\n        return Float;\n    }\n    else if (typedArray instanceof Float64Array) {\n        return Double;\n    }\n    return Unknown;\n}\nconst ComponentType = Object.freeze({ Unknown, Byte, UnsignedByte, Short, UnsignedShort, Int, UnsingedInt, Float, Double, HalfFloat, from, fromTypedArray });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/ComponentType.ts?");

/***/ }),

/***/ "./src/foundation/definitions/CompositionType.ts":
/*!*******************************************************!*\
  !*** ./src/foundation/definitions/CompositionType.ts ***!
  \*******************************************************/
/*! exports provided: CompositionType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompositionType\", function() { return CompositionType; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass CompositionTypeClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str, numberOfComponents }) {\n        super({ index, str });\n        this.__numberOfComponents = 0;\n        this.__numberOfComponents = numberOfComponents;\n    }\n    getNumberOfComponents() {\n        return this.__numberOfComponents;\n    }\n}\nconst Unknown = new CompositionTypeClass({ index: -1, str: 'UNKNOWN', numberOfComponents: 0 });\nconst Scalar = new CompositionTypeClass({ index: 0, str: 'SCALAR', numberOfComponents: 1 });\nconst Vec2 = new CompositionTypeClass({ index: 1, str: 'VEC2', numberOfComponents: 2 });\nconst Vec3 = new CompositionTypeClass({ index: 2, str: 'VEC3', numberOfComponents: 3 });\nconst Vec4 = new CompositionTypeClass({ index: 3, str: 'VEC4', numberOfComponents: 4 });\nconst Mat2 = new CompositionTypeClass({ index: 4, str: 'MAT2', numberOfComponents: 4 });\nconst Mat3 = new CompositionTypeClass({ index: 5, str: 'MAT3', numberOfComponents: 9 });\nconst Mat4 = new CompositionTypeClass({ index: 6, str: 'MAT4', numberOfComponents: 16 });\nconst Texture2D = new CompositionTypeClass({ index: 7, str: 'TEXTURE_2D', numberOfComponents: 1 });\nconst TextureCube = new CompositionTypeClass({ index: 8, str: 'TEXTURE_CUBE', numberOfComponents: 1 });\nconst typeList = [Unknown, Scalar, Vec2, Vec3, Vec4, Mat2, Mat3, Mat4, Texture2D, TextureCube];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromString(str) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_fromString\"])({ typeList, str });\n}\nconst CompositionType = Object.freeze({ Unknown, Scalar, Vec2, Vec3, Vec4, Mat2, Mat3, Mat4, Texture2D, TextureCube, from, fromString });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/CompositionType.ts?");

/***/ }),

/***/ "./src/foundation/definitions/LightType.ts":
/*!*************************************************!*\
  !*** ./src/foundation/definitions/LightType.ts ***!
  \*************************************************/
/*! exports provided: LightType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LightType\", function() { return LightType; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass LightTypeClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst Directional = new LightTypeClass({ index: 0, str: 'Directional' });\nconst Point = new LightTypeClass({ index: 1, str: 'Point' });\nconst Spot = new LightTypeClass({ index: 2, str: 'Spot' });\nconst Ambient = new LightTypeClass({ index: 3, str: 'Ambient' });\nconst typeList = [Point, Directional, Spot, Ambient];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromString(str) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_fromString\"])({ typeList, str });\n}\nconst LightType = Object.freeze({ Point, Directional, Spot, Ambient, from, fromString });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/LightType.ts?");

/***/ }),

/***/ "./src/foundation/definitions/PixelFormat.ts":
/*!***************************************************!*\
  !*** ./src/foundation/definitions/PixelFormat.ts ***!
  \***************************************************/
/*! exports provided: PixelFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PixelFormat\", function() { return PixelFormat; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass PixelFormatClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst DepthComponent = new PixelFormatClass({ index: 0x1902, str: 'DEPTH_COMPONENT' });\nconst Alpha = new PixelFormatClass({ index: 0x1906, str: 'ALPHA' });\nconst RGB = new PixelFormatClass({ index: 0x1907, str: 'RGB' });\nconst RGBA = new PixelFormatClass({ index: 0x1908, str: 'RGBA' });\nconst Luminance = new PixelFormatClass({ index: 0x1909, str: 'LUMINANCE' });\nconst LuminanceAlpha = new PixelFormatClass({ index: 0x190A, str: 'LUMINANCE_ALPHA' });\nconst typeList = [DepthComponent, Alpha, RGB, RGBA, Luminance, LuminanceAlpha];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nconst PixelFormat = Object.freeze({ DepthComponent, Alpha, RGB, RGBA, Luminance, LuminanceAlpha });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/PixelFormat.ts?");

/***/ }),

/***/ "./src/foundation/definitions/PrimitiveMode.ts":
/*!*****************************************************!*\
  !*** ./src/foundation/definitions/PrimitiveMode.ts ***!
  \*****************************************************/
/*! exports provided: PrimitiveMode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrimitiveMode\", function() { return PrimitiveMode; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass PrimitiveModeClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst Unknown = new PrimitiveModeClass({ index: -1, str: 'UNKNOWN' });\nconst Points = new PrimitiveModeClass({ index: 0, str: 'POINTS' });\nconst Lines = new PrimitiveModeClass({ index: 1, str: 'LINES' });\nconst LineLoop = new PrimitiveModeClass({ index: 2, str: 'LINE_LOOP' });\nconst LineStrip = new PrimitiveModeClass({ index: 3, str: 'LINE_STRIP' });\nconst Triangles = new PrimitiveModeClass({ index: 4, str: 'TRIANGLES' });\nconst TriangleStrip = new PrimitiveModeClass({ index: 5, str: 'TRIANGLE_STRIP' });\nconst TriangleFan = new PrimitiveModeClass({ index: 6, str: 'TRIANGLE_FAN' });\nconst typeList = [Unknown, Points, Lines, LineLoop, LineStrip, Triangles, TriangleStrip, TriangleFan];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nconst PrimitiveMode = Object.freeze({ Unknown, Points, Lines, LineLoop, LineStrip, Triangles, TriangleStrip, TriangleFan, from });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/PrimitiveMode.ts?");

/***/ }),

/***/ "./src/foundation/definitions/ProcessApproach.ts":
/*!*******************************************************!*\
  !*** ./src/foundation/definitions/ProcessApproach.ts ***!
  \*******************************************************/
/*! exports provided: ProcessApproach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProcessApproach\", function() { return ProcessApproach; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass ProcessApproachClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst None = new ProcessApproachClass({ index: 0, str: 'NONE' });\nconst UniformWebGL1 = new ProcessApproachClass({ index: 1, str: 'UNIFORM_WEBGL1' });\nconst DataTextureWebGL1 = new ProcessApproachClass({ index: 2, str: 'DATA_TEXTURE_WEBGL1' });\nconst DataTextureWebGL2 = new ProcessApproachClass({ index: 3, str: 'DATA_TEXTURE_WEBGL2' });\nconst UBOWebGL2 = new ProcessApproachClass({ index: 4, str: 'UBO_WEBGL2' });\nconst TransformFeedbackWebGL2 = new ProcessApproachClass({ index: 5, str: 'TRNASFORM_FEEDBACK_WEBGL2' });\nconst typeList = [None, UniformWebGL1, DataTextureWebGL1, DataTextureWebGL2, UBOWebGL2, TransformFeedbackWebGL2];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nconst ProcessApproach = Object.freeze({ None, UniformWebGL1, DataTextureWebGL1, DataTextureWebGL2, UBOWebGL2, TransformFeedbackWebGL2 });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/ProcessApproach.ts?");

/***/ }),

/***/ "./src/foundation/definitions/ProcessStage.ts":
/*!****************************************************!*\
  !*** ./src/foundation/definitions/ProcessStage.ts ***!
  \****************************************************/
/*! exports provided: ProcessStage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProcessStage\", function() { return ProcessStage; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass ProcessStageClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str, methodName }) {\n        super({ index, str });\n        this.__methodName = methodName;\n    }\n    getMethodName() {\n        return this.__methodName;\n    }\n}\nconst Unknown = new ProcessStageClass({ index: -1, str: 'UNKNOWN', methodName: '$unknown' });\nconst Create = new ProcessStageClass({ index: 0, str: 'CREATE', methodName: '$create' });\nconst Load = new ProcessStageClass({ index: 1, str: 'LOAD', methodName: '$load' });\nconst Mount = new ProcessStageClass({ index: 2, str: 'MOUNT', methodName: '$mount' });\nconst Logic = new ProcessStageClass({ index: 3, str: 'LOGIC', methodName: '$logic' });\nconst PreRender = new ProcessStageClass({ index: 4, str: 'PRE_RENDER', methodName: '$prerender' });\nconst Render = new ProcessStageClass({ index: 5, str: 'RENDER', methodName: '$render' });\nconst Unmount = new ProcessStageClass({ index: 6, str: 'UNMOUNT', methodName: '$unmount' });\nconst Discard = new ProcessStageClass({ index: 7, str: 'DISCARD', methodName: '$discard' });\nconst typeList = [Unknown, Create, Load, Mount, Logic, PreRender, Render, Unmount, Discard];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nconst ProcessStage = Object.freeze({ Unknown, Create, Load, Mount, Logic, PreRender, Render, Unmount, Discard, from });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/ProcessStage.ts?");

/***/ }),

/***/ "./src/foundation/definitions/ShaderNode.ts":
/*!**************************************************!*\
  !*** ./src/foundation/definitions/ShaderNode.ts ***!
  \**************************************************/
/*! exports provided: ShaderNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShaderNode\", function() { return ShaderNode; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass ShaderNodeClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst ClassicShading = new ShaderNodeClass({ index: 0, str: 'ClassicShading' });\nconst PBRShading = new ShaderNodeClass({ index: 1, str: 'PBRShading' });\nconst Lerp = new ShaderNodeClass({ index: 2, str: 'Lerp' });\nconst Add = new ShaderNodeClass({ index: 3, str: 'Add' });\nconst typeList = [ClassicShading, PBRShading];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromString(str) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_fromString\"])({ typeList, str });\n}\nconst ShaderNode = Object.freeze({ ClassicShading, PBRShading, from, fromString });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/ShaderNode.ts?");

/***/ }),

/***/ "./src/foundation/definitions/ShaderSemantics.ts":
/*!*******************************************************!*\
  !*** ./src/foundation/definitions/ShaderSemantics.ts ***!
  \*******************************************************/
/*! exports provided: ShaderSemantics */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShaderSemantics\", function() { return ShaderSemantics; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass ShaderSemanticsClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, singularStr, pluralStr }) {\n        super({ index: index, str: singularStr });\n        this.pluralStr = pluralStr;\n    }\n    get singularStr() {\n        return this.str;\n    }\n}\nconst WorldMatrix = new ShaderSemanticsClass({ index: 0, singularStr: 'worldMatrix', pluralStr: 'worldMatrices' });\nconst ViewMatrix = new ShaderSemanticsClass({ index: 1, singularStr: 'viewMatrix', pluralStr: 'viewMatrices' });\nconst ProjectionMatrix = new ShaderSemanticsClass({ index: 2, singularStr: 'projectionMatrix', pluralStr: 'projectionMatrices' });\nconst NormalMatrix = new ShaderSemanticsClass({ index: 3, singularStr: 'normalMatrix', pluralStr: 'normalMatrices' });\nconst BoneMatrix = new ShaderSemanticsClass({ index: 4, singularStr: 'boneMatrix', pluralStr: 'boneMatrices' });\nconst BaseColorFactor = new ShaderSemanticsClass({ index: 5, singularStr: 'baseColorFactor', pluralStr: 'baseColorFactors' });\nconst BaseColorTexture = new ShaderSemanticsClass({ index: 6, singularStr: 'baseColorTexture', pluralStr: 'baseColorTextures' });\nconst NormalTexture = new ShaderSemanticsClass({ index: 7, singularStr: 'normalTexture', pluralStr: 'normalTextures' });\nconst MetallicRoughnessTexture = new ShaderSemanticsClass({ index: 8, singularStr: 'metallicRoughnessTexture', pluralStr: 'metallicRoughnessTextures' });\nconst OcclusionTexture = new ShaderSemanticsClass({ index: 9, singularStr: 'occlusionTexture', pluralStr: 'occlusionTextures' });\nconst EmissiveTexture = new ShaderSemanticsClass({ index: 10, singularStr: 'emissiveTexture', pluralStr: 'emissiveTextures' });\nconst LightNumber = new ShaderSemanticsClass({ index: 11, singularStr: 'lightNumber', pluralStr: 'lightNumbers' });\nconst LightPosition = new ShaderSemanticsClass({ index: 12, singularStr: 'lightPosition', pluralStr: 'lightPositions' });\nconst LightDirection = new ShaderSemanticsClass({ index: 13, singularStr: 'lightDirection', pluralStr: 'lightDirections' });\nconst LightIntensity = new ShaderSemanticsClass({ index: 14, singularStr: 'lightIntensity', pluralStr: 'intensityOfLights' });\nconst MetallicRoughnessFactor = new ShaderSemanticsClass({ index: 15, singularStr: 'metallicRoughnessFactor', pluralStr: 'metallicRoughnessFactors' });\nconst BrdfLutTexture = new ShaderSemanticsClass({ index: 16, singularStr: 'brdfLutTexture', pluralStr: 'brdfLutTexture' });\nconst DiffuseEnvTexture = new ShaderSemanticsClass({ index: 17, singularStr: 'diffuseEnvTexture', pluralStr: 'diffuseEnvTextures' });\nconst SpecularEnvTexture = new ShaderSemanticsClass({ index: 18, singularStr: 'specularEnvTexture', pluralStr: 'specularEnvTextures' });\nconst IBLParameter = new ShaderSemanticsClass({ index: 19, singularStr: 'iblParameter', pluralStr: 'iblParameter' });\nconst ViewPosition = new ShaderSemanticsClass({ index: 20, singularStr: 'viewPosition', pluralStr: 'viewPositions' });\nconst Wireframe = new ShaderSemanticsClass({ index: 21, singularStr: 'wireframe', pluralStr: 'wireframes' });\nconst DiffuseColorFactor = new ShaderSemanticsClass({ index: 22, singularStr: 'diffuseColorFactor', pluralStr: 'diffuseColorFactors' });\nconst DiffuseColorTexture = new ShaderSemanticsClass({ index: 23, singularStr: 'diffuseColorTexture', pluralStr: 'diffuseColorTextures' });\nconst SpecularColorFactor = new ShaderSemanticsClass({ index: 24, singularStr: 'specularColorFactor', pluralStr: 'specularColorFactors' });\nconst SpecularColorTexture = new ShaderSemanticsClass({ index: 25, singularStr: 'specularColorTexture', pluralStr: 'specularColorTextures' });\nconst Shininess = new ShaderSemanticsClass({ index: 26, singularStr: 'Shininess', pluralStr: 'Shininesses' });\nconst typeList = [WorldMatrix, ViewMatrix, ProjectionMatrix, NormalMatrix, BoneMatrix, BaseColorFactor, BaseColorTexture,\n    NormalTexture, MetallicRoughnessTexture, OcclusionTexture, EmissiveTexture, LightNumber, LightPosition, LightDirection, LightIntensity,\n    MetallicRoughnessFactor, BrdfLutTexture, DiffuseEnvTexture, SpecularEnvTexture, IBLParameter, ViewPosition, Wireframe,\n    DiffuseColorFactor, DiffuseColorTexture, SpecularColorFactor, SpecularColorTexture, Shininess];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromString(str) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_fromString\"])({ typeList, str });\n}\nconst ShaderSemantics = Object.freeze({ WorldMatrix, ViewMatrix, ProjectionMatrix, NormalMatrix, BoneMatrix, BaseColorFactor, BaseColorTexture,\n    NormalTexture, MetallicRoughnessTexture, OcclusionTexture, EmissiveTexture, LightNumber, LightPosition, LightDirection, LightIntensity,\n    MetallicRoughnessFactor, BrdfLutTexture, DiffuseEnvTexture, SpecularEnvTexture, IBLParameter, ViewPosition, Wireframe,\n    DiffuseColorFactor, DiffuseColorTexture, SpecularColorFactor, SpecularColorTexture, Shininess, from, fromString });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/ShaderSemantics.ts?");

/***/ }),

/***/ "./src/foundation/definitions/TextureParameter.ts":
/*!********************************************************!*\
  !*** ./src/foundation/definitions/TextureParameter.ts ***!
  \********************************************************/
/*! exports provided: TextureParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextureParameter\", function() { return TextureParameter; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass TextureParameterClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst Nearest = new TextureParameterClass({ index: 0x2600, str: 'NEAREST' });\nconst Linear = new TextureParameterClass({ index: 0x2601, str: 'LINEAR' });\nconst TextureMagFilter = new TextureParameterClass({ index: 0x2800, str: 'TEXTURE_MAG_FILTER' });\nconst TextureMinFilter = new TextureParameterClass({ index: 0x2801, str: 'TEXTURE_MIN_FILTER' });\nconst TextureWrapS = new TextureParameterClass({ index: 0x2802, str: 'TEXTURE_WRAP_S' });\nconst TextureWrapT = new TextureParameterClass({ index: 0x2803, str: 'TEXTURE_WRAP_T' });\nconst Texture2D = new TextureParameterClass({ index: 0x0DE1, str: 'TEXTURE_2D' });\nconst Texture = new TextureParameterClass({ index: 0x1702, str: 'TEXTURE' });\nconst Texture0 = new TextureParameterClass({ index: 0x84C0, str: 'TEXTURE0' });\nconst Texture1 = new TextureParameterClass({ index: 0x84C1, str: 'TEXTURE1' });\nconst ActiveTexture = new TextureParameterClass({ index: 0x84E0, str: 'ACTIVE_TEXTURE' });\nconst Repeat = new TextureParameterClass({ index: 0x2901, str: 'REPEAT' });\nconst ClampToEdge = new TextureParameterClass({ index: 0x812F, str: 'CLAMP_TO_EDGE' });\nconst RGB8 = new TextureParameterClass({ index: 0x8051, str: 'RGB8' });\nconst RGBA8 = new TextureParameterClass({ index: 0x8058, str: 'RGBA8' });\nconst RGB10_A2 = new TextureParameterClass({ index: 0x8059, str: 'RGB10_A2' });\nconst RGB16F = new TextureParameterClass({ index: 0x881B, str: 'RGB16F' });\nconst RGB32F = new TextureParameterClass({ index: 0x8815, str: 'RGB32F' });\nconst RGBA16F = new TextureParameterClass({ index: 0x881A, str: 'RGBA16F' });\nconst RGBA32F = new TextureParameterClass({ index: 0x8814, str: 'RGBA32F' });\nconst typeList = [Nearest, Linear, TextureMagFilter, TextureMinFilter, TextureWrapS, TextureWrapT, Texture2D, Texture, Texture0, Texture1, ActiveTexture,\n    Repeat, ClampToEdge, RGB8, RGBA8, RGB10_A2, RGB16F, RGB32F, RGBA16F, RGBA32F];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nconst TextureParameter = Object.freeze({ Nearest, Linear, TextureMagFilter, TextureMinFilter, TextureWrapS, TextureWrapT, Texture2D, Texture,\n    Texture0, Texture1, ActiveTexture, Repeat, ClampToEdge, RGB8, RGBA8, RGB10_A2, RGB16F, RGB32F, RGBA16F, RGBA32F });\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/TextureParameter.ts?");

/***/ }),

/***/ "./src/foundation/definitions/VertexAttribute.ts":
/*!*******************************************************!*\
  !*** ./src/foundation/definitions/VertexAttribute.ts ***!
  \*******************************************************/
/*! exports provided: VertexAttribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VertexAttribute\", function() { return VertexAttribute; });\n/* harmony import */ var _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass VertexAttributeClass extends _misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str, attributeSlot }) {\n        super({ index, str });\n        this.__attributeSlot = attributeSlot;\n    }\n    getAttributeSlot() {\n        return this.__attributeSlot;\n    }\n}\nconst Unknown = new VertexAttributeClass({ index: -1, str: 'UNKNOWN', attributeSlot: -1 });\nconst Position = new VertexAttributeClass({ index: 0, str: 'POSITION', attributeSlot: 0 });\nconst Normal = new VertexAttributeClass({ index: 1, str: 'NORMAL', attributeSlot: 1 });\nconst Tangent = new VertexAttributeClass({ index: 2, str: 'TANGENT', attributeSlot: 2 });\nconst Texcoord0 = new VertexAttributeClass({ index: 3, str: 'TEXCOORD_0', attributeSlot: 3 });\nconst Texcoord1 = new VertexAttributeClass({ index: 4, str: 'TEXCOORD_1', attributeSlot: 4 });\nconst Color0 = new VertexAttributeClass({ index: 5, str: 'COLOR_0', attributeSlot: 5 });\nconst Joints0 = new VertexAttributeClass({ index: 6, str: 'JOINTS_0', attributeSlot: 6 });\nconst Weights0 = new VertexAttributeClass({ index: 7, str: 'WEIGHTS_0', attributeSlot: 7 });\nconst Instance = new VertexAttributeClass({ index: 8, str: 'INSTANCE', attributeSlot: 8 });\nconst FaceNormal = new VertexAttributeClass({ index: 9, str: 'FACE_NORMAL', attributeSlot: 9 });\nconst BaryCentricCoord = new VertexAttributeClass({ index: 10, str: 'BARY_CENTRIC_COORD', attributeSlot: 10 });\nconst typeList = [Unknown, Position, Normal, Tangent, Texcoord0, Texcoord1, Color0, Joints0, Weights0, Instance, FaceNormal, BaryCentricCoord];\nfunction from(index) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nfunction fromString(str) {\n    return Object(_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_fromString\"])({ typeList, str });\n}\nconst VertexAttribute = Object.freeze({\n    Unknown, Position, Normal, Tangent, Texcoord0, Texcoord1, Color0, Joints0, Weights0, Instance, FaceNormal, BaryCentricCoord, from, fromString\n});\n\n\n//# sourceURL=webpack:///./src/foundation/definitions/VertexAttribute.ts?");

/***/ }),

/***/ "./src/foundation/exporter/Gltf2Exporter.ts":
/*!**************************************************!*\
  !*** ./src/foundation/exporter/Gltf2Exporter.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Gltf2Exporter; });\n/* harmony import */ var _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/EntityRepository */ \"./src/foundation/core/EntityRepository.ts\");\n/* harmony import */ var _components_MeshComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/MeshComponent */ \"./src/foundation/components/MeshComponent.ts\");\n/* harmony import */ var _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../definitions/ShaderSemantics */ \"./src/foundation/definitions/ShaderSemantics.ts\");\n/* harmony import */ var _textures_AbstractTexture__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../textures/AbstractTexture */ \"./src/foundation/textures/AbstractTexture.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n\n\n\n\n\nclass Gltf2Exporter {\n    constructor() {\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new Gltf2Exporter();\n        }\n        return this.__instance;\n    }\n    export(filename) {\n        const entities = Gltf2Exporter.__entityRepository._getEntities();\n        const json = {\n            \"asset\": {\n                \"version\": \"2.0\",\n                \"generator\": `Rhodonite (${window['Rn'].VERSION})`\n            }\n        };\n        const fileName = filename ? filename : 'Rhodonite_' + (new Date()).getTime();\n        json.buffers = [{\n                'uri': fileName + '.bin'\n            }];\n        json.bufferViews = [];\n        json.accessors = [];\n        json.materials = [{\n                \"pbrMetallicRoughness\": {\n                    \"baseColorFactor\": [\n                        1.0,\n                        1.0,\n                        1.0,\n                        1.0\n                    ]\n                }\n            }];\n        this.countMeshes(json, entities);\n        this.createNodes(json, entities);\n        this.createMeshBinaryMetaData(json, entities);\n        this.createMeshes(json, entities);\n        this.createMaterials(json, entities);\n        const arraybuffer = this.createWriteBinary(json, entities);\n        this.download(json, fileName, arraybuffer);\n    }\n    createWriteBinary(json, entities) {\n        const buffer = new ArrayBuffer(json.buffers[0].byteLength);\n        const dataView = new DataView(buffer);\n        for (let i = 0; i < json.accessors.length; i++) {\n            const accessor = json.accessors[i];\n            const rnAccessor = accessor.accessor;\n            const compositionType = rnAccessor.compositionType;\n            const componentType = rnAccessor.componentType;\n            const dataViewSetter = rnAccessor.getDataViewSetter(componentType);\n            const attributeCount = accessor.count;\n            const bufferview = json.bufferViews[accessor.bufferView];\n            const bufferViewByteOffset = bufferview.byteOffset;\n            for (let k = 0; k < attributeCount; k++) {\n                if (compositionType.getNumberOfComponents() === 1) {\n                    const byteIndex = componentType.getSizeInBytes() * k;\n                    const value = rnAccessor.getScalar(k, {});\n                    dataView[dataViewSetter](bufferViewByteOffset + byteIndex, value, true);\n                }\n                else if (compositionType.getNumberOfComponents() === 2) {\n                    const array = rnAccessor.getVec2AsArray(k, {});\n                    for (let l = 0; l < 2; l++) {\n                        dataView[dataViewSetter](bufferViewByteOffset + componentType.getSizeInBytes() * (k * 2 + l), array[l], true);\n                    }\n                }\n                else if (compositionType.getNumberOfComponents() === 3) {\n                    const array = rnAccessor.getVec3AsArray(k, {});\n                    for (let l = 0; l < 3; l++) {\n                        dataView[dataViewSetter](bufferViewByteOffset + componentType.getSizeInBytes() * (k * 3 + l), array[l], true);\n                    }\n                }\n                else if (compositionType.getNumberOfComponents() === 4) {\n                    const array = rnAccessor.getVec4AsArray(k, {});\n                    for (let l = 0; l < 4; l++) {\n                        dataView[dataViewSetter](bufferViewByteOffset + componentType.getSizeInBytes() * (k * 4 + l), array[l], true);\n                    }\n                }\n            }\n            accessor.accessor = void 0;\n        }\n        return buffer;\n    }\n    countMeshes(json, entities) {\n        let count = 0;\n        json.meshes = [];\n        for (let i = 0; i < entities.length; i++) {\n            const entity = entities[i];\n            const meshComponent = entity.getComponent(_components_MeshComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n            if (meshComponent) {\n                entity.gltfMeshIndex = count++;\n            }\n        }\n    }\n    createMeshes(json, entities) {\n        let count = 0;\n        json.meshes = [];\n        for (let i = 0; i < entities.length; i++) {\n            const entity = entities[i];\n            const meshComponent = entity.getComponent(_components_MeshComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n            if (meshComponent) {\n                json.meshes[count] = {};\n                const mesh = json.meshes[count];\n                mesh.primitives = [];\n                const primitiveCount = meshComponent.getPrimitiveNumber();\n                for (let j = 0; j < primitiveCount; j++) {\n                    mesh.primitives[j] = {};\n                    const primitive = mesh.primitives[j];\n                    const rnPrimitive = meshComponent.getPrimitiveAt(j);\n                    const indicesAccessor = rnPrimitive.indicesAccessor;\n                    if (indicesAccessor) {\n                        primitive.indices = indicesAccessor.gltfAccessorIndex;\n                        primitive.mode = rnPrimitive.primitiveMode.index;\n                    }\n                    const attributeAccessors = rnPrimitive.attributeAccessors;\n                    primitive.attributes = {};\n                    const attributes = primitive.attributes;\n                    for (let k = 0; k < attributeAccessors.length; k++) {\n                        const attributeAccessor = attributeAccessors[k];\n                        attributes[rnPrimitive.attributeSemantics[k].str] = attributeAccessor.gltfAccessorIndex;\n                    }\n                    primitive.material = 0;\n                }\n                entity.gltfMeshIndex = count++;\n            }\n        }\n    }\n    createMaterials(json, entities) {\n        let countMesh = 0;\n        let countMaterial = 0;\n        let countTexture = 0;\n        let countImage = 0;\n        json.materials = [];\n        json.textures = [];\n        json.samplers = [];\n        json.images = [];\n        json.samplers[0] = {\n            \"magFilter\": 9729,\n            \"minFilter\": 9987,\n            \"wrapS\": 10497,\n            \"wrapT\": 10497\n        };\n        for (let i = 0; i < entities.length; i++) {\n            const entity = entities[i];\n            const meshComponent = entity.getComponent(_components_MeshComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n            if (meshComponent) {\n                const mesh = json.meshes[countMesh++];\n                const primitiveCount = meshComponent.getPrimitiveNumber();\n                for (let j = 0; j < primitiveCount; j++) {\n                    const rnPrimitive = meshComponent.getPrimitiveAt(j);\n                    const primitive = mesh.primitives[j];\n                    const rnMaterial = rnPrimitive.material;\n                    let colorParam;\n                    let metallic = 1.0;\n                    let roughness = 1.0;\n                    if (rnMaterial != null) {\n                        colorParam = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].BaseColorFactor);\n                        if (colorParam == null) {\n                            colorParam = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].DiffuseColorFactor);\n                        }\n                        else {\n                            metallic = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].MetallicRoughnessFactor).x;\n                            roughness = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].MetallicRoughnessFactor).y;\n                        }\n                    }\n                    else {\n                        colorParam = new _math_Vector4__WEBPACK_IMPORTED_MODULE_4__[\"default\"](1, 1, 1, 1);\n                    }\n                    const material = {\n                        \"pbrMetallicRoughness\": {\n                            \"baseColorFactor\": Array.prototype.slice.call(colorParam.v),\n                            \"metallicFactor\": metallic,\n                            \"roughnessFactor\": roughness\n                        }\n                    };\n                    if (rnMaterial) {\n                        material.alphaMode = rnMaterial.alphaMode.str;\n                        const processTexture = (rnTexture) => {\n                            if (rnTexture && rnTexture.width !== 1 && rnTexture.height !== 1) {\n                                let imageIndex = countImage;\n                                let match = false;\n                                for (let k = 0; k < json.images.length; k++) {\n                                    const image = json.images[k];\n                                    if (image.uri === rnTexture.name) {\n                                        imageIndex = k;\n                                        match = true;\n                                    }\n                                }\n                                if (!match) {\n                                    json.images[countImage++] = {\n                                        uri: rnTexture.name\n                                    };\n                                    const htmlCanvasElement = rnTexture.htmlCanvasElement;\n                                    if (htmlCanvasElement) {\n                                        const blob = htmlCanvasElement.toBlob((blob) => {\n                                            var a = document.createElement('a');\n                                            const e = document.createEvent('MouseEvent');\n                                            e.initEvent(\"click\", true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n                                            a.href = URL.createObjectURL(blob);\n                                            a.download = rnTexture.name;\n                                            a.dispatchEvent(e);\n                                        });\n                                    }\n                                }\n                                json.textures[countTexture] = {\n                                    sampler: 0,\n                                    source: imageIndex\n                                };\n                                return countTexture++;\n                            }\n                        };\n                        let textureParam = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].BaseColorTexture);\n                        let rnTexture;\n                        let textureIndex;\n                        if (textureParam != null) {\n                            rnTexture = _textures_AbstractTexture__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getRhodoniteTexture(textureParam.y);\n                            textureIndex = processTexture(rnTexture);\n                            if (textureIndex != null) {\n                                material.pbrMetallicRoughness.baseColorTexture = { index: textureIndex };\n                            }\n                        }\n                        else {\n                            textureParam = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].DiffuseColorTexture);\n                            if (textureParam != null) {\n                                let rnTexture = _textures_AbstractTexture__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getRhodoniteTexture(textureParam.y);\n                                let textureIndex = processTexture(rnTexture);\n                                if (textureIndex != null) {\n                                    material.pbrMetallicRoughness.baseColorTexture = { index: textureIndex };\n                                }\n                            }\n                        }\n                        textureParam = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].MetallicRoughnessTexture);\n                        rnTexture = _textures_AbstractTexture__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getRhodoniteTexture(textureParam.y);\n                        textureIndex = processTexture(rnTexture);\n                        if (textureIndex != null) {\n                            material.pbrMetallicRoughness.metallicRoughnessTexture = { index: textureIndex };\n                        }\n                        textureParam = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].NormalTexture);\n                        rnTexture = _textures_AbstractTexture__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getRhodoniteTexture(textureParam.y);\n                        textureIndex = processTexture(rnTexture);\n                        if (textureIndex != null) {\n                            material.normalTexture = { index: textureIndex };\n                        }\n                        textureParam = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].OcclusionTexture);\n                        rnTexture = _textures_AbstractTexture__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getRhodoniteTexture(textureParam.y);\n                        textureIndex = processTexture(rnTexture);\n                        if (textureIndex != null) {\n                            material.occlusionTexture = { index: textureIndex };\n                        }\n                        textureParam = rnMaterial.getParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_2__[\"ShaderSemantics\"].EmissiveTexture);\n                        rnTexture = _textures_AbstractTexture__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getRhodoniteTexture(textureParam.y);\n                        textureIndex = processTexture(rnTexture);\n                        if (textureIndex != null) {\n                            material.emissiveTexture = { index: textureIndex };\n                        }\n                    }\n                    json.materials.push(material);\n                    primitive.material = countMaterial++;\n                }\n            }\n        }\n    }\n    createNodes(json, entities) {\n        json.nodes = [];\n        json.scenes = [{ 'nodes': [] }];\n        const scene = json.scenes[0];\n        const nodes = json.nodes;\n        for (let i = 0; i < entities.length; i++) {\n            const entity = entities[i];\n            entity.gltfNodeIndex = i;\n        }\n        for (let i = 0; i < entities.length; i++) {\n            const entity = entities[i];\n            nodes[i] = {};\n            const node = nodes[i];\n            // node.name\n            node.name = entity.uniqueName;\n            // node.children\n            node.children = [];\n            const sceneGraphComponent = entity.getSceneGraph();\n            const children = sceneGraphComponent.children;\n            for (let j = 0; j < children.length; j++) {\n                const child = children[j];\n                node.children.push(child.entity.gltfNodeIndex);\n            }\n            // matrix\n            node.matrix = Array.prototype.slice.call(entity.getTransform().matrix.v);\n            // mesh\n            node.mesh = entity.gltfMeshIndex;\n            if (sceneGraphComponent.parent == null) {\n                scene.nodes.push(i);\n            }\n        }\n    }\n    createMeshBinaryMetaData(json, entities) {\n        let count = 0;\n        let bufferByteLength = 0;\n        for (let i = 0; i < entities.length; i++) {\n            const entity = entities[i];\n            const meshComponent = entity.getComponent(_components_MeshComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n            if (meshComponent) {\n                const primitiveCount = meshComponent.getPrimitiveNumber();\n                for (let j = 0; j < primitiveCount; j++) {\n                    const primitive = meshComponent.getPrimitiveAt(j);\n                    const indicesAccessor = primitive.indicesAccessor;\n                    if (indicesAccessor) {\n                        // BufferView\n                        let match = false;\n                        for (let k = 0; k < json.bufferViews.length; k++) {\n                            const bufferview = json.bufferViews[k];\n                            if (bufferview.rnAccessor === indicesAccessor) {\n                                match = true;\n                                indicesAccessor.gltfAccessorIndex = k;\n                            }\n                        }\n                        if (!match) {\n                            json.bufferViews[count] = {};\n                            const bufferview = json.bufferViews[count];\n                            bufferview.rnAccessor = indicesAccessor;\n                            bufferview.buffer = 0;\n                            bufferview.byteLength = indicesAccessor.byteLength;\n                            bufferview.byteOffset = bufferByteLength;\n                            bufferview.target = 34963;\n                            // Accessor\n                            json.accessors[count] = {};\n                            const accessor = json.accessors[count];\n                            accessor.bufferView = count;\n                            accessor.byteOffset = 0; //indicesAccessor.byteOffsetInBufferView;\n                            accessor.componentType = 5123;\n                            accessor.count = indicesAccessor.elementCount;\n                            indicesAccessor.calcMinMax();\n                            accessor.max = [indicesAccessor.max];\n                            accessor.min = [indicesAccessor.min];\n                            accessor.type = 'SCALAR';\n                            bufferByteLength += indicesAccessor.byteLength;\n                            indicesAccessor.gltfAccessorIndex = count;\n                            count++;\n                            accessor.accessor = indicesAccessor;\n                        }\n                    }\n                    const attributeAccessors = primitive.attributeAccessors;\n                    for (let j = 0; j < attributeAccessors.length; j++) {\n                        const attributeAccessor = attributeAccessors[j];\n                        let match = false;\n                        for (let k = 0; k < json.bufferViews.length; k++) {\n                            const bufferview = json.bufferViews[k];\n                            if (bufferview.rnAccessor === attributeAccessor) {\n                                match = true;\n                                attributeAccessor.gltfAccessorIndex = k;\n                            }\n                        }\n                        if (!match) {\n                            // BufferView\n                            json.bufferViews[count] = {};\n                            const bufferview = json.bufferViews[count];\n                            bufferview.rnAccessor = attributeAccessor;\n                            bufferview.buffer = 0;\n                            bufferview.byteLength = attributeAccessors[j].byteLength;\n                            bufferview.byteOffset = bufferByteLength;\n                            bufferview.target = 34962;\n                            // Accessor\n                            json.accessors[count] = {};\n                            const accessor = json.accessors[count];\n                            accessor.bufferView = count;\n                            accessor.byteOffset = 0; //attributeAccessor.byteOffsetInBufferView;\n                            accessor.componentType = 5126;\n                            accessor.count = attributeAccessor.elementCount;\n                            attributeAccessor.calcMinMax();\n                            accessor.max = Array.prototype.slice.call(attributeAccessor.max);\n                            accessor.min = Array.prototype.slice.call(attributeAccessor.min);\n                            accessor.type = 'VEC' + accessor.max.length;\n                            bufferByteLength += attributeAccessor.byteLength;\n                            attributeAccessor.gltfAccessorIndex = count;\n                            count++;\n                            accessor.accessor = attributeAccessor;\n                        }\n                    }\n                }\n            }\n        }\n        json.bufferViews.forEach((bufferView) => {\n            bufferView.rnAccessor = void 0;\n        });\n        const buffer = json.buffers[0];\n        buffer.byteLength = bufferByteLength;\n    }\n    download(json, filename, arraybuffer) {\n        let a = document.createElement('a');\n        let e = document.createEvent('MouseEvent');\n        a.download = filename + '.gltf';\n        a.href = \"data:application/octet-stream,\" + encodeURIComponent(JSON.stringify(json));\n        e.initEvent(\"click\", true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n        a.dispatchEvent(e);\n        a = document.createElement('a');\n        e = document.createEvent('MouseEvent');\n        e.initEvent(\"click\", true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n        var blob = new Blob([arraybuffer], { type: \"octet/stream\" }), url = window.URL.createObjectURL(blob);\n        a.download = filename + '.bin';\n        a.href = url;\n        a.dispatchEvent(e);\n    }\n}\nGltf2Exporter.__entityRepository = _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n\n\n//# sourceURL=webpack:///./src/foundation/exporter/Gltf2Exporter.ts?");

/***/ }),

/***/ "./src/foundation/geometry/Primitive.ts":
/*!**********************************************!*\
  !*** ./src/foundation/geometry/Primitive.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Primitive; });\n/* harmony import */ var _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions/PrimitiveMode */ \"./src/foundation/definitions/PrimitiveMode.ts\");\n/* harmony import */ var _definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _core_Object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/Object */ \"./src/foundation/core/Object.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _core_MemoryManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _definitions_BufferUse__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _math_AABB__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../math/AABB */ \"./src/foundation/math/AABB.ts\");\n\n\n\n\n\n\n\n\nclass Primitive extends _core_Object__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    constructor(attributeAccessors, attributeSemantics, mode, material, indicesAccessor) {\n        super();\n        this.__primitiveUid = -1; // start ID from zero\n        this.__aabb = new _math_AABB__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n        this.__indices = indicesAccessor;\n        this.__attributes = attributeAccessors;\n        this.__attributeSemantics = attributeSemantics;\n        this.material = material;\n        this.__mode = mode;\n        this.__primitiveUid = Primitive.__primitiveCount++;\n        // if (Primitive.__headerAccessor == null) {\n        //   // primitive 0\n        //   // prim0.indices.byteOffset, prim0.indices.componentSizeInByte, prim0.indices.indicesLength, null\n        //   //   prim0.attrb0.byteOffset, prim0.attrib0.byteStride, prim0.attrib0.compopisionN, prim0.attrib0.componentSizeInByte\n        //   //   prim0.attrb1.byteOffset, prim0.attrib1.byteStride, prim0.attrib1.compopisionN, prim0.attrib1.componentSizeInByte\n        //   //   ...\n        //   //   prim0.attrb7.byteOffset, prim0.attrib7.byteStride, prim0.attrib7.compopisionN, prim0.attrib7.componentSizeInByte\n        //   // primitive 1\n        //   // prim1.indices.byteOffset, prim1.indices.componentSizeInByte, prim0.indices.indicesLength, null\n        //   //   prim1.attrb0.byteOffset, prim1.attrib0.byteStride, prim1.attrib0.compopisionN, prim1.attrib0.componentSizeInByte\n        //   //   prim1.attrb1.byteOffset, prim1.attrib1.byteStride, prim1.attrib1.compopisionN, prim1.attrib1.componentSizeInByte\n        //   //   ...\n        //   //   prim1.attrb7.byteOffset, prim1.attrib7.byteStride, prim1.attrib7.compopisionN, prim1.attrib7.componentSizeInByte\n        //   const buffer = MemoryManager.getInstance().getBuffer(BufferUse.UBOGeneric);\n        //   const bufferView = buffer.takeBufferView({byteLengthToNeed: ((1*4) + (8*4)) * 4/*byte*/ * Primitive.maxPrimitiveCount, byteStride: 64, isAoS:false });\n        //   Primitive.__headerAccessor = bufferView.takeAccessor(\n        //     {compositionType: CompositionType.Vec4, componentType: ComponentType.Float, count: 9 * Primitive.maxPrimitiveCount})\n        // }\n        // const attributeNumOfPrimitive = 1/*indices*/ + 8/*vertexAttributes*/;\n        // if (this.indicesAccessor != null) {\n        //   Primitive.__headerAccessor.setVec4(attributeNumOfPrimitive * this.__primitiveUid + 0 /* 0 means indices */,\n        //     this.indicesAccessor.byteOffsetInBuffer, this.indicesAccessor.componentSizeInBytes, this.indicesAccessor.byteLength / this.indicesAccessor.componentSizeInBytes, -1 );\n        // } else {\n        //   Primitive.__headerAccessor.setVec4(attributeNumOfPrimitive * this.__primitiveUid + 0 /* 0 means indices */, -1, -1, -1, -1 );\n        // }\n        // this.attributeAccessors.forEach((attributeAccessor, i)=>{\n        //   Primitive.__headerAccessor!.setVec4(attributeNumOfPrimitive * this.__primitiveUid + i,\n        //     attributeAccessor.byteOffsetInBuffer, attributeAccessor.byteStride, attributeAccessor.numberOfComponents, attributeAccessor.componentSizeInBytes);\n        // });\n    }\n    static get maxPrimitiveCount() {\n        return 500;\n    }\n    static get headerAccessor() {\n        return this.__headerAccessor;\n    }\n    static createPrimitive({ indices, attributeCompositionTypes, attributeSemantics, attributes, material, primitiveMode }) {\n        const buffer = _core_MemoryManager__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getInstance().getBuffer(_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_6__[\"BufferUse\"].GPUVertexData);\n        let indicesComponentType;\n        let indicesBufferView;\n        let indicesAccessor;\n        if (indices != null) {\n            indicesComponentType = _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_3__[\"ComponentType\"].fromTypedArray(indices);\n            indicesBufferView = buffer.takeBufferView({ byteLengthToNeed: indices.byteLength, byteStride: 0, isAoS: false });\n            indicesAccessor = indicesBufferView.takeAccessor({\n                compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_5__[\"CompositionType\"].Scalar,\n                componentType: indicesComponentType,\n                count: indices.byteLength / indicesComponentType.getSizeInBytes()\n            });\n            // copy indices\n            for (let i = 0; i < indices.byteLength / indicesAccessor.componentSizeInBytes; i++) {\n                indicesAccessor.setScalar(i, indices[i], {});\n            }\n        }\n        let sumOfAttributesByteSize = 0;\n        attributes.forEach(attribute => {\n            sumOfAttributesByteSize += attribute.byteLength;\n        });\n        const attributesBufferView = buffer.takeBufferView({ byteLengthToNeed: sumOfAttributesByteSize, byteStride: 0, isAoS: false });\n        const attributeAccessors = [];\n        const attributeComponentTypes = [];\n        attributes.forEach((attribute, i) => {\n            attributeComponentTypes[i] = _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_3__[\"ComponentType\"].fromTypedArray(attributes[i]);\n            const accessor = attributesBufferView.takeAccessor({\n                compositionType: attributeCompositionTypes[i],\n                componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_3__[\"ComponentType\"].fromTypedArray(attributes[i]),\n                count: attribute.byteLength / attributeCompositionTypes[i].getNumberOfComponents() / attributeComponentTypes[i].getSizeInBytes()\n            });\n            accessor.copyFromTypedArray(attribute);\n            attributeAccessors.push(accessor);\n        });\n        return new Primitive(attributeAccessors, attributeSemantics, primitiveMode, material, indicesAccessor);\n    }\n    get indicesAccessor() {\n        return this.__indices;\n    }\n    getVertexCountAsIndicesBased() {\n        if (this.indicesAccessor) {\n            return this.indicesAccessor.elementCount;\n        }\n        else {\n            return this.getVertexCountAsVerticesBased();\n        }\n    }\n    getVertexCountAsVerticesBased() {\n        const positionIdx = this.__attributeSemantics.indexOf(_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__[\"VertexAttribute\"].Position);\n        const positionAccessor = this.__attributes[positionIdx];\n        return positionAccessor.elementCount;\n    }\n    getTriangleCountAsIndicesBased() {\n        if (this.indicesAccessor) {\n            switch (this.__mode) {\n                case _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_0__[\"PrimitiveMode\"].Triangles:\n                    return this.indicesAccessor.elementCount / 3;\n                case _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_0__[\"PrimitiveMode\"].TriangleStrip:\n                    return this.indicesAccessor.elementCount - 2;\n                case _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_0__[\"PrimitiveMode\"].TriangleFan:\n                    return this.indicesAccessor.elementCount - 2;\n                default:\n                    return 0;\n            }\n        }\n        else {\n            return this.getTriangleCountAsVerticesBased();\n        }\n    }\n    getTriangleCountAsVerticesBased() {\n        const positionIdx = this.__attributeSemantics.indexOf(_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__[\"VertexAttribute\"].Position);\n        const positionAccessor = this.__attributes[positionIdx];\n        switch (this.__mode) {\n            case _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_0__[\"PrimitiveMode\"].Triangles:\n                return positionAccessor.elementCount / 3;\n            case _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_0__[\"PrimitiveMode\"].TriangleStrip:\n                return positionAccessor.elementCount - 2;\n            case _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_0__[\"PrimitiveMode\"].TriangleFan:\n                return positionAccessor.elementCount - 2;\n            default:\n                return 0;\n        }\n    }\n    hasIndices() {\n        return this.__indices != null;\n    }\n    get attributeAccessors() {\n        return this.__attributes.concat();\n    }\n    get attributeSemantics() {\n        return this.__attributeSemantics.concat();\n    }\n    get attributeCompositionTypes() {\n        return this.__attributes.map(attribute => { return attribute.compositionType; });\n    }\n    get attributeComponentTypes() {\n        return this.__attributes.map(attribute => { return attribute.componentType; });\n    }\n    get primitiveMode() {\n        return this.__mode;\n    }\n    get primitiveUid() {\n        return this.__primitiveUid;\n    }\n    get AABB() {\n        if (this.__aabb.isVanilla()) {\n            const positionIdx = this.__attributeSemantics.indexOf(_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__[\"VertexAttribute\"].Position);\n            const positionAccessor = this.__attributes[positionIdx];\n            if (positionAccessor.min == null || positionAccessor.max == null) {\n                positionAccessor.calcMinMax();\n            }\n            this.__aabb.minPoint = positionAccessor.min;\n            this.__aabb.maxPoint = positionAccessor.max;\n        }\n        return this.__aabb;\n    }\n    addVertexAttribute(accessor, vertexSemantics) {\n        this.__attributes.push(accessor);\n        this.__attributeSemantics.push(vertexSemantics);\n    }\n    setVertexAttributes(accessor, vertexSemantics) {\n        const index = this.__attributeSemantics.indexOf(vertexSemantics);\n        this.__attributes[index] = accessor;\n    }\n    removeIndices() {\n        this.__indices = undefined;\n    }\n    setIndices(accessor) {\n        this.__indices = accessor;\n    }\n}\nPrimitive.__primitiveCount = 0;\n\n\n//# sourceURL=webpack:///./src/foundation/geometry/Primitive.ts?");

/***/ }),

/***/ "./src/foundation/helpers/MaterialHelper.ts":
/*!**************************************************!*\
  !*** ./src/foundation/helpers/MaterialHelper.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _materials_Material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../materials/Material */ \"./src/foundation/materials/Material.ts\");\n/* harmony import */ var _materials_PbrShadingMaterialNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../materials/PbrShadingMaterialNode */ \"./src/foundation/materials/PbrShadingMaterialNode.ts\");\n/* harmony import */ var _materials_ClassicShadingMaterialNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../materials/ClassicShadingMaterialNode */ \"./src/foundation/materials/ClassicShadingMaterialNode.ts\");\n\n\n\nfunction createPbrUberMaterial() {\n    const material = new _materials_Material__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([new _materials_PbrShadingMaterialNode__WEBPACK_IMPORTED_MODULE_1__[\"default\"]]);\n    return material;\n}\nfunction createClassicUberMaterial() {\n    const material = new _materials_Material__WEBPACK_IMPORTED_MODULE_0__[\"default\"]([new _materials_ClassicShadingMaterialNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]]);\n    return material;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object.freeze({ createPbrUberMaterial, createClassicUberMaterial }));\n\n\n//# sourceURL=webpack:///./src/foundation/helpers/MaterialHelper.ts?");

/***/ }),

/***/ "./src/foundation/importer/Gltf1Importer.ts":
/*!**************************************************!*\
  !*** ./src/foundation/importer/Gltf1Importer.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Gltf1Importer; });\n/* harmony import */ var _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/DataUtil */ \"./src/foundation/misc/DataUtil.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nclass Gltf1Importer {\n    constructor() {\n    }\n    import(uri, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let defaultOptions = {\n                files: {\n                //        \"foo.gltf\": content of file as ArrayBuffer,\n                //        \"foo.bin\": content of file as ArrayBuffer,\n                //        \"boo.png\": content of file as ArrayBuffer\n                },\n                loaderExtension: null,\n                defaultShaderClass: null,\n                statesOfElements: [\n                    {\n                        targets: [],\n                        states: {\n                            enable: [\n                            // 3042,  // BLEND\n                            ],\n                            functions: {\n                            //\"blendFuncSeparate\": [1, 0, 1, 0],\n                            }\n                        },\n                        isTransparent: true,\n                        opacity: 1.0,\n                        isTextureImageToLoadPreMultipliedAlpha: false,\n                    }\n                ],\n                extendedJson: void 0 //   URI string / JSON Object / ArrayBuffer\n            };\n            if (options && options.files) {\n                for (let fileName in options.files) {\n                    const splitted = fileName.split('.');\n                    const fileExtension = splitted[splitted.length - 1];\n                    if (fileExtension === 'gltf' || fileExtension === 'glb') {\n                        return yield this.__loadFromArrayBuffer(options.files[fileName], options, defaultOptions, void 0);\n                    }\n                }\n            }\n            const response = yield fetch(uri);\n            const arrayBuffer = yield response.arrayBuffer();\n            return yield this.__loadFromArrayBuffer(arrayBuffer, options, defaultOptions, uri);\n        });\n    }\n    __loadFromArrayBuffer(arrayBuffer, options, defaultOptions, uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dataView = new DataView(arrayBuffer, 0, 20);\n            const isLittleEndian = true;\n            // Magic field\n            const magic = dataView.getUint32(0, isLittleEndian);\n            let result;\n            // 0x46546C67 is 'glTF' in ASCII codes.\n            if (magic !== 0x46546C67) {\n                //const json = await response.json();\n                const gotText = _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arrayBufferToString(arrayBuffer);\n                const json = JSON.parse(gotText);\n                result = yield this._loadAsTextJson(json, options, defaultOptions, uri);\n            }\n            else {\n                result = yield this._loadAsBinaryJson(dataView, isLittleEndian, arrayBuffer, options, defaultOptions, uri);\n            }\n            return result;\n        });\n    }\n    _getOptions(defaultOptions, json, options) {\n        if (json.asset && json.asset.extras && json.asset.extras.loadOptions) {\n            for (let optionName in json.asset.extras.loadOptions) {\n                defaultOptions[optionName] = json.asset.extras.loadOptions[optionName];\n            }\n        }\n        for (let optionName in options) {\n            defaultOptions[optionName] = options[optionName];\n        }\n        return defaultOptions;\n    }\n    _loadAsBinaryJson(dataView, isLittleEndian, arrayBuffer, options, defaultOptions, uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let gltfVer = dataView.getUint32(4, isLittleEndian);\n            if (gltfVer !== 2) {\n                throw new Error('invalid version field in this binary glTF file.');\n            }\n            let lengthOfThisFile = dataView.getUint32(8, isLittleEndian);\n            let lengthOfJSonChunkData = dataView.getUint32(12, isLittleEndian);\n            let chunkType = dataView.getUint32(16, isLittleEndian);\n            // 0x4E4F534A means JSON format (0x4E4F534A is 'JSON' in ASCII codes)\n            if (chunkType !== 0x4E4F534A) {\n                throw new Error('invalid chunkType of chunk0 in this binary glTF file.');\n            }\n            let arrayBufferJSonContent = arrayBuffer.slice(20, 20 + lengthOfJSonChunkData);\n            let gotText = _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arrayBufferToString(arrayBufferJSonContent);\n            let gltfJson = JSON.parse(gotText);\n            options = this._getOptions(defaultOptions, gltfJson, options);\n            let arrayBufferBinary = arrayBuffer.slice(20 + lengthOfJSonChunkData + 8);\n            let basePath = null;\n            if (uri) {\n                //Set the location of glb file as basePath\n                basePath = uri.substring(0, uri.lastIndexOf('/')) + '/';\n            }\n            if (gltfJson.asset.extras === undefined) {\n                gltfJson.asset.extras = {};\n            }\n            this._mergeExtendedJson(gltfJson, options.extendedJson);\n            gltfJson.asset.extras.basePath = basePath;\n            const result = yield this._loadInner(arrayBufferBinary, basePath, gltfJson, options);\n            return result[0][0];\n        });\n    }\n    _loadAsTextJson(gltfJson, options, defaultOptions, uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let basePath;\n            if (uri) {\n                //Set the location of gltf file as basePath\n                basePath = uri.substring(0, uri.lastIndexOf('/')) + '/';\n            }\n            if (gltfJson.asset.extras === undefined) {\n                gltfJson.asset.extras = {};\n            }\n            options = this._getOptions(defaultOptions, gltfJson, options);\n            this._mergeExtendedJson(gltfJson, options.extendedJson);\n            gltfJson.asset.extras.basePath = basePath;\n            const result = yield this._loadInner(undefined, basePath, gltfJson, options);\n            return result[0][0];\n        });\n    }\n    _loadInner(arrayBufferBinary, basePath, gltfJson, options) {\n        let promises = [];\n        let resources = {\n            shaders: [],\n            buffers: [],\n            images: []\n        };\n        promises.push(this._loadResources(arrayBufferBinary, basePath, gltfJson, options, resources));\n        promises.push(new Promise((resolve, reject) => {\n            this._loadJsonContent(gltfJson, options);\n            resolve();\n        }));\n        return Promise.all(promises);\n    }\n    _loadJsonContent(gltfJson, options) {\n        this._convertToGltf2LikeStructure(gltfJson);\n        // Scene\n        this._loadDependenciesOfScenes(gltfJson);\n        // Node\n        this._loadDependenciesOfNodes(gltfJson);\n        // Mesh\n        this._loadDependenciesOfMeshes(gltfJson);\n        // Material\n        this._loadDependenciesOfMaterials(gltfJson);\n        // Texture\n        this._loadDependenciesOfTextures(gltfJson);\n        // Joint\n        this._loadDependenciesOfJoints(gltfJson);\n        // Animation\n        this._loadDependenciesOfAnimations(gltfJson);\n        // Accessor\n        this._loadDependenciesOfAccessors(gltfJson);\n        // BufferView\n        this._loadDependenciesOfBufferViews(gltfJson);\n        if (gltfJson.asset === void 0) {\n            gltfJson.asset = {};\n        }\n        if (gltfJson.asset.extras === void 0) {\n            gltfJson.asset.extras = {};\n        }\n    }\n    _convertToGltf2LikeStructure(gltfJson) {\n        gltfJson.bufferDic = gltfJson.buffers;\n        gltfJson.buffers = [];\n        for (let bufferName in gltfJson.bufferDic) {\n            gltfJson.buffers.push(gltfJson.bufferDic[bufferName]);\n        }\n        gltfJson.sceneDic = gltfJson.scenes;\n        gltfJson.scenes = [];\n        for (let sceneName in gltfJson.sceneDic) {\n            gltfJson.scenes.push(gltfJson.sceneDic[sceneName]);\n        }\n        gltfJson.meshDic = gltfJson.meshes;\n        {\n            let count = 0;\n            gltfJson.nodeDic = gltfJson.nodes;\n            gltfJson.nodes = [];\n            gltfJson.nodesIndices = [];\n            for (let nodeName in gltfJson.nodeDic) {\n                gltfJson.nodesIndices.push(count);\n                const node = gltfJson.nodeDic[nodeName];\n                node._index = count++;\n                gltfJson.nodes.push(node);\n            }\n        }\n        gltfJson.skinDic = gltfJson.skins;\n        gltfJson.skins = [];\n        for (let skinName in gltfJson.skinDic) {\n            gltfJson.skins.push(gltfJson.skinDic[skinName]);\n        }\n        gltfJson.materialDic = gltfJson.materials;\n        gltfJson.cameraDic = gltfJson.cameras;\n        gltfJson.shaderDic = gltfJson.shaders;\n        gltfJson.imageDic = gltfJson.images;\n        gltfJson.animationDic = gltfJson.animations;\n        gltfJson.animations = [];\n        for (let animationName in gltfJson.animationDic) {\n            gltfJson.animations.push(gltfJson.animationDic[animationName]);\n        }\n        gltfJson.textureDic = gltfJson.textures;\n        gltfJson.samplerDic = gltfJson.samplers;\n        gltfJson.accessorDic = gltfJson.accessors;\n        gltfJson.bufferViewDic = gltfJson.bufferViews;\n    }\n    _loadDependenciesOfScenes(gltfJson) {\n        for (let sceneName in gltfJson.sceneDic) {\n            const scene = gltfJson.sceneDic[sceneName];\n            scene.nodeNames = scene.nodes;\n            scene.nodes = [];\n            scene.nodesIndices = [];\n            for (let name of scene.nodeNames) {\n                scene.nodes.push(gltfJson.nodeDic[name]);\n                // calc index of 'name' in gltfJson.nodeDic enumerate\n                let count = 0;\n                for (let nodeName in gltfJson.nodeDic) {\n                    if (nodeName === name) {\n                        break;\n                    }\n                    count++;\n                }\n                scene.nodesIndices.push(count);\n            }\n        }\n    }\n    _loadDependenciesOfNodes(gltfJson) {\n        for (let node of gltfJson.nodes) {\n            //const node = (gltfJson.nodeDic as any)[nodeName];\n            // Hierarchy\n            if (node.children) {\n                node.childrenNames = node.children.concat();\n                node.children = [];\n                node.childrenIndices = [];\n                for (let name of node.childrenNames) {\n                    const childNode = gltfJson.nodeDic[name];\n                    node.children.push(childNode);\n                    node.childrenIndices.push(childNode._index);\n                }\n            }\n            // Mesh\n            if (node.meshes !== void 0 && gltfJson.meshes !== void 0) {\n                node.meshNames = node.meshes;\n                node.meshes = [];\n                for (let name of node.meshNames) {\n                    node.meshes.push(gltfJson.meshDic[name]);\n                }\n                // node.mesh = node.meshes[2];\n                if (node.meshes == null || node.meshes.length === 0) {\n                    node.mesh = node.meshes[0];\n                }\n                else {\n                    for (let i = 0; i < node.meshes.length; i++) {\n                        const mesh = node.meshes[i];\n                        const childNode = {\n                            mesh: mesh,\n                            children: [],\n                            skin: node.skin,\n                            skeletons: node.skeletons.concat(),\n                            matrix: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\n                        };\n                        const childNodeIndex = gltfJson.nodes[gltfJson.nodes.length - 1]._index + 1;\n                        childNode._index = childNodeIndex;\n                        gltfJson.nodes.push(childNode);\n                        node.children.push(childNode);\n                        node.childrenIndices.push(childNode._index);\n                    }\n                    node.skeletons = void 0;\n                    node.skin = void 0;\n                    node.meshes = void 0;\n                    node.meshNames = void 0;\n                }\n            }\n            // Skin\n            if (node.skin !== void 0 && gltfJson.skins !== void 0) {\n                node.skinName = node.skin;\n                node.skin = gltfJson.skinDic[node.skinName];\n                // if (node.mesh.extras === void 0) {\n                //   node.mesh.extras = {};\n                // }\n                //node.mesh.extras._skin = node.skin;\n            }\n            // Camera\n            if (node.camera !== void 0 && gltfJson.cameras !== void 0) {\n                node.cameraName = node.camera;\n                node.camera = gltfJson.cameraDic[node.cameraName];\n            }\n        }\n    }\n    _loadDependenciesOfMeshes(gltfJson) {\n        // Mesh\n        for (let meshName in gltfJson.meshDic) {\n            const mesh = gltfJson.meshDic[meshName];\n            for (let primitive of mesh.primitives) {\n                if (primitive.material !== void 0) {\n                    primitive.materialName = primitive.material;\n                    primitive.material = gltfJson.materialDic[primitive.materialName];\n                }\n                primitive.attributeNames = Object.assign({}, primitive.attributes);\n                primitive.attributes = [];\n                for (let attributeName in primitive.attributeNames) {\n                    if (primitive.attributeNames[attributeName] != null) {\n                        const accessorName = primitive.attributeNames[attributeName];\n                        let accessor = gltfJson.accessorDic[accessorName];\n                        if (attributeName === 'JOINT') {\n                            attributeName = 'JOINTS_0';\n                            delete primitive.attributes['JOINT'];\n                        }\n                        else if (attributeName === 'WEIGHT') {\n                            attributeName = 'WEIGHTS_0';\n                            delete primitive.attributes['WEIGHT'];\n                        }\n                        accessor.extras = {\n                            toGetAsTypedArray: true,\n                            attributeName: attributeName\n                        };\n                        primitive.attributes.push(accessor);\n                    }\n                    else {\n                        //primitive.attributes[attributeName] = void 0;\n                    }\n                }\n                if (primitive.indices !== void 0) {\n                    primitive.indicesName = primitive.indices;\n                    primitive.indices = gltfJson.accessorDic[primitive.indicesName];\n                }\n            }\n        }\n    }\n    _isKHRMaterialsCommon(materialJson) {\n        if (typeof materialJson.extensions !== 'undefined' && typeof materialJson.extensions.KHR_materials_common !== 'undefined') {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    _loadDependenciesOfMaterials(gltfJson) {\n        // Material\n        if (gltfJson.materials) {\n            for (let materialStr in gltfJson.materials) {\n                let material = gltfJson.materials[materialStr];\n                if (this._isKHRMaterialsCommon(material)) {\n                    material = material.extensions.KHR_materials_common;\n                }\n                const setParameters = (values, isParameter) => {\n                    for (let valueName in values) {\n                        let value = null;\n                        if (isParameter) {\n                            value = values[valueName].value;\n                            if (typeof value === 'undefined') {\n                                continue;\n                            }\n                        }\n                        else {\n                            value = values[valueName];\n                        }\n                        if (typeof value === 'string') {\n                            let textureStr = value;\n                            let texturePurpose;\n                            if (valueName === 'diffuse' || (material.technique === \"CONSTANT\" && valueName === 'ambient')) {\n                                material.diffuseColorTexture = {};\n                                material.diffuseColorTexture.texture = gltfJson.textures[value];\n                            }\n                            else if (valueName === 'emission' && textureStr.match(/_normal$/)) {\n                                material.emissionTexure = {};\n                                material.emissionTexture.texture = gltfJson.textures[value];\n                            }\n                            else {\n                            }\n                        }\n                        else {\n                            if (valueName === 'diffuse') {\n                                material.diffuseColorFactor = value;\n                            }\n                        }\n                    }\n                };\n                setParameters(material.values, false);\n                if (material.technique && gltfJson.techniques) {\n                    if (typeof gltfJson.techniques[material.technique] !== \"undefined\") {\n                        setParameters(gltfJson.techniques[material.technique].parameters, true);\n                    }\n                }\n            }\n        }\n    }\n    _loadDependenciesOfTextures(gltfJson) {\n        // Texture\n        if (gltfJson.textures) {\n            for (let textureName in gltfJson.textureDic) {\n                const texture = gltfJson.textureDic[textureName];\n                if (texture.sampler !== void 0) {\n                    texture.samplerName = texture.sampler;\n                    texture.sampler = gltfJson.samplerDic[texture.samplerName];\n                }\n                if (texture.source !== void 0) {\n                    texture.sourceName = texture.source;\n                    texture.image = gltfJson.imageDic[texture.sourceName];\n                }\n            }\n        }\n    }\n    _loadDependenciesOfJoints(gltfJson) {\n        if (gltfJson.skins) {\n            for (let skinName in gltfJson.skinDic) {\n                const skin = gltfJson.skinDic[skinName];\n                skin.joints = [];\n                skin.jointsIndices = [];\n                for (let jointName of skin.jointNames) {\n                    const joint = gltfJson.nodeDic[jointName];\n                    skin.joints.push(joint);\n                    skin.jointsIndices.push(joint._index);\n                }\n                skin.skeletonNames = skin.skeletons;\n                if (skin.skeletonNames) {\n                    for (let name of skin.skeletonNames) {\n                        skin.skeleton = skin.skeletons.push(gltfJson.nodeDic[name]);\n                    }\n                }\n                else {\n                    skin.skeleton = skin.joints[0];\n                }\n                skin.skeletonIndex = skin.skeleton._index;\n                skin.inverseBindMatricesName = skin.inverseBindMatrices;\n                skin.inverseBindMatrices = gltfJson.accessorDic[skin.inverseBindMatricesName];\n                skin.joints_tmp = skin.joints;\n                skin.joints = [];\n                for (let joint of skin.joints_tmp) {\n                    skin.joints.push(gltfJson.nodeDic[joint.name]);\n                }\n                skin.joints_tmp = void 0;\n            }\n        }\n    }\n    _loadDependenciesOfAnimations(gltfJson) {\n        if (gltfJson.animations) {\n            for (let animationName in gltfJson.animationDic) {\n                const animation = gltfJson.animationDic[animationName];\n                animation.samplerDic = animation.samplers;\n                animation.samplers = [];\n                for (let channel of animation.channels) {\n                    channel.sampler = animation.samplerDic[channel.sampler];\n                    channel.target.node = gltfJson.nodeDic[channel.target.id];\n                    channel.target.nodeIndex = channel.target.node._index;\n                    channel.sampler.input = gltfJson.accessors[animation.parameters['TIME']];\n                    channel.sampler.output = gltfJson.accessors[animation.parameters[channel.target.path]];\n                    animation.samplers.push(channel.sampler);\n                    if (channel.target.path === 'rotation') {\n                        if (channel.sampler.output.extras === void 0) {\n                            channel.sampler.output.extras = {};\n                        }\n                        channel.sampler.output.extras.quaternionIfVec4 = true;\n                    }\n                }\n                animation.channelDic = animation.channels;\n                animation.channels = [];\n                for (let channel of animation.channelDic) {\n                    animation.channels.push(channel);\n                }\n            }\n        }\n    }\n    _loadDependenciesOfAccessors(gltfJson) {\n        // Accessor\n        for (let accessorName in gltfJson.accessorDic) {\n            const accessor = gltfJson.accessorDic[accessorName];\n            if (accessor.bufferView !== void 0) {\n                accessor.bufferViewName = accessor.bufferView;\n                accessor.bufferView = gltfJson.bufferViewDic[accessor.bufferViewName];\n            }\n        }\n    }\n    _loadDependenciesOfBufferViews(gltfJson) {\n        // BufferView\n        for (let bufferViewName in gltfJson.bufferViewDic) {\n            const bufferView = gltfJson.bufferViewDic[bufferViewName];\n            if (bufferView.buffer !== void 0) {\n                bufferView.bufferName = bufferView.buffer;\n                bufferView.buffer = gltfJson.bufferDic[bufferView.bufferName];\n            }\n        }\n    }\n    _mergeExtendedJson(gltfJson, extendedData) {\n        let extendedJson = null;\n        if (extendedData instanceof ArrayBuffer) {\n            const extendedJsonStr = _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arrayBufferToString(extendedData);\n            extendedJson = JSON.parse(extendedJsonStr);\n        }\n        else if (typeof extendedData === 'string') {\n            extendedJson = JSON.parse(extendedData);\n            extendedJson = extendedJson;\n        }\n        else if (typeof extendedData === 'object') {\n            extendedJson = extendedData;\n        }\n        else {\n        }\n        Object.assign(gltfJson, extendedJson);\n    }\n    _loadResources(arrayBufferBinary, basePath, gltfJson, options, resources) {\n        let promisesToLoadResources = [];\n        // Shaders Async load\n        // for (let _i in gltfJson.shaders) {\n        //   const i = _i as any as number;\n        //   resources.shaders[i] = {};\n        //   let shaderJson = gltfJson.shaders[i];\n        //   let shaderType = shaderJson.type;\n        //   if (typeof shaderJson.extensions !== 'undefined' && typeof shaderJson.extensions.KHR_binary_glTF !== 'undefined') {\n        //     resources.shaders[i].shaderText = this._accessBinaryAsShader(shaderJson.extensions.KHR_binary_glTF.bufferView, gltfJson, arrayBufferBinary);\n        //     resources.shaders[i].shaderType = shaderType;\n        //     continue;\n        //   }\n        //   let shaderUri = shaderJson.uri;\n        //   if (options.files) {\n        //     const splitted = shaderUri.split('/');\n        //     const filename = splitted[splitted.length - 1];\n        //     if (options.files[filename]) {\n        //       const arrayBuffer = options.files[filename];\n        //       resources.shaders[i].shaderText = DataUtil.arrayBufferToString(arrayBuffer);\n        //       resources.shaders[i].shaderType = shaderType;\n        //       continue;\n        //     }\n        //   }\n        //   if (shaderUri.match(/^data:/)) {\n        //     promisesToLoadResources.push(\n        //       new Promise((resolve, rejected) => {\n        //         let arrayBuffer = DataUtil.base64ToArrayBuffer(shaderUri);\n        //         resources.shaders[i].shaderText = DataUtil.arrayBufferToString(arrayBuffer);\n        //         resources.shaders[i].shaderType = shaderType;\n        //         resolve();\n        //       })\n        //     );\n        //   } else {\n        //     shaderUri = basePath + shaderUri;\n        //     promisesToLoadResources.push(\n        //       DataUtil.loadResourceAsync(shaderUri, false,\n        //         (resolve:Function, response:any)=>{\n        //           resources.shaders[i].shaderText = response;\n        //           resources.shaders[i].shaderType = shaderType;\n        //           resolve(gltfJson);\n        //         },\n        //         (reject:Function, error:any)=>{\n        //         }\n        //       )\n        //     );\n        //   }\n        // }\n        // Buffers Async load\n        for (let i in gltfJson.buffers) {\n            let bufferInfo = gltfJson.buffers[i];\n            let splitted;\n            let filename;\n            if (bufferInfo.uri) {\n                splitted = bufferInfo.uri.split('/');\n                filename = splitted[splitted.length - 1];\n            }\n            if (typeof bufferInfo.uri === 'undefined') {\n                promisesToLoadResources.push(new Promise((resolve, rejected) => {\n                    resources.buffers[i] = arrayBufferBinary;\n                    bufferInfo.buffer = arrayBufferBinary;\n                    resolve(gltfJson);\n                }));\n            }\n            else if (bufferInfo.uri.match(/^data:application\\/(.*);base64,/)) {\n                promisesToLoadResources.push(new Promise((resolve, rejected) => {\n                    let arrayBuffer = _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].base64ToArrayBuffer(bufferInfo.uri);\n                    resources.buffers[i] = arrayBuffer;\n                    bufferInfo.buffer = arrayBuffer;\n                    resolve(gltfJson);\n                }));\n            }\n            else if (options.files && options.files[filename]) {\n                promisesToLoadResources.push(new Promise((resolve, rejected) => {\n                    const arrayBuffer = options.files[filename];\n                    resources.buffers[i] = arrayBuffer;\n                    bufferInfo.buffer = arrayBuffer;\n                    resolve(gltfJson);\n                }));\n            }\n            else {\n                promisesToLoadResources.push(_misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].loadResourceAsync(basePath + bufferInfo.uri, true, (resolve, response) => {\n                    resources.buffers[i] = response;\n                    bufferInfo.buffer = response;\n                    resolve(gltfJson);\n                }, (reject, error) => {\n                }));\n            }\n        }\n        // Textures Async load\n        for (let _i in gltfJson.images) {\n            const i = _i;\n            let imageJson = gltfJson.images[i];\n            //let imageJson = gltfJson.images[textureJson.source];\n            //let samplerJson = gltfJson.samplers[textureJson.sampler];\n            let imageUri;\n            if (typeof imageJson.uri === 'undefined') {\n                imageUri = this._accessBinaryAsImage(imageJson.bufferView, gltfJson, arrayBufferBinary, imageJson.mimeType);\n            }\n            else {\n                let imageFileStr = imageJson.uri;\n                const splitted = imageFileStr.split('/');\n                const filename = splitted[splitted.length - 1];\n                if (options.files && options.files[filename]) {\n                    const arrayBuffer = options.files[filename];\n                    const splitted = filename.split('.');\n                    const fileExtension = splitted[splitted.length - 1];\n                    imageUri = this._accessArrayBufferAsImage(arrayBuffer, fileExtension);\n                }\n                else if (imageFileStr.match(/^data:/)) {\n                    imageUri = imageFileStr;\n                }\n                else {\n                    imageUri = basePath + imageFileStr;\n                }\n            }\n            // if (options.extensionLoader && options.extensionLoader.setUVTransformToTexture) {\n            //   options.extensionLoader.setUVTransformToTexture(texture, samplerJson);\n            // }\n            promisesToLoadResources.push(new Promise((resolve, reject) => {\n                let img = new Image();\n                img.crossOrigin = 'Anonymous';\n                img.src = imageUri;\n                imageJson.image = img;\n                if (imageUri.match(/^data:/)) {\n                    resolve(gltfJson);\n                }\n                else {\n                    const load = (img, response) => {\n                        var bytes = new Uint8Array(response);\n                        var binaryData = \"\";\n                        for (var i = 0, len = bytes.byteLength; i < len; i++) {\n                            binaryData += String.fromCharCode(bytes[i]);\n                        }\n                        const split = imageUri.split('.');\n                        let ext = split[split.length - 1];\n                        img.src = this._getImageType(ext) + window.btoa(binaryData);\n                        img.onload = () => {\n                            resolve(gltfJson);\n                        };\n                    };\n                    const loadBinaryImage = () => {\n                        var xhr = new XMLHttpRequest();\n                        xhr.onreadystatechange = (function (_img) {\n                            return function () {\n                                if (xhr.readyState == 4 && xhr.status == 200) {\n                                    load(_img, xhr.response);\n                                }\n                            };\n                        })(img);\n                        xhr.open('GET', imageUri);\n                        xhr.responseType = 'arraybuffer';\n                        xhr.send();\n                    };\n                    loadBinaryImage();\n                }\n                resources.images[i] = img;\n            }));\n        }\n        return Promise.all(promisesToLoadResources);\n    }\n    _accessBinaryAsImage(bufferViewStr, json, arrayBuffer, mimeType) {\n        let arrayBufferSliced = this._sliceBufferViewToArrayBuffer(json, bufferViewStr, arrayBuffer);\n        return this._accessArrayBufferAsImage(arrayBufferSliced, mimeType);\n    }\n    _sliceBufferViewToArrayBuffer(json, bufferViewStr, arrayBuffer) {\n        let bufferViewJson = json.bufferViews[bufferViewStr];\n        let byteOffset = (bufferViewJson.byteOffset != null) ? bufferViewJson.byteOffset : 0;\n        let byteLength = bufferViewJson.byteLength;\n        let arrayBufferSliced = arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n        return arrayBufferSliced;\n    }\n    _accessArrayBufferAsImage(arrayBuffer, imageType) {\n        let bytes = new Uint8Array(arrayBuffer);\n        let binaryData = '';\n        for (let i = 0, len = bytes.byteLength; i < len; i++) {\n            binaryData += String.fromCharCode(bytes[i]);\n        }\n        let imgSrc = this._getImageType(imageType);\n        let dataUrl = imgSrc + _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].btoa(binaryData);\n        return dataUrl;\n    }\n    _getImageType(imageType) {\n        let imgSrc = null;\n        if (imageType === 'image/jpeg' || imageType.toLowerCase() === 'jpg' || imageType.toLowerCase() === 'jpeg') {\n            imgSrc = \"data:image/jpeg;base64,\";\n        }\n        else if (imageType == 'image/png' || imageType.toLowerCase() === 'png') {\n            imgSrc = \"data:image/png;base64,\";\n        }\n        else if (imageType == 'image/gif' || imageType.toLowerCase() === 'gif') {\n            imgSrc = \"data:image/gif;base64,\";\n        }\n        else if (imageType == 'image/bmp' || imageType.toLowerCase() === 'bmp') {\n            imgSrc = \"data:image/bmp;base64,\";\n        }\n        else {\n            imgSrc = \"data:image/unknown;base64,\";\n        }\n        return imgSrc;\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new Gltf1Importer();\n        }\n        return this.__instance;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/importer/Gltf1Importer.ts?");

/***/ }),

/***/ "./src/foundation/importer/Gltf2Importer.ts":
/*!**************************************************!*\
  !*** ./src/foundation/importer/Gltf2Importer.ts ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Gltf2Importer; });\n/* harmony import */ var _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/DataUtil */ \"./src/foundation/misc/DataUtil.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nclass Gltf2Importer {\n    constructor() {\n    }\n    import(uri, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let defaultOptions = {\n                files: {\n                //        \"foo.gltf\": content of file as ArrayBuffer,\n                //        \"foo.bin\": content of file as ArrayBuffer,\n                //        \"boo.png\": content of file as ArrayBuffer\n                },\n                loaderExtension: null,\n                defaultShaderClass: null,\n                statesOfElements: [\n                    {\n                        targets: [],\n                        states: {\n                            enable: [\n                            // 3042,  // BLEND\n                            ],\n                            functions: {\n                            //\"blendFuncSeparate\": [1, 0, 1, 0],\n                            }\n                        },\n                        isTransparent: true,\n                        opacity: 1.0,\n                        isTextureImageToLoadPreMultipliedAlpha: false,\n                    }\n                ],\n                extendedJson: void 0 //   URI string / JSON Object / ArrayBuffer\n            };\n            if (options && options.files) {\n                for (let fileName in options.files) {\n                    const splitted = fileName.split('.');\n                    const fileExtension = splitted[splitted.length - 1];\n                    if (fileExtension === 'gltf' || fileExtension === 'glb') {\n                        return yield this.__loadFromArrayBuffer(options.files[fileName], options, defaultOptions, void 0).catch((err) => {\n                            console.log('this.__loadFromArrayBuffer error', err);\n                        });\n                    }\n                }\n            }\n            let response;\n            try {\n                response = yield fetch(uri);\n            }\n            catch (err) {\n                console.log('this.__loadFromArrayBuffer', err);\n            }\n            ;\n            const arrayBuffer = yield response.arrayBuffer();\n            return yield this.__loadFromArrayBuffer(arrayBuffer, options, defaultOptions, uri).catch((err) => {\n                console.log('this.__loadFromArrayBuffer error', err);\n            });\n            ;\n        });\n    }\n    __loadFromArrayBuffer(arrayBuffer, options, defaultOptions, uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dataView = new DataView(arrayBuffer, 0, 20);\n            const isLittleEndian = true;\n            // Magic field\n            const magic = dataView.getUint32(0, isLittleEndian);\n            let result;\n            // 0x46546C67 is 'glTF' in ASCII codes.\n            if (magic !== 0x46546C67) {\n                //const json = await response.json();\n                const gotText = _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arrayBufferToString(arrayBuffer);\n                const json = JSON.parse(gotText);\n                result = yield this._loadAsTextJson(json, options, defaultOptions, uri).catch((err) => {\n                    console.log('this.__loadAsTextJson error', err);\n                });\n            }\n            else {\n                result = yield this._loadAsBinaryJson(dataView, isLittleEndian, arrayBuffer, options, defaultOptions, uri).catch((err) => {\n                    console.log('this.__loadAsBinaryJson error', err);\n                });\n            }\n            return result;\n        });\n    }\n    _getOptions(defaultOptions, json, options) {\n        if (json.asset && json.asset.extras && json.asset.extras.loadOptions) {\n            for (let optionName in json.asset.extras.loadOptions) {\n                defaultOptions[optionName] = json.asset.extras.loadOptions[optionName];\n            }\n        }\n        for (let optionName in options) {\n            defaultOptions[optionName] = options[optionName];\n        }\n        return defaultOptions;\n    }\n    _loadAsBinaryJson(dataView, isLittleEndian, arrayBuffer, options, defaultOptions, uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let gltfVer = dataView.getUint32(4, isLittleEndian);\n            if (gltfVer !== 2) {\n                throw new Error('invalid version field in this binary glTF file.');\n            }\n            let lengthOfThisFile = dataView.getUint32(8, isLittleEndian);\n            let lengthOfJSonChunkData = dataView.getUint32(12, isLittleEndian);\n            let chunkType = dataView.getUint32(16, isLittleEndian);\n            // 0x4E4F534A means JSON format (0x4E4F534A is 'JSON' in ASCII codes)\n            if (chunkType !== 0x4E4F534A) {\n                throw new Error('invalid chunkType of chunk0 in this binary glTF file.');\n            }\n            let arrayBufferJSonContent = arrayBuffer.slice(20, 20 + lengthOfJSonChunkData);\n            let gotText = _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arrayBufferToString(arrayBufferJSonContent);\n            let gltfJson = JSON.parse(gotText);\n            options = this._getOptions(defaultOptions, gltfJson, options);\n            let arrayBufferBinary = arrayBuffer.slice(20 + lengthOfJSonChunkData + 8);\n            let basePath = null;\n            if (uri) {\n                //Set the location of glb file as basePath\n                basePath = uri.substring(0, uri.lastIndexOf('/')) + '/';\n            }\n            if (gltfJson.asset.extras === undefined) {\n                gltfJson.asset.extras = {};\n            }\n            this._mergeExtendedJson(gltfJson, options.extendedJson);\n            gltfJson.asset.extras.basePath = basePath;\n            let result;\n            try {\n                result = yield this._loadInner(arrayBufferBinary, basePath, gltfJson, options);\n            }\n            catch (err) {\n                console.log(\"this._loadInner error in _loadAsBinaryJson\", err);\n            }\n            return result[0][0];\n        });\n    }\n    _loadAsTextJson(gltfJson, options, defaultOptions, uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let basePath;\n            if (uri) {\n                //Set the location of gltf file as basePath\n                basePath = uri.substring(0, uri.lastIndexOf('/')) + '/';\n            }\n            if (gltfJson.asset.extras === undefined) {\n                gltfJson.asset.extras = {};\n            }\n            options = this._getOptions(defaultOptions, gltfJson, options);\n            this._mergeExtendedJson(gltfJson, options.extendedJson);\n            gltfJson.asset.extras.basePath = basePath;\n            let result;\n            try {\n                result = yield this._loadInner(undefined, basePath, gltfJson, options);\n            }\n            catch (err) {\n                console.log('this._loadInner error in _loadAsTextJson', err);\n            }\n            return result[0][0];\n        });\n    }\n    _loadInner(arrayBufferBinary, basePath, gltfJson, options) {\n        let promises = [];\n        let resources = {\n            shaders: [],\n            buffers: [],\n            images: []\n        };\n        promises.push(this._loadResources(arrayBufferBinary, basePath, gltfJson, options, resources));\n        promises.push(new Promise((resolve, reject) => {\n            this._loadJsonContent(gltfJson, options);\n            resolve();\n        }));\n        return Promise.all(promises);\n    }\n    _loadJsonContent(gltfJson, options) {\n        // Scene\n        this._loadDependenciesOfScenes(gltfJson);\n        // Node\n        this._loadDependenciesOfNodes(gltfJson);\n        // Mesh\n        this._loadDependenciesOfMeshes(gltfJson);\n        // Material\n        this._loadDependenciesOfMaterials(gltfJson);\n        // Texture\n        this._loadDependenciesOfTextures(gltfJson);\n        // Joint\n        this._loadDependenciesOfJoints(gltfJson);\n        // Animation\n        this._loadDependenciesOfAnimations(gltfJson);\n        // Accessor\n        this._loadDependenciesOfAccessors(gltfJson);\n        // BufferView\n        this._loadDependenciesOfBufferViews(gltfJson);\n        if (gltfJson.asset === void 0) {\n            gltfJson.asset = {};\n        }\n        if (gltfJson.asset.extras === void 0) {\n            gltfJson.asset.extras = {};\n        }\n    }\n    _loadDependenciesOfScenes(gltfJson) {\n        for (let scene of gltfJson.scenes) {\n            scene.nodesIndices = scene.nodes.concat();\n            for (let i in scene.nodesIndices) {\n                scene.nodes[i] = gltfJson.nodes[scene.nodes[i]];\n            }\n        }\n    }\n    _loadDependenciesOfNodes(gltfJson) {\n        for (let node of gltfJson.nodes) {\n            // Hierarchy\n            if (node.children) {\n                node.childrenIndices = node.children.concat();\n                node.children = [];\n                for (let i in node.childrenIndices) {\n                    node.children[i] = gltfJson.nodes[node.childrenIndices[i]];\n                }\n            }\n            // Mesh\n            if (node.mesh !== void 0 && gltfJson.meshes !== void 0) {\n                node.meshIndex = node.mesh;\n                node.mesh = gltfJson.meshes[node.meshIndex];\n            }\n            // Skin\n            if (node.skin !== void 0 && gltfJson.skins !== void 0) {\n                node.skinIndex = node.skin;\n                node.skin = gltfJson.skins[node.skinIndex];\n                if (node.mesh.extras === void 0) {\n                    node.mesh.extras = {};\n                }\n                node.mesh.extras._skin = node.skin;\n            }\n            // Camera\n            if (node.camera !== void 0 && gltfJson.cameras !== void 0) {\n                node.cameraIndex = node.camera;\n                node.camera = gltfJson.cameras[node.cameraIndex];\n            }\n        }\n    }\n    _loadDependenciesOfMeshes(gltfJson) {\n        // Mesh\n        for (let mesh of gltfJson.meshes) {\n            for (let primitive of mesh.primitives) {\n                if (primitive.material !== void 0) {\n                    primitive.materialIndex = primitive.material;\n                    primitive.material = gltfJson.materials[primitive.materialIndex];\n                }\n                primitive.attributesindex = Object.assign({}, primitive.attributes);\n                for (let attributeName in primitive.attributesindex) {\n                    if (primitive.attributesindex[attributeName] >= 0) {\n                        let accessor = gltfJson.accessors[primitive.attributesindex[attributeName]];\n                        accessor.extras = {\n                            toGetAsTypedArray: true,\n                            attributeName: attributeName\n                        };\n                        primitive.attributes[attributeName] = accessor;\n                    }\n                    else {\n                        primitive.attributes[attributeName] = void 0;\n                    }\n                }\n                if (primitive.indices !== void 0) {\n                    primitive.indicesIndex = primitive.indices;\n                    primitive.indices = gltfJson.accessors[primitive.indicesIndex];\n                }\n            }\n        }\n    }\n    _loadDependenciesOfMaterials(gltfJson) {\n        // Material\n        if (gltfJson.materials) {\n            for (let material of gltfJson.materials) {\n                if (material.pbrMetallicRoughness) {\n                    let baseColorTexture = material.pbrMetallicRoughness.baseColorTexture;\n                    if (baseColorTexture !== void 0) {\n                        baseColorTexture.texture = gltfJson.textures[baseColorTexture.index];\n                    }\n                    let metallicRoughnessTexture = material.pbrMetallicRoughness.metallicRoughnessTexture;\n                    if (metallicRoughnessTexture !== void 0) {\n                        metallicRoughnessTexture.texture = gltfJson.textures[metallicRoughnessTexture.index];\n                    }\n                }\n                let normalTexture = material.normalTexture;\n                if (normalTexture !== void 0) {\n                    normalTexture.texture = gltfJson.textures[normalTexture.index];\n                }\n                const occlusionTexture = material.occlusionTexture;\n                if (occlusionTexture !== void 0) {\n                    occlusionTexture.texture = gltfJson.textures[occlusionTexture.index];\n                }\n                const emissiveTexture = material.emissiveTexture;\n                if (emissiveTexture !== void 0) {\n                    emissiveTexture.texture = gltfJson.textures[emissiveTexture.index];\n                }\n            }\n        }\n    }\n    _loadDependenciesOfTextures(gltfJson) {\n        // Texture\n        if (gltfJson.textures) {\n            for (let texture of gltfJson.textures) {\n                if (texture.sampler !== void 0) {\n                    texture.samplerIndex = texture.sampler;\n                    texture.sampler = gltfJson.samplers[texture.samplerIndex];\n                }\n                if (texture.source !== void 0) {\n                    texture.sourceIndex = texture.source;\n                    texture.image = gltfJson.images[texture.sourceIndex];\n                }\n            }\n        }\n    }\n    _loadDependenciesOfJoints(gltfJson) {\n        if (gltfJson.skins) {\n            for (let skin of gltfJson.skins) {\n                skin.skeletonIndex = skin.skeleton;\n                skin.skeleton = gltfJson.nodes[skin.skeletonIndex];\n                skin.inverseBindMatricesIndex = skin.inverseBindMatrices;\n                skin.inverseBindMatrices = gltfJson.accessors[skin.inverseBindMatricesIndex];\n                skin.jointsIndices = skin.joints;\n                skin.joints = [];\n                for (let jointIndex of skin.jointsIndices) {\n                    skin.joints.push(gltfJson.nodes[jointIndex]);\n                }\n            }\n        }\n    }\n    _loadDependenciesOfAnimations(gltfJson) {\n        if (gltfJson.animations) {\n            for (let animation of gltfJson.animations) {\n                for (let channel of animation.channels) {\n                    channel.samplerIndex = channel.sampler;\n                    channel.sampler = animation.samplers[channel.samplerIndex];\n                    channel.target.nodeIndex = channel.target.node;\n                    channel.target.node = gltfJson.nodes[channel.target.nodeIndex];\n                }\n                for (let channel of animation.channels) {\n                    channel.sampler.inputIndex = channel.sampler.input;\n                    channel.sampler.outputIndex = channel.sampler.output;\n                    channel.sampler.input = gltfJson.accessors[channel.sampler.inputIndex];\n                    channel.sampler.output = gltfJson.accessors[channel.sampler.outputIndex];\n                    if (channel.target.path === 'rotation') {\n                        if (channel.sampler.output.extras === void 0) {\n                            channel.sampler.output.extras = {};\n                        }\n                        channel.sampler.output.extras.quaternionIfVec4 = true;\n                    }\n                }\n            }\n        }\n    }\n    _loadDependenciesOfAccessors(gltfJson) {\n        // Accessor\n        for (let accessor of gltfJson.accessors) {\n            if (accessor.bufferView !== void 0) {\n                accessor.bufferViewIndex = accessor.bufferView;\n                accessor.bufferView = gltfJson.bufferViews[accessor.bufferViewIndex];\n            }\n        }\n    }\n    _loadDependenciesOfBufferViews(gltfJson) {\n        // BufferView\n        for (let bufferView of gltfJson.bufferViews) {\n            if (bufferView.buffer !== void 0) {\n                bufferView.bufferIndex = bufferView.buffer;\n                bufferView.buffer = gltfJson.buffers[bufferView.bufferIndex];\n            }\n        }\n    }\n    _mergeExtendedJson(gltfJson, extendedData) {\n        let extendedJson = null;\n        if (extendedData instanceof ArrayBuffer) {\n            const extendedJsonStr = _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arrayBufferToString(extendedData);\n            extendedJson = JSON.parse(extendedJsonStr);\n        }\n        else if (typeof extendedData === 'string') {\n            extendedJson = JSON.parse(extendedData);\n            extendedJson = extendedJson;\n        }\n        else if (typeof extendedData === 'object') {\n            extendedJson = extendedData;\n        }\n        else {\n        }\n        Object.assign(gltfJson, extendedJson);\n    }\n    _loadResources(arrayBufferBinary, basePath, gltfJson, options, resources) {\n        let promisesToLoadResources = [];\n        // Shaders Async load\n        // for (let _i in gltfJson.shaders) {\n        //   const i = _i as any as number;\n        //   resources.shaders[i] = {};\n        //   let shaderJson = gltfJson.shaders[i];\n        //   let shaderType = shaderJson.type;\n        //   if (typeof shaderJson.extensions !== 'undefined' && typeof shaderJson.extensions.KHR_binary_glTF !== 'undefined') {\n        //     resources.shaders[i].shaderText = this._accessBinaryAsShader(shaderJson.extensions.KHR_binary_glTF.bufferView, gltfJson, arrayBufferBinary);\n        //     resources.shaders[i].shaderType = shaderType;\n        //     continue;\n        //   }\n        //   let shaderUri = shaderJson.uri;\n        //   if (options.files) {\n        //     const splitted = shaderUri.split('/');\n        //     const filename = splitted[splitted.length - 1];\n        //     if (options.files[filename]) {\n        //       const arrayBuffer = options.files[filename];\n        //       resources.shaders[i].shaderText = DataUtil.arrayBufferToString(arrayBuffer);\n        //       resources.shaders[i].shaderType = shaderType;\n        //       continue;\n        //     }\n        //   }\n        //   if (shaderUri.match(/^data:/)) {\n        //     promisesToLoadResources.push(\n        //       new Promise((resolve, rejected) => {\n        //         let arrayBuffer = DataUtil.base64ToArrayBuffer(shaderUri);\n        //         resources.shaders[i].shaderText = DataUtil.arrayBufferToString(arrayBuffer);\n        //         resources.shaders[i].shaderType = shaderType;\n        //         resolve();\n        //       })\n        //     );\n        //   } else {\n        //     shaderUri = basePath + shaderUri;\n        //     promisesToLoadResources.push(\n        //       DataUtil.loadResourceAsync(shaderUri, false,\n        //         (resolve:Function, response:any)=>{\n        //           resources.shaders[i].shaderText = response;\n        //           resources.shaders[i].shaderType = shaderType;\n        //           resolve(gltfJson);\n        //         },\n        //         (reject:Function, error:any)=>{\n        //         }\n        //       )\n        //     );\n        //   }\n        // }\n        // Buffers Async load\n        for (let i in gltfJson.buffers) {\n            let bufferInfo = gltfJson.buffers[i];\n            let splitted;\n            let filename;\n            if (bufferInfo.uri) {\n                splitted = bufferInfo.uri.split('/');\n                filename = splitted[splitted.length - 1];\n            }\n            if (typeof bufferInfo.uri === 'undefined') {\n                promisesToLoadResources.push(new Promise((resolve, rejected) => {\n                    resources.buffers[i] = arrayBufferBinary;\n                    bufferInfo.buffer = arrayBufferBinary;\n                    resolve(gltfJson);\n                }));\n            }\n            else if (bufferInfo.uri.match(/^data:application\\/(.*);base64,/)) {\n                promisesToLoadResources.push(new Promise((resolve, rejected) => {\n                    let arrayBuffer = _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].base64ToArrayBuffer(bufferInfo.uri);\n                    resources.buffers[i] = arrayBuffer;\n                    bufferInfo.buffer = arrayBuffer;\n                    resolve(gltfJson);\n                }));\n            }\n            else if (options.files && options.files[filename]) {\n                promisesToLoadResources.push(new Promise((resolve, rejected) => {\n                    const arrayBuffer = options.files[filename];\n                    resources.buffers[i] = arrayBuffer;\n                    bufferInfo.buffer = arrayBuffer;\n                    resolve(gltfJson);\n                }));\n            }\n            else {\n                promisesToLoadResources.push(_misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].loadResourceAsync(basePath + bufferInfo.uri, true, (resolve, response) => {\n                    resources.buffers[i] = response;\n                    bufferInfo.buffer = response;\n                    resolve(gltfJson);\n                }, (reject, error) => {\n                }));\n            }\n        }\n        // Textures Async load\n        for (let _i in gltfJson.images) {\n            const i = _i;\n            let imageJson = gltfJson.images[i];\n            //let imageJson = gltfJson.images[textureJson.source];\n            //let samplerJson = gltfJson.samplers[textureJson.sampler];\n            let imageUri;\n            if (typeof imageJson.uri === 'undefined') {\n                imageUri = this._accessBinaryAsImage(imageJson.bufferView, gltfJson, arrayBufferBinary, imageJson.mimeType);\n            }\n            else {\n                let imageFileStr = imageJson.uri;\n                const splitted = imageFileStr.split('/');\n                const filename = splitted[splitted.length - 1];\n                if (options.files && options.files[filename]) {\n                    const arrayBuffer = options.files[filename];\n                    const splitted = filename.split('.');\n                    const fileExtension = splitted[splitted.length - 1];\n                    imageUri = this._accessArrayBufferAsImage(arrayBuffer, fileExtension);\n                }\n                else if (imageFileStr.match(/^data:/)) {\n                    imageUri = imageFileStr;\n                }\n                else {\n                    imageUri = basePath + imageFileStr;\n                }\n            }\n            // if (options.extensionLoader && options.extensionLoader.setUVTransformToTexture) {\n            //   options.extensionLoader.setUVTransformToTexture(texture, samplerJson);\n            // }\n            promisesToLoadResources.push(new Promise((resolve, reject) => {\n                let img = new Image();\n                img.crossOrigin = 'Anonymous';\n                img.src = imageUri;\n                imageJson.image = img;\n                if (imageUri.match(/^data:/)) {\n                    resolve(gltfJson);\n                }\n                else {\n                    const load = (img, response) => {\n                        var bytes = new Uint8Array(response);\n                        var binaryData = \"\";\n                        for (var i = 0, len = bytes.byteLength; i < len; i++) {\n                            binaryData += String.fromCharCode(bytes[i]);\n                        }\n                        const split = imageUri.split('.');\n                        let ext = split[split.length - 1];\n                        img.src = this._getImageType(ext) + window.btoa(binaryData);\n                        img.name = (imageJson.name) ? imageJson.name : imageJson.uri;\n                        img.onload = () => {\n                            resolve(gltfJson);\n                        };\n                    };\n                    const loadBinaryImage = () => {\n                        var xhr = new XMLHttpRequest();\n                        xhr.onreadystatechange = (function (_img) {\n                            return function () {\n                                if (xhr.readyState == 4 && xhr.status == 200) {\n                                    load(_img, xhr.response);\n                                }\n                            };\n                        })(img);\n                        xhr.open('GET', imageUri);\n                        xhr.responseType = 'arraybuffer';\n                        xhr.send();\n                    };\n                    loadBinaryImage();\n                }\n                resources.images[i] = img;\n            }));\n        }\n        return Promise.all(promisesToLoadResources).then().catch((err) => {\n            console.log('Promise.all error', err);\n        });\n    }\n    _accessBinaryAsImage(bufferViewStr, json, arrayBuffer, mimeType) {\n        let arrayBufferSliced = this._sliceBufferViewToArrayBuffer(json, bufferViewStr, arrayBuffer);\n        return this._accessArrayBufferAsImage(arrayBufferSliced, mimeType);\n    }\n    _sliceBufferViewToArrayBuffer(json, bufferViewStr, arrayBuffer) {\n        let bufferViewJson = json.bufferViews[bufferViewStr];\n        let byteOffset = (bufferViewJson.byteOffset != null) ? bufferViewJson.byteOffset : 0;\n        let byteLength = bufferViewJson.byteLength;\n        let arrayBufferSliced = arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n        return arrayBufferSliced;\n    }\n    _accessArrayBufferAsImage(arrayBuffer, imageType) {\n        let bytes = new Uint8Array(arrayBuffer);\n        let binaryData = '';\n        for (let i = 0, len = bytes.byteLength; i < len; i++) {\n            binaryData += String.fromCharCode(bytes[i]);\n        }\n        let imgSrc = this._getImageType(imageType);\n        let dataUrl = imgSrc + _misc_DataUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].btoa(binaryData);\n        return dataUrl;\n    }\n    _getImageType(imageType) {\n        let imgSrc = null;\n        if (imageType === 'image/jpeg' || imageType.toLowerCase() === 'jpg' || imageType.toLowerCase() === 'jpeg') {\n            imgSrc = \"data:image/jpeg;base64,\";\n        }\n        else if (imageType == 'image/png' || imageType.toLowerCase() === 'png') {\n            imgSrc = \"data:image/png;base64,\";\n        }\n        else if (imageType == 'image/gif' || imageType.toLowerCase() === 'gif') {\n            imgSrc = \"data:image/gif;base64,\";\n        }\n        else if (imageType == 'image/bmp' || imageType.toLowerCase() === 'bmp') {\n            imgSrc = \"data:image/bmp;base64,\";\n        }\n        else {\n            imgSrc = \"data:image/unknown;base64,\";\n        }\n        return imgSrc;\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new Gltf2Importer();\n        }\n        return this.__instance;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/importer/Gltf2Importer.ts?");

/***/ }),

/***/ "./src/foundation/importer/ModelConverter.ts":
/*!***************************************************!*\
  !*** ./src/foundation/importer/ModelConverter.ts ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ModelConverter; });\n/* harmony import */ var _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/EntityRepository */ \"./src/foundation/core/EntityRepository.ts\");\n/* harmony import */ var _components_TransformComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/TransformComponent */ \"./src/foundation/components/TransformComponent.ts\");\n/* harmony import */ var _components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n/* harmony import */ var _components_MeshComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/MeshComponent */ \"./src/foundation/components/MeshComponent.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _math_Quaternion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math/Quaternion */ \"./src/foundation/math/Quaternion.ts\");\n/* harmony import */ var _math_Matrix44__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../math/Matrix44 */ \"./src/foundation/math/Matrix44.ts\");\n/* harmony import */ var _components_MeshRendererComponent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/MeshRendererComponent */ \"./src/foundation/components/MeshRendererComponent.ts\");\n/* harmony import */ var _geometry_Primitive__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../geometry/Primitive */ \"./src/foundation/geometry/Primitive.ts\");\n/* harmony import */ var _memory_Buffer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../memory/Buffer */ \"./src/foundation/memory/Buffer.ts\");\n/* harmony import */ var _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../definitions/PrimitiveMode */ \"./src/foundation/definitions/PrimitiveMode.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _components_CameraComponent__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../components/CameraComponent */ \"./src/foundation/components/CameraComponent.ts\");\n/* harmony import */ var _definitions_CameraType__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../definitions/CameraType */ \"./src/foundation/definitions/CameraType.ts\");\n/* harmony import */ var _textures_Texture__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../textures/Texture */ \"./src/foundation/textures/Texture.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _math_Vector2__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../math/Vector2 */ \"./src/foundation/math/Vector2.ts\");\n/* harmony import */ var _components_AnimationComponent__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../components/AnimationComponent */ \"./src/foundation/components/AnimationComponent.ts\");\n/* harmony import */ var _definitions_Animation__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../definitions/Animation */ \"./src/foundation/definitions/Animation.ts\");\n/* harmony import */ var _math_MathUtil__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\n/* harmony import */ var _components_SkeletalComponent__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../components/SkeletalComponent */ \"./src/foundation/components/SkeletalComponent.ts\");\n/* harmony import */ var _definitions_AlphaMode__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../definitions/AlphaMode */ \"./src/foundation/definitions/AlphaMode.ts\");\n/* harmony import */ var _helpers_MaterialHelper__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../helpers/MaterialHelper */ \"./src/foundation/helpers/MaterialHelper.ts\");\n/* harmony import */ var _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../definitions/ShaderSemantics */ \"./src/foundation/definitions/ShaderSemantics.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A converter class from glTF2 model to Rhodonite Native data\n */\nclass ModelConverter {\n    constructor() {\n    }\n    /**\n     * The static method to get singleton instance of this class.\n     * @return The singleton instance of ModelConverter class\n     */\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new ModelConverter();\n        }\n        return this.__instance;\n    }\n    _getDefaultShader(options) {\n        let defaultShader = null;\n        // if (options && typeof options.defaultShaderClass !== \"undefined\") {\n        //   if (typeof options.defaultShaderClass === \"string\") {\n        //     defaultShader = GLBoost[options.defaultShaderClass];\n        //   } else {\n        //     defaultShader = options.defaultShaderClass;\n        //   }\n        // }\n        return defaultShader;\n    }\n    __generateGroupEntity() {\n        const repo = _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        const entity = repo.createEntity([_components_TransformComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"]]);\n        return entity;\n    }\n    __generateMeshEntity() {\n        const repo = _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        const entity = repo.createEntity([_components_TransformComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n            _components_MeshComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _components_MeshRendererComponent__WEBPACK_IMPORTED_MODULE_7__[\"default\"]]);\n        return entity;\n    }\n    __generateCameraEntity() {\n        const repo = _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        const entity = repo.createEntity([_components_TransformComponent__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n            _components_CameraComponent__WEBPACK_IMPORTED_MODULE_14__[\"default\"]]);\n        return entity;\n    }\n    convertToRhodoniteObject(gltfModel) {\n        // load binary data\n        // for (let accessor of gltfModel.accessors) {\n        //   this._accessBinaryWithAccessor(accessor);\n        // }\n        const rnBuffer = this.createRnBuffer(gltfModel);\n        // Mesh, Camera, Group, ...\n        const rnEntities = this.__setupObjects(gltfModel, rnBuffer);\n        // Transfrom\n        this._setupTransform(gltfModel, rnEntities);\n        // Skeleton\n        this._setupSkeleton(gltfModel, rnEntities);\n        // Hierarchy\n        this._setupHierarchy(gltfModel, rnEntities);\n        // Camera\n        //this._setupCamera(gltfModel, groups);\n        // Animation\n        this.__setupAnimation(gltfModel, rnEntities);\n        // Root Group\n        const rootGroup = this.__generateGroupEntity();\n        rootGroup.tryToSetUniqueName('FileRoot', true);\n        if (gltfModel.scenes[0].nodesIndices) {\n            for (let nodesIndex of gltfModel.scenes[0].nodesIndices) {\n                rootGroup.getSceneGraph().addChild(rnEntities[nodesIndex].getSceneGraph());\n            }\n        }\n        // Post Skeletal Proccess\n        // for (let glboostMesh of glboostMeshes) {\n        //   if (glboostMesh instanceof M_SkeletalMesh) {\n        //     if (!glboostMesh.jointsHierarchy) {\n        //       glboostMesh.jointsHierarchy = rootGroup;\n        //     }\n        //   }\n        // }\n        // let options = gltfModel.asset.extras.glboostOptions;\n        // if (options.loaderExtension && options.loaderExtension.setAssetPropertiesToRootGroup) {\n        //   options.loaderExtension.setAssetPropertiesToRootGroup(rootGroup, gltfModel.asset);\n        // }\n        // if (options && options.loaderExtension && options.loaderExtension.loadExtensionInfoAndSetToRootGroup) {\n        //   options.loaderExtension.loadExtensionInfoAndSetToRootGroup(rootGroup, gltfModel, glBoostContext);\n        // }\n        // rootGroup.allMeshes = rootGroup.searchElementsByType(M_Mesh);\n        return rootGroup;\n    }\n    _setupCamera(gltfModel) {\n    }\n    createRnBuffer(gltfModel) {\n        const buffer = gltfModel.buffers[0];\n        const rnBuffer = new _memory_Buffer__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n            byteLength: buffer.byteLength,\n            arrayBuffer: buffer.buffer,\n            name: `gltf2Buffer_0_(${buffer.uri})`\n        });\n        return rnBuffer;\n    }\n    _setupTransform(gltfModel, groups) {\n        for (let node_i in gltfModel.nodes) {\n            let group = groups[node_i];\n            let nodeJson = gltfModel.nodes[node_i];\n            if (nodeJson.translation) {\n                group.getTransform().translate = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](nodeJson.translation[0], nodeJson.translation[1], nodeJson.translation[2]);\n            }\n            if (nodeJson.scale) {\n                group.getTransform().scale = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](nodeJson.scale[0], nodeJson.scale[1], nodeJson.scale[2]);\n            }\n            if (nodeJson.rotation) {\n                group.getTransform().quaternion = new _math_Quaternion__WEBPACK_IMPORTED_MODULE_5__[\"default\"](nodeJson.rotation[0], nodeJson.rotation[1], nodeJson.rotation[2], nodeJson.rotation[3]);\n            }\n            if (nodeJson.matrix) {\n                group.getTransform().matrix = new _math_Matrix44__WEBPACK_IMPORTED_MODULE_6__[\"default\"](nodeJson.matrix, true);\n            }\n        }\n    }\n    _setupHierarchy(gltfModel, rnEntities) {\n        const groupSceneComponents = rnEntities.map(group => { return group.getSceneGraph(); });\n        for (let node_i in gltfModel.nodes) {\n            const parentNode_i = parseInt(node_i);\n            let node = gltfModel.nodes[parentNode_i];\n            if (node.childrenIndices) {\n                let parentGroup = groupSceneComponents[parentNode_i];\n                for (let childNode_i of node.childrenIndices) {\n                    let childGroup = groupSceneComponents[childNode_i];\n                    parentGroup.addChild(childGroup);\n                }\n            }\n        }\n    }\n    __setupAnimation(gltfModel, rnEntities) {\n        if (gltfModel.animations) {\n            for (let animation of gltfModel.animations) {\n                for (let sampler of animation.samplers) {\n                    this._accessBinaryWithAccessor(sampler.input);\n                    this._accessBinaryWithAccessor(sampler.output);\n                }\n            }\n        }\n        const entityRepository = _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        if (gltfModel.animations) {\n            for (let animation of gltfModel.animations) {\n                for (let channel of animation.channels) {\n                    const animInputArray = channel.sampler.input.extras.typedDataArray;\n                    const animOutputArray = channel.sampler.output.extras.typedDataArray;\n                    const interpolation = (channel.sampler.interpolation != null) ? channel.sampler.interpolation : 'LINEAR';\n                    let animationAttributeName = '';\n                    if (channel.target.path === 'translation') {\n                        animationAttributeName = 'translate';\n                    }\n                    else if (channel.target.path === 'rotation') {\n                        animationAttributeName = 'quaternion';\n                    }\n                    else {\n                        animationAttributeName = channel.target.path;\n                    }\n                    let rnEntity = rnEntities[channel.target.nodeIndex];\n                    if (rnEntity) {\n                        entityRepository.addComponentsToEntity([_components_AnimationComponent__WEBPACK_IMPORTED_MODULE_19__[\"default\"]], rnEntity.entityUID);\n                        const animationComponent = rnEntity.getComponent(_components_AnimationComponent__WEBPACK_IMPORTED_MODULE_19__[\"default\"]);\n                        if (animationComponent) {\n                            animationComponent.setAnimation(animationAttributeName, animInputArray, animOutputArray, _definitions_Animation__WEBPACK_IMPORTED_MODULE_20__[\"Animation\"].fromString(interpolation));\n                        }\n                    }\n                }\n            }\n        }\n    }\n    _setupSkeleton(gltfModel, rnEntities) {\n        if (gltfModel.skins == null) {\n            return;\n        }\n        const entityRepository = _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        for (let skin of gltfModel.skins) {\n            this._accessBinaryWithAccessor(skin.inverseBindMatrices);\n        }\n        for (let node_i in gltfModel.nodes) {\n            let node = gltfModel.nodes[node_i];\n            let sg = rnEntities[node_i].getSceneGraph();\n            let skeletalComponent;\n            if (node.skin != null) {\n                let rnEntity = rnEntities[node_i];\n                entityRepository.addComponentsToEntity([_components_SkeletalComponent__WEBPACK_IMPORTED_MODULE_22__[\"default\"]], rnEntity.entityUID);\n                skeletalComponent = rnEntity.getComponent(_components_SkeletalComponent__WEBPACK_IMPORTED_MODULE_22__[\"default\"]);\n                //        skeletalComponent.isSkinning = false;\n                skeletalComponent._jointIndices = node.skin.jointsIndices;\n                if (node.skin.bindShapeMatrix != null) {\n                    skeletalComponent._bindShapeMatrix = new _math_Matrix44__WEBPACK_IMPORTED_MODULE_6__[\"default\"](node.skin.bindShapeMatrix);\n                }\n            }\n            if (node.skin && node.skin.skeleton) {\n                sg.isRootJoint = true;\n                // if (node.meshes) {\n                //   // let rnEntity = rnEntities[node_i];\n                //   // entityRepository\n                //   // for (let mesh of node.meshes) {\n                //   //   mesh\n                //   //   const entity = this.__generateMeshEntity() {\n                //   //   }\n                //   // }\n                //   // skeletalComponent!.jointsHierarchy = rnEntities[node.skin.skeletonIndex].getSceneGraph();\n                // } else \n                if (node.mesh) {\n                    skeletalComponent.jointsHierarchy = rnEntities[node.skin.skeletonIndex].getSceneGraph();\n                }\n            }\n            if (node.skin && node.skin.joints) {\n                for (let joint_i of node.skin.jointsIndices) {\n                    let sg = rnEntities[joint_i].getSceneGraph();\n                    sg.jointIndex = joint_i;\n                }\n            }\n            if (node.skin && node.skin.inverseBindMatrices != null) {\n                skeletalComponent._inverseBindMatrices = node.skin.inverseBindMatrices.extras.typedDataArray;\n            }\n        }\n    }\n    __setupObjects(gltfModel, rnBuffer) {\n        //const meshEntities: Entity[] = [];\n        const rnEntities = [];\n        for (let node_i in gltfModel.nodes) {\n            let node = gltfModel.nodes[parseInt(node_i)];\n            // if (node.meshes != null) {\n            //   const groupEntity = this.__generateGroupEntity();\n            //   for (let mesh of node.meshes) {\n            //     const meshEntity = this.__setupMesh(mesh, rnBuffer, gltfModel);\n            //     groupEntity.getSceneGraph().addChild(meshEntity.getSceneGraph());\n            //   }\n            // } else \n            if (node.mesh != null) {\n                const meshEntity = this.__setupMesh(node.mesh, rnBuffer, gltfModel);\n                if (node.mesh.name) {\n                    meshEntity.tryToSetUniqueName(node.mesh.name, true);\n                }\n                rnEntities.push(meshEntity);\n            }\n            else if (node.camera != null) {\n                const cameraEntity = this.__setupCamera(node.camera);\n                rnEntities.push(cameraEntity);\n            }\n            else {\n                const group = this.__generateGroupEntity();\n                group.tryToSetUniqueName(node.name, true);\n                rnEntities.push(group);\n            }\n        }\n        return rnEntities;\n    }\n    __setupCamera(camera) {\n        const cameraEntity = this.__generateCameraEntity();\n        const cameraComponent = cameraEntity.getComponent(_components_CameraComponent__WEBPACK_IMPORTED_MODULE_14__[\"default\"]);\n        cameraComponent.direction = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 0, -1);\n        cameraComponent.up = new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](0, 1, 0);\n        cameraComponent.type = _definitions_CameraType__WEBPACK_IMPORTED_MODULE_15__[\"CameraType\"].fromString(camera.type);\n        if (cameraComponent.type === _definitions_CameraType__WEBPACK_IMPORTED_MODULE_15__[\"CameraType\"].Perspective) {\n            cameraComponent.aspect = camera.perspective.aspectRatio ? camera.perspective.aspectRatio : 1;\n            cameraComponent.fovy = _math_MathUtil__WEBPACK_IMPORTED_MODULE_21__[\"MathUtil\"].radianToDegree(camera.perspective.yfov);\n            cameraComponent.zNear = camera.perspective.znear;\n            cameraComponent.zFar = camera.perspective.zfar ? camera.perspective.zfar : 100000;\n        }\n        else if (cameraComponent.type === _definitions_CameraType__WEBPACK_IMPORTED_MODULE_15__[\"CameraType\"].Orthographic) {\n            cameraComponent.xmag = camera.orthographic.zmag;\n            cameraComponent.ymag = camera.orthographic.ymag;\n            cameraComponent.zNear = camera.orthographic.znear;\n            cameraComponent.zFar = camera.orthographic.zfar;\n        }\n        return cameraEntity;\n    }\n    __setupMesh(mesh, rnBuffer, gltfModel) {\n        const meshEntity = this.__generateMeshEntity();\n        let rnPrimitiveMode = _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_10__[\"PrimitiveMode\"].from(4);\n        for (let i in mesh.primitives) {\n            let primitive = mesh.primitives[i];\n            if (primitive.mode != null) {\n                rnPrimitiveMode = _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_10__[\"PrimitiveMode\"].from(primitive.mode);\n            }\n            const indicesRnAccessor = this.__getRnAccessor(primitive.indices, rnBuffer);\n            const attributeRnAccessors = [];\n            const attributeSemantics = [];\n            for (let attributeName in primitive.attributes) {\n                let attributeAccessor = primitive.attributes[attributeName];\n                const attributeRnAccessor = this.__getRnAccessor(attributeAccessor, rnBuffer);\n                attributeRnAccessors.push(attributeRnAccessor);\n                attributeSemantics.push(_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_13__[\"VertexAttribute\"].fromString(attributeAccessor.extras.attributeName));\n            }\n            const material = this.__setupMaterial(gltfModel, primitive.material);\n            const rnPrimitive = new _geometry_Primitive__WEBPACK_IMPORTED_MODULE_8__[\"default\"](attributeRnAccessors, attributeSemantics, rnPrimitiveMode, material, indicesRnAccessor);\n            const meshComponent = meshEntity.getComponent(_components_MeshComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n            meshComponent.addPrimitive(rnPrimitive);\n            //      this.__addOffsetToIndices(meshComponent);\n        }\n        return meshEntity;\n    }\n    __setupMaterial(gltfModel, materialJson) {\n        if (materialJson == null) {\n            return void 0;\n        }\n        let material;\n        if (gltfModel.asset != null && gltfModel.asset.version === '2') {\n        }\n        else {\n        }\n        const pbrMetallicRoughness = materialJson.pbrMetallicRoughness;\n        if (pbrMetallicRoughness != null) {\n            material = _helpers_MaterialHelper__WEBPACK_IMPORTED_MODULE_24__[\"default\"].createPbrUberMaterial();\n            const baseColorFactor = pbrMetallicRoughness.baseColorFactor;\n            if (baseColorFactor != null) {\n                material.setParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__[\"ShaderSemantics\"].BaseColorFactor, new _math_Vector4__WEBPACK_IMPORTED_MODULE_17__[\"default\"](baseColorFactor));\n            }\n            const baseColorTexture = pbrMetallicRoughness.baseColorTexture;\n            if (baseColorTexture != null) {\n                const texture = baseColorTexture.texture;\n                const image = texture.image.image;\n                const rnTexture = new _textures_Texture__WEBPACK_IMPORTED_MODULE_16__[\"default\"]();\n                rnTexture.generateTextureFromImage(image);\n                rnTexture.name = image.name;\n                // material.baseColorTexture = rnTexture;\n                material.setTextureParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__[\"ShaderSemantics\"].BaseColorTexture, rnTexture.texture3DAPIResourseUid);\n            }\n            const normalTexture = materialJson.normalTexture;\n            if (normalTexture != null) {\n                const texture = normalTexture.texture;\n                const image = texture.image.image;\n                const rnTexture = new _textures_Texture__WEBPACK_IMPORTED_MODULE_16__[\"default\"]();\n                rnTexture.generateTextureFromImage(image);\n                rnTexture.name = image.name;\n                // material.normalTexture = rnTexture;\n                material.setTextureParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__[\"ShaderSemantics\"].NormalTexture, rnTexture.texture3DAPIResourseUid);\n            }\n            const occlusionTexture = materialJson.occlusionTexture;\n            if (occlusionTexture != null) {\n                const texture = occlusionTexture.texture;\n                const image = texture.image.image;\n                const rnTexture = new _textures_Texture__WEBPACK_IMPORTED_MODULE_16__[\"default\"]();\n                rnTexture.generateTextureFromImage(image);\n                rnTexture.name = image.name;\n                // material.occlusionTexture = rnTexture;\n                material.setTextureParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__[\"ShaderSemantics\"].OcclusionTexture, rnTexture.texture3DAPIResourseUid);\n            }\n            let metallicFactor = pbrMetallicRoughness.metallicFactor;\n            metallicFactor = (metallicFactor != null) ? metallicFactor : 1;\n            let roughnessFactor = pbrMetallicRoughness.roughnessFactor;\n            roughnessFactor = (roughnessFactor != null) ? roughnessFactor : 1;\n            material.setParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__[\"ShaderSemantics\"].MetallicRoughnessFactor, new _math_Vector2__WEBPACK_IMPORTED_MODULE_18__[\"default\"](metallicFactor, roughnessFactor));\n            const metallicRoughnessTexture = pbrMetallicRoughness.metallicRoughnessTexture;\n            if (metallicRoughnessTexture != null) {\n                const texture = metallicRoughnessTexture.texture;\n                const image = texture.image.image;\n                const rnTexture = new _textures_Texture__WEBPACK_IMPORTED_MODULE_16__[\"default\"]();\n                rnTexture.generateTextureFromImage(image);\n                rnTexture.name = image.name;\n                // material.metallicRoughnessTexture = rnTexture;\n                material.setTextureParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__[\"ShaderSemantics\"].MetallicRoughnessTexture, rnTexture.texture3DAPIResourseUid);\n            }\n            const alphaMode = materialJson.alphaMode;\n            if (alphaMode != null) {\n                material.alphaMode = _definitions_AlphaMode__WEBPACK_IMPORTED_MODULE_23__[\"AlphaMode\"].fromString(alphaMode);\n            }\n        }\n        else {\n            material = _helpers_MaterialHelper__WEBPACK_IMPORTED_MODULE_24__[\"default\"].createClassicUberMaterial();\n        }\n        const diffuseColorTexture = materialJson.diffuseColorTexture;\n        if (diffuseColorTexture != null) {\n            const texture = diffuseColorTexture.texture;\n            const image = texture.image.image;\n            const rnTexture = new _textures_Texture__WEBPACK_IMPORTED_MODULE_16__[\"default\"]();\n            rnTexture.generateTextureFromImage(image);\n            rnTexture.name = image.name;\n            // material.emissiveTexture = rnTexture;\n            material.setTextureParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__[\"ShaderSemantics\"].DiffuseColorTexture, rnTexture.texture3DAPIResourseUid);\n        }\n        const emissiveTexture = materialJson.emissiveTexture;\n        if (emissiveTexture != null) {\n            const texture = emissiveTexture.texture;\n            const image = texture.image.image;\n            const rnTexture = new _textures_Texture__WEBPACK_IMPORTED_MODULE_16__[\"default\"]();\n            rnTexture.generateTextureFromImage(image);\n            rnTexture.name = image.name;\n            // material.emissiveTexture = rnTexture;\n            material.setTextureParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__[\"ShaderSemantics\"].EmissiveTexture, rnTexture.texture3DAPIResourseUid);\n        }\n        const diffuseColorFactor = materialJson.diffuseColorFactor;\n        if (diffuseColorFactor != null) {\n            material.setParameter(_definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_25__[\"ShaderSemantics\"].DiffuseColorFactor, new _math_Vector4__WEBPACK_IMPORTED_MODULE_17__[\"default\"](diffuseColorFactor));\n        }\n        return material;\n    }\n    _adjustByteAlign(typedArrayClass, arrayBuffer, alignSize, byteOffset, length) {\n        if ((byteOffset % alignSize) != 0) {\n            return new typedArrayClass(arrayBuffer.slice(byteOffset), 0, length);\n        }\n        else {\n            return new typedArrayClass(arrayBuffer, byteOffset, length);\n        }\n    }\n    _checkBytesPerComponent(accessor) {\n        var bytesPerComponent = 0;\n        switch (accessor.componentType) {\n            case 5120: // gl.BYTE\n                bytesPerComponent = 1;\n                break;\n            case 5121: // gl.UNSIGNED_BYTE\n                bytesPerComponent = 1;\n                break;\n            case 5122: // gl.SHORT\n                bytesPerComponent = 2;\n                break;\n            case 5123: // gl.UNSIGNED_SHORT\n                bytesPerComponent = 2;\n                break;\n            case 5124: // gl.INT\n                bytesPerComponent = 4;\n                break;\n            case 5125: // gl.UNSIGNED_INT\n                bytesPerComponent = 4;\n                break;\n            case 5126: // gl.FLOAT\n                bytesPerComponent = 4;\n                break;\n            default:\n                break;\n        }\n        return bytesPerComponent;\n    }\n    _checkComponentNumber(accessor) {\n        var componentN = 0;\n        switch (accessor.type) {\n            case 'SCALAR':\n                componentN = 1;\n                break;\n            case 'VEC2':\n                componentN = 2;\n                break;\n            case 'VEC3':\n                componentN = 3;\n                break;\n            case 'VEC4':\n                componentN = 4;\n                break;\n            case 'MAT4':\n                componentN = 16;\n                break;\n        }\n        return componentN;\n    }\n    _checkDataViewMethod(accessor) {\n        var dataViewMethod = '';\n        switch (accessor.componentType) {\n            case 5120: // gl.BYTE\n                dataViewMethod = 'getInt8';\n                break;\n            case 5121: // gl.UNSIGNED_BYTE\n                dataViewMethod = 'getUint8';\n                break;\n            case 5122: // gl.SHORT\n                dataViewMethod = 'getInt16';\n                break;\n            case 5123: // gl.UNSIGNED_SHORT\n                dataViewMethod = 'getUint16';\n                break;\n            case 5124: // gl.INT\n                dataViewMethod = 'getInt32';\n                break;\n            case 5125: // gl.UNSIGNED_INT\n                dataViewMethod = 'getUint32';\n                break;\n            case 5126: // gl.FLOAT\n                dataViewMethod = 'getFloat32';\n                break;\n            default:\n                break;\n        }\n        return dataViewMethod;\n    }\n    static _isSystemLittleEndian() {\n        return !!(new Uint8Array((new Uint16Array([0x00ff])).buffer))[0];\n    }\n    _accessBinaryWithAccessor(accessor) {\n        var bufferView = accessor.bufferView;\n        const byteOffset = bufferView.byteOffset + (accessor.byteOffset !== void 0 ? accessor.byteOffset : 0);\n        var buffer = bufferView.buffer;\n        var arrayBuffer = buffer.buffer;\n        let componentN = this._checkComponentNumber(accessor);\n        let componentBytes = this._checkBytesPerComponent(accessor);\n        let dataViewMethod = this._checkDataViewMethod(accessor);\n        if (accessor.extras === void 0) {\n            accessor.extras = {};\n        }\n        accessor.extras.componentN = componentN;\n        accessor.extras.componentBytes = componentBytes;\n        accessor.extras.dataViewMethod = dataViewMethod;\n        var byteLength = componentBytes * componentN * accessor.count;\n        var typedDataArray = [];\n        if (accessor.extras && accessor.extras.toGetAsTypedArray) {\n            if (ModelConverter._isSystemLittleEndian()) {\n                if (dataViewMethod === 'getFloat32') {\n                    typedDataArray = this._adjustByteAlign(Float32Array, arrayBuffer, 4, byteOffset, byteLength / componentBytes);\n                }\n                else if (dataViewMethod === 'getInt8') {\n                    typedDataArray = new Int8Array(arrayBuffer, byteOffset, byteLength / componentBytes);\n                }\n                else if (dataViewMethod === 'getUint8') {\n                    typedDataArray = new Uint8Array(arrayBuffer, byteOffset, byteLength / componentBytes);\n                }\n                else if (dataViewMethod === 'getInt16') {\n                    typedDataArray = this._adjustByteAlign(Int16Array, arrayBuffer, 2, byteOffset, byteLength / componentBytes);\n                }\n                else if (dataViewMethod === 'getUint16') {\n                    typedDataArray = this._adjustByteAlign(Uint16Array, arrayBuffer, 2, byteOffset, byteLength / componentBytes);\n                }\n                else if (dataViewMethod === 'getInt32') {\n                    typedDataArray = this._adjustByteAlign(Int32Array, arrayBuffer, 4, byteOffset, byteLength / componentBytes);\n                }\n                else if (dataViewMethod === 'getUint32') {\n                    typedDataArray = this._adjustByteAlign(Uint32Array, arrayBuffer, 4, byteOffset, byteLength / componentBytes);\n                }\n            }\n            else {\n                let dataView = new DataView(arrayBuffer, byteOffset, byteLength);\n                let byteDelta = componentBytes * componentN;\n                let littleEndian = true;\n                for (let pos = 0; pos < byteLength; pos += byteDelta) {\n                    switch (accessor.type) {\n                        case 'SCALAR':\n                            typedDataArray.push(dataView[dataViewMethod](pos, littleEndian));\n                            break;\n                        case 'VEC2':\n                            typedDataArray.push(dataView[dataViewMethod](pos, littleEndian));\n                            typedDataArray.push(dataView[dataViewMethod](pos + componentBytes, littleEndian));\n                            break;\n                        case 'VEC3':\n                            typedDataArray.push(dataView[dataViewMethod](pos, littleEndian));\n                            typedDataArray.push(dataView[dataViewMethod](pos + componentBytes, littleEndian));\n                            typedDataArray.push(dataView[dataViewMethod](pos + componentBytes * 2, littleEndian));\n                            break;\n                        case 'VEC4':\n                            typedDataArray.push(dataView[dataViewMethod](pos, littleEndian));\n                            typedDataArray.push(dataView[dataViewMethod](pos + componentBytes, littleEndian));\n                            typedDataArray.push(dataView[dataViewMethod](pos + componentBytes * 2, littleEndian));\n                            typedDataArray.push(dataView[dataViewMethod](pos + componentBytes * 3, littleEndian));\n                            break;\n                    }\n                }\n                if (dataViewMethod === 'getInt8') {\n                    typedDataArray = new Int8Array(typedDataArray);\n                }\n                else if (dataViewMethod === 'getUint8') {\n                    typedDataArray = new Uint8Array(typedDataArray);\n                }\n                else if (dataViewMethod === 'getInt16') {\n                    typedDataArray = new Int16Array(typedDataArray);\n                }\n                else if (dataViewMethod === 'getUint16') {\n                    typedDataArray = new Uint16Array(typedDataArray);\n                }\n                else if (dataViewMethod === 'getInt32') {\n                    typedDataArray = new Int32Array(typedDataArray);\n                }\n                else if (dataViewMethod === 'getUint32') {\n                    typedDataArray = new Uint32Array(typedDataArray);\n                }\n                else if (dataViewMethod === 'getFloat32') {\n                    typedDataArray = new Float32Array(typedDataArray);\n                }\n            }\n        }\n        else {\n            let dataView = new DataView(arrayBuffer, byteOffset, byteLength);\n            let byteDelta = componentBytes * componentN;\n            let littleEndian = true;\n            for (let pos = 0; pos < byteLength; pos += byteDelta) {\n                switch (accessor.type) {\n                    case 'SCALAR':\n                        typedDataArray.push(dataView[dataViewMethod](pos, littleEndian));\n                        break;\n                    case 'VEC2':\n                        typedDataArray.push(new _math_Vector2__WEBPACK_IMPORTED_MODULE_18__[\"default\"](dataView[dataViewMethod](pos, littleEndian), dataView[dataViewMethod](pos + componentBytes, littleEndian)));\n                        break;\n                    case 'VEC3':\n                        typedDataArray.push(new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](dataView[dataViewMethod](pos, littleEndian), dataView[dataViewMethod](pos + componentBytes, littleEndian), dataView[dataViewMethod](pos + componentBytes * 2, littleEndian)));\n                        break;\n                    case 'VEC4':\n                        if (accessor.extras && accessor.extras.quaternionIfVec4) {\n                            typedDataArray.push(new _math_Quaternion__WEBPACK_IMPORTED_MODULE_5__[\"default\"](dataView[dataViewMethod](pos, littleEndian), dataView[dataViewMethod](pos + componentBytes, littleEndian), dataView[dataViewMethod](pos + componentBytes * 2, littleEndian), dataView[dataViewMethod](pos + componentBytes * 3, littleEndian)));\n                        }\n                        else {\n                            typedDataArray.push(new _math_Vector4__WEBPACK_IMPORTED_MODULE_17__[\"default\"](dataView[dataViewMethod](pos, littleEndian), dataView[dataViewMethod](pos + componentBytes, littleEndian), dataView[dataViewMethod](pos + componentBytes * 2, littleEndian), dataView[dataViewMethod](pos + componentBytes * 3, littleEndian)));\n                        }\n                        break;\n                    case 'MAT4':\n                        let matrixComponents = [];\n                        for (let i = 0; i < 16; i++) {\n                            matrixComponents[i] = dataView[dataViewMethod](pos + componentBytes * i, littleEndian);\n                        }\n                        typedDataArray.push(new _math_Matrix44__WEBPACK_IMPORTED_MODULE_6__[\"default\"](matrixComponents, true));\n                        break;\n                }\n            }\n        }\n        accessor.extras.typedDataArray = typedDataArray;\n        return typedDataArray;\n    }\n    __addOffsetToIndices(meshComponent) {\n        const primitiveNumber = meshComponent.getPrimitiveNumber();\n        let offsetSum = 0;\n        for (let i = 0; i < primitiveNumber; i++) {\n            const primitive = meshComponent.getPrimitiveAt(i);\n            const indicesAccessor = primitive.indicesAccessor;\n            if (indicesAccessor) {\n                const elementNumber = indicesAccessor.elementCount;\n                for (let j = 0; j < elementNumber; j++) {\n                    const index = indicesAccessor.getScalar(j, {});\n                    indicesAccessor.setScalar(j, index + offsetSum, {});\n                }\n                offsetSum += elementNumber;\n            }\n        }\n    }\n    __getRnAccessor(accessor, rnBuffer) {\n        const bufferView = accessor.bufferView;\n        const rnBufferView = rnBuffer.takeBufferViewWithByteOffset({\n            byteLengthToNeed: bufferView.byteLength,\n            byteStride: (bufferView.byteStride != null) ? bufferView.byteStride : 0,\n            byteOffset: (bufferView.byteOffset != null) ? bufferView.byteOffset : 0,\n            isAoS: false\n        });\n        let rnAccessor;\n        if (accessor.byteStride != null) {\n            rnAccessor = rnBufferView.takeFlexibleAccessorWithByteOffset({\n                compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_11__[\"CompositionType\"].fromString(accessor.type),\n                componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_12__[\"ComponentType\"].from(accessor.componentType),\n                count: accessor.count,\n                byteStride: accessor.byteStride,\n                byteOffset: (accessor.byteOffset != null) ? accessor.byteOffset : 0,\n                max: accessor.max,\n                min: accessor.min\n            });\n        }\n        else {\n            rnAccessor = rnBufferView.takeAccessorWithByteOffset({\n                compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_11__[\"CompositionType\"].fromString(accessor.type),\n                componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_12__[\"ComponentType\"].from(accessor.componentType),\n                count: accessor.count,\n                byteOffset: (accessor.byteOffset != null) ? accessor.byteOffset : 0,\n                max: accessor.max,\n                min: accessor.min\n            });\n        }\n        return rnAccessor;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/importer/ModelConverter.ts?");

/***/ }),

/***/ "./src/foundation/main.ts":
/*!********************************!*\
  !*** ./src/foundation/main.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/EntityRepository */ \"./src/foundation/core/EntityRepository.ts\");\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _components_TransformComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/TransformComponent */ \"./src/foundation/components/TransformComponent.ts\");\n/* harmony import */ var _components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n/* harmony import */ var _components_MeshComponent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/MeshComponent */ \"./src/foundation/components/MeshComponent.ts\");\n/* harmony import */ var _components_MeshRendererComponent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/MeshRendererComponent */ \"./src/foundation/components/MeshRendererComponent.ts\");\n/* harmony import */ var _geometry_Primitive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./geometry/Primitive */ \"./src/foundation/geometry/Primitive.ts\");\n/* harmony import */ var _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./definitions/PrimitiveMode */ \"./src/foundation/definitions/PrimitiveMode.ts\");\n/* harmony import */ var _definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _system_System__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./system/System */ \"./src/foundation/system/System.ts\");\n/* harmony import */ var _math_Vector2__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./math/Vector2 */ \"./src/foundation/math/Vector2.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _math_MutableVector3__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./math/MutableVector3 */ \"./src/foundation/math/MutableVector3.ts\");\n/* harmony import */ var _math_MutableVector4__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./math/MutableVector4 */ \"./src/foundation/math/MutableVector4.ts\");\n/* harmony import */ var _math_Matrix33__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./math/Matrix33 */ \"./src/foundation/math/Matrix33.ts\");\n/* harmony import */ var _math_Matrix44__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./math/Matrix44 */ \"./src/foundation/math/Matrix44.ts\");\n/* harmony import */ var _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./math/MutableMatrix44 */ \"./src/foundation/math/MutableMatrix44.ts\");\n/* harmony import */ var _definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./definitions/ProcessApproach */ \"./src/foundation/definitions/ProcessApproach.ts\");\n/* harmony import */ var _importer_Gltf1Importer__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./importer/Gltf1Importer */ \"./src/foundation/importer/Gltf1Importer.ts\");\n/* harmony import */ var _importer_Gltf2Importer__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./importer/Gltf2Importer */ \"./src/foundation/importer/Gltf2Importer.ts\");\n/* harmony import */ var _exporter_Gltf2Exporter__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./exporter/Gltf2Exporter */ \"./src/foundation/exporter/Gltf2Exporter.ts\");\n/* harmony import */ var _importer_ModelConverter__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./importer/ModelConverter */ \"./src/foundation/importer/ModelConverter.ts\");\n/* harmony import */ var _system_ModuleManager__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./system/ModuleManager */ \"./src/foundation/system/ModuleManager.ts\");\n/* harmony import */ var _core_MemoryManager__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _components_CameraComponent__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./components/CameraComponent */ \"./src/foundation/components/CameraComponent.ts\");\n/* harmony import */ var _definitions_CameraType__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./definitions/CameraType */ \"./src/foundation/definitions/CameraType.ts\");\n/* harmony import */ var _math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./math/RowMajarMatrix44 */ \"./src/foundation/math/RowMajarMatrix44.ts\");\n/* harmony import */ var _components_AnimationComponent__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./components/AnimationComponent */ \"./src/foundation/components/AnimationComponent.ts\");\n/* harmony import */ var _components_LightComponent__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./components/LightComponent */ \"./src/foundation/components/LightComponent.ts\");\n/* harmony import */ var _definitions_LightType__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./definitions/LightType */ \"./src/foundation/definitions/LightType.ts\");\n/* harmony import */ var _definitions_AlphaMode__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./definitions/AlphaMode */ \"./src/foundation/definitions/AlphaMode.ts\");\n/* harmony import */ var _textures_CubeTexture__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./textures/CubeTexture */ \"./src/foundation/textures/CubeTexture.ts\");\n/* harmony import */ var _components_CameraControllerComponent__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./components/CameraControllerComponent */ \"./src/foundation/components/CameraControllerComponent.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Rn = {\n    EntityRepository: _core_EntityRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    ComponentRepository: _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    TransformComponent: _components_TransformComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    SceneGraphComponent: _components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    MeshComponent: _components_MeshComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    MeshRendererComponent: _components_MeshRendererComponent__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    Primitive: _geometry_Primitive__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    CompositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_9__[\"CompositionType\"],\n    ComponentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_10__[\"ComponentType\"],\n    VertexAttribute: _definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_8__[\"VertexAttribute\"],\n    PrimitiveMode: _definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_7__[\"PrimitiveMode\"],\n    System: _system_System__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n    Vector2: _math_Vector2__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n    Vector3: _math_Vector3__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n    Vector4: _math_Vector4__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n    MutableVector3: _math_MutableVector3__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    MutableVector4: _math_MutableVector4__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n    Matrix33: _math_Matrix33__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n    Matrix44: _math_Matrix44__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\n    MutableMatrix44: _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n    ProcessApproach: _definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_20__[\"ProcessApproach\"],\n    Gltf1Importer: _importer_Gltf1Importer__WEBPACK_IMPORTED_MODULE_21__[\"default\"],\n    Gltf2Importer: _importer_Gltf2Importer__WEBPACK_IMPORTED_MODULE_22__[\"default\"],\n    ModelConverter: _importer_ModelConverter__WEBPACK_IMPORTED_MODULE_24__[\"default\"],\n    ModuleManager: _system_ModuleManager__WEBPACK_IMPORTED_MODULE_25__[\"default\"],\n    MemoryManager: _core_MemoryManager__WEBPACK_IMPORTED_MODULE_26__[\"default\"],\n    CameraComponent: _components_CameraComponent__WEBPACK_IMPORTED_MODULE_27__[\"default\"],\n    CameraType: _definitions_CameraType__WEBPACK_IMPORTED_MODULE_28__[\"CameraType\"],\n    RowMajarMatrix44: _math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_29__[\"default\"],\n    AnimationComponent: _components_AnimationComponent__WEBPACK_IMPORTED_MODULE_30__[\"default\"],\n    LightComponent: _components_LightComponent__WEBPACK_IMPORTED_MODULE_31__[\"default\"],\n    LightType: _definitions_LightType__WEBPACK_IMPORTED_MODULE_32__[\"LightType\"],\n    CubeTexture: _textures_CubeTexture__WEBPACK_IMPORTED_MODULE_34__[\"default\"],\n    CameraControllerComponent: _components_CameraControllerComponent__WEBPACK_IMPORTED_MODULE_35__[\"default\"],\n    AlphaMode: _definitions_AlphaMode__WEBPACK_IMPORTED_MODULE_33__[\"AlphaMode\"],\n    Gltf2Exporter: _exporter_Gltf2Exporter__WEBPACK_IMPORTED_MODULE_23__[\"default\"]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Rn);\nwindow['Rn'] = Rn;\n\n\n//# sourceURL=webpack:///./src/foundation/main.ts?");

/***/ }),

/***/ "./src/foundation/materials/AbstractMaterialNode.ts":
/*!**********************************************************!*\
  !*** ./src/foundation/materials/AbstractMaterialNode.ts ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AbstractMaterialNode; });\n/* harmony import */ var _core_Object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Object */ \"./src/foundation/core/Object.ts\");\n\nclass AbstractMaterialNode extends _core_Object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(semantics) {\n        super(false);\n        this.__semantics = [];\n        this.__shaderNode = [];\n        this.__semantics = semantics;\n    }\n    get _semanticsInfoArray() {\n        return this.__semantics;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/materials/AbstractMaterialNode.ts?");

/***/ }),

/***/ "./src/foundation/materials/ClassicShadingMaterialNode.ts":
/*!****************************************************************!*\
  !*** ./src/foundation/materials/ClassicShadingMaterialNode.ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ClassicShadingMaterialNode; });\n/* harmony import */ var _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions/ShaderSemantics */ \"./src/foundation/definitions/ShaderSemantics.ts\");\n/* harmony import */ var _AbstractMaterialNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbstractMaterialNode */ \"./src/foundation/materials/AbstractMaterialNode.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _math_Vector2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math/Vector2 */ \"./src/foundation/math/Vector2.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../webgl/WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _webgl_ClassicShader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../webgl/ClassicShader */ \"./src/webgl/ClassicShader.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\nclass ClassicShadingMaterialNode extends _AbstractMaterialNode__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        ClassicShadingMaterialNode.initDefaultTextures();\n        const shaderSemanticsInfoArray = [\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].DiffuseColorFactor, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Vec4, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Float, isPlural: false, prefix: 'material.', isSystem: false, initialValue: new _math_Vector4__WEBPACK_IMPORTED_MODULE_7__[\"default\"](1, 1, 1, 1) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].DiffuseColorTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, prefix: 'material.', isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](0, ClassicShadingMaterialNode.__dummyWhiteTextureUid) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].SpecularColorFactor, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Vec2, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Float, isPlural: false, prefix: 'material.', isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](1, 1) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].SpecularColorTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, prefix: 'material.', isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](1, ClassicShadingMaterialNode.__dummyWhiteTextureUid) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].NormalTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, prefix: 'material.', isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](2, ClassicShadingMaterialNode.__dummyWhiteTextureUid) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].OcclusionTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, prefix: 'material.', isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](3, ClassicShadingMaterialNode.__dummyWhiteTextureUid) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].EmissiveTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, prefix: 'material.', isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](4, ClassicShadingMaterialNode.__dummyBlackTextureUid) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].Shininess, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Scalar, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Float, isPlural: false, prefix: 'material.', isSystem: false, initialValue: 1 },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].Wireframe, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Vec3, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Float, isPlural: false, isSystem: false, initialValue: new _math_Vector3__WEBPACK_IMPORTED_MODULE_8__[\"default\"](0, 0, 1) },\n        ];\n        super(shaderSemanticsInfoArray);\n    }\n    static initDefaultTextures() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (ClassicShadingMaterialNode.__dummyWhiteTextureUid !== _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid) {\n                return;\n            }\n            const webglResourceRepository = _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getInstance();\n            ClassicShadingMaterialNode.__dummyWhiteTextureUid = webglResourceRepository.createDummyTexture();\n            ClassicShadingMaterialNode.__dummyBlackTextureUid = webglResourceRepository.createDummyTexture(\"rgba(0, 0, 0, 1)\");\n            ClassicShadingMaterialNode.__dummyBlackCubeTextureUid = webglResourceRepository.createDummyCubeTexture();\n        });\n    }\n}\nClassicShadingMaterialNode.__dummyWhiteTextureUid = _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\nClassicShadingMaterialNode.__dummyBlackTextureUid = _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\nClassicShadingMaterialNode.__dummyBlackCubeTextureUid = _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\nClassicShadingMaterialNode.shader = _webgl_ClassicShader__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getInstance();\n\n\n//# sourceURL=webpack:///./src/foundation/materials/ClassicShadingMaterialNode.ts?");

/***/ }),

/***/ "./src/foundation/materials/Material.ts":
/*!**********************************************!*\
  !*** ./src/foundation/materials/Material.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Material; });\n/* harmony import */ var _core_Object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Object */ \"./src/foundation/core/Object.ts\");\n/* harmony import */ var _definitions_AlphaMode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/AlphaMode */ \"./src/foundation/definitions/AlphaMode.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../webgl/WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _math_Vector2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math/Vector2 */ \"./src/foundation/math/Vector2.ts\");\n/* harmony import */ var _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n\n\n\n\n\n\n\nclass Material extends _core_Object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(materialNodes) {\n        super();\n        this.__materialNodes = [];\n        this.__fields = new Map();\n        this.__fieldsInfo = new Map();\n        this._shaderProgramUid = _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\n        this.alphaMode = _definitions_AlphaMode__WEBPACK_IMPORTED_MODULE_1__[\"AlphaMode\"].Opaque;\n        this.__materialNodes = materialNodes;\n        this.initialize();\n    }\n    initialize() {\n        this.__materialNodes.forEach((materialNode) => {\n            const semanticsInfoArray = materialNode._semanticsInfoArray;\n            semanticsInfoArray.forEach((semanticsInfo) => {\n                this.__fields.set(semanticsInfo.semantic, semanticsInfo.initialValue);\n                this.__fieldsInfo.set(semanticsInfo.semantic, semanticsInfo);\n            });\n        });\n    }\n    setParameter(shaderSemantic, value) {\n        this.__fields.set(shaderSemantic, value);\n    }\n    setTextureParameter(shaderSemantic, value) {\n        const vec2 = this.__fields.get(shaderSemantic);\n        this.__fields.set(shaderSemantic, new _math_Vector2__WEBPACK_IMPORTED_MODULE_5__[\"default\"](vec2.x, value));\n    }\n    getParameter(shaderSemantic) {\n        return this.__fields.get(shaderSemantic);\n    }\n    setUniformLocations(shaderProgramUid) {\n        const webglResourceRepository = _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n        let args = [];\n        this.__materialNodes.forEach((materialNode) => {\n            const semanticsInfoArray = materialNode._semanticsInfoArray;\n            args = args.concat(semanticsInfoArray);\n        });\n        webglResourceRepository.setupUniformLocations(shaderProgramUid, args);\n    }\n    setUniformValues(shaderProgramUid) {\n        const webglResourceRepository = _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n        const gl = webglResourceRepository.currentWebGLContextWrapper.getRawContext();\n        this.__fields.forEach((value, key) => {\n            const info = this.__fieldsInfo.get(key);\n            let setAsMatrix = false;\n            if (info.compositionType === _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Mat3 || info.compositionType === _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Mat4) {\n                setAsMatrix = true;\n            }\n            let componentType = 'f';\n            if (info.componentType === _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int || info.componentType === _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Short || info.componentType === _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Byte) {\n                componentType = 'i';\n            }\n            if (info.compositionType === _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D || info.compositionType === _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].TextureCube) {\n                webglResourceRepository.setUniformValue(shaderProgramUid, key, setAsMatrix, info.compositionType.getNumberOfComponents(), componentType, false, { x: value.x });\n            }\n            else if (info.compositionType !== _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Scalar) {\n                webglResourceRepository.setUniformValue(shaderProgramUid, key, setAsMatrix, info.compositionType.getNumberOfComponents(), componentType, true, { x: value.v });\n            }\n            else {\n                webglResourceRepository.setUniformValue(shaderProgramUid, key, setAsMatrix, info.compositionType.getNumberOfComponents(), componentType, false, { x: value });\n            }\n            if (info.compositionType === _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D) {\n                webglResourceRepository.bindTexture2D(value.x, value.y);\n            }\n            else if (info.compositionType === _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].TextureCube) {\n                webglResourceRepository.bindTextureCube(value.x, value.y);\n            }\n        });\n    }\n    createProgram(vertexShaderMethodDefinitions_uniform) {\n        const webglResourceRepository = _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n        this.__materialNodes.forEach((materialNode) => {\n            const glslShader = materialNode.constructor.shader;\n            const glslShaderClass = glslShader.constructor;\n            let vertexShader = glslShader.vertexShaderVariableDefinitions +\n                vertexShaderMethodDefinitions_uniform +\n                glslShader.vertexShaderBody;\n            let fragmentShader = glslShader.fragmentShader;\n            this._shaderProgramUid = webglResourceRepository.createShaderProgram({\n                vertexShaderStr: vertexShader,\n                fragmentShaderStr: fragmentShader,\n                attributeNames: glslShaderClass.attributeNames,\n                attributeSemantics: glslShaderClass.attributeSemantics\n            });\n        });\n    }\n    isBlend() {\n        if (this.alphaMode === _definitions_AlphaMode__WEBPACK_IMPORTED_MODULE_1__[\"AlphaMode\"].Blend) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/materials/Material.ts?");

/***/ }),

/***/ "./src/foundation/materials/PbrShadingMaterialNode.ts":
/*!************************************************************!*\
  !*** ./src/foundation/materials/PbrShadingMaterialNode.ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PbrShadingMaterialNode; });\n/* harmony import */ var _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions/ShaderSemantics */ \"./src/foundation/definitions/ShaderSemantics.ts\");\n/* harmony import */ var _AbstractMaterialNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbstractMaterialNode */ \"./src/foundation/materials/AbstractMaterialNode.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _math_Vector2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math/Vector2 */ \"./src/foundation/math/Vector2.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../webgl/WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _webgl_PBRShader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../webgl/PBRShader */ \"./src/webgl/PBRShader.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\nclass PbrShadingMaterialNode extends _AbstractMaterialNode__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        PbrShadingMaterialNode.initDefaultTextures();\n        const shaderSemanticsInfoArray = [\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].BaseColorFactor, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Vec4, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Float, isPlural: false, prefix: 'material.', isSystem: false, initialValue: new _math_Vector4__WEBPACK_IMPORTED_MODULE_7__[\"default\"](1, 1, 1, 1) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].BaseColorTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](0, PbrShadingMaterialNode.__dummyWhiteTextureUid) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].MetallicRoughnessFactor, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Vec2, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Float, isPlural: false, prefix: 'material.', isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](1, 1) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].MetallicRoughnessTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](1, PbrShadingMaterialNode.__dummyWhiteTextureUid) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].NormalTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](2, PbrShadingMaterialNode.__dummyWhiteTextureUid) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].OcclusionTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](3, PbrShadingMaterialNode.__dummyWhiteTextureUid) },\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].EmissiveTexture, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Texture2D, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Int, isPlural: false, isSystem: false, initialValue: new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](4, PbrShadingMaterialNode.__dummyBlackTextureUid) },\n            //      {semantic: ShaderSemantics.BrdfLutTexture, compositionType: CompositionType.Texture2D, componentType: ComponentType.Int, isPlural: false, isSystem: false, initialValue: new Vector2(6, PbrShadingMaterialNode.__pbrCookTorranceBrdfLutDataUrlUid)},\n            // {semantic: ShaderSemantics.DiffuseEnvTexture, compositionType: CompositionType.TextureCube, componentType: ComponentType.Int, isPlural: false, isSystem: false, initialValue: new Vector2(7, PbrShadingMaterialNode.dummyBlackCubeTextureUid)},\n            // {semantic: ShaderSemantics.SpecularEnvTexture, compositionType: CompositionType.TextureCube, componentType: ComponentType.Int, isPlural: false, isSystem: false, initialValue: new Vector2(8, PbrShadingMaterialNode.dummyBlackCubeTextureUid)},\n            // {semantic: ShaderSemantics.IBLParameter, compositionType: CompositionType.Vec3, componentType: ComponentType.Float, isPlural: false, isSystem: false},\n            { semantic: _definitions_ShaderSemantics__WEBPACK_IMPORTED_MODULE_0__[\"ShaderSemantics\"].Wireframe, compositionType: _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Vec3, componentType: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_4__[\"ComponentType\"].Float, isPlural: false, isSystem: false, initialValue: new _math_Vector3__WEBPACK_IMPORTED_MODULE_8__[\"default\"](0, 0, 1) },\n        ];\n        super(shaderSemanticsInfoArray);\n    }\n    static initDefaultTextures() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (PbrShadingMaterialNode.__dummyWhiteTextureUid !== _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid) {\n                return;\n            }\n            const webglResourceRepository = _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getInstance();\n            PbrShadingMaterialNode.__dummyWhiteTextureUid = webglResourceRepository.createDummyTexture();\n            PbrShadingMaterialNode.__dummyBlackTextureUid = webglResourceRepository.createDummyTexture(\"rgba(0, 0, 0, 1)\");\n            PbrShadingMaterialNode.__dummyBlackCubeTextureUid = webglResourceRepository.createDummyCubeTexture();\n            // const pbrCookTorranceBrdfLutDataUrl = ModuleManager.getInstance().getModule('pbr').pbrCookTorranceBrdfLutDataUrl;\n            // this.__pbrCookTorranceBrdfLutDataUrlUid = await webglResourceRepository.createTextureFromDataUri(pbrCookTorranceBrdfLutDataUrl,\n            //   {\n            //     level: 0, internalFormat: PixelFormat.RGBA,\n            //       border: 0, format: PixelFormat.RGBA, type: ComponentType.Float, magFilter: TextureParameter.Nearest, minFilter: TextureParameter.Nearest,\n            //       wrapS: TextureParameter.ClampToEdge, wrapT: TextureParameter.ClampToEdge, generateMipmap: false, anisotropy: false\n            //     }\n            //   );\n        });\n    }\n    convertValue(shaderSemantic, value) {\n    }\n}\nPbrShadingMaterialNode.__dummyWhiteTextureUid = _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\nPbrShadingMaterialNode.__dummyBlackTextureUid = _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\nPbrShadingMaterialNode.__dummyBlackCubeTextureUid = _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\nPbrShadingMaterialNode.__pbrCookTorranceBrdfLutDataUrlUid = _renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\nPbrShadingMaterialNode.shader = _webgl_PBRShader__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getInstance();\n\n\n//# sourceURL=webpack:///./src/foundation/materials/PbrShadingMaterialNode.ts?");

/***/ }),

/***/ "./src/foundation/math/AABB.ts":
/*!*************************************!*\
  !*** ./src/foundation/math/AABB.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AABB; });\n/* harmony import */ var _Vector3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _Vector4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _MutableVector3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MutableVector3 */ \"./src/foundation/math/MutableVector3.ts\");\n\n\n\nclass AABB {\n    constructor() {\n        this.__min = new _MutableVector3__WEBPACK_IMPORTED_MODULE_2__[\"default\"](Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n        this.__max = new _MutableVector3__WEBPACK_IMPORTED_MODULE_2__[\"default\"](-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n        this.__centerPoint = _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zero();\n        this.__lengthCenterToCorner = 0;\n        this.__isCenterPointDirty = false;\n        this.__isLengthCenterToCornerDirty = false;\n    }\n    clone() {\n        let instance = new AABB();\n        instance.__max = this.__max.clone();\n        instance.__min = this.__min.clone();\n        instance.__centerPoint = this.__centerPoint.clone();\n        instance.__lengthCenterToCorner = this.__lengthCenterToCorner;\n        return instance;\n    }\n    set minPoint(val) {\n        this.__min = new _MutableVector3__WEBPACK_IMPORTED_MODULE_2__[\"default\"](val);\n    }\n    get minPoint() {\n        return new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.__min);\n    }\n    set maxPoint(val) {\n        this.__max = new _MutableVector3__WEBPACK_IMPORTED_MODULE_2__[\"default\"](val);\n    }\n    get maxPoint() {\n        return new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.__max);\n    }\n    isVanilla() {\n        if (this.__min.x >= Number.MAX_VALUE && this.__min.y >= Number.MAX_VALUE && this.__min.z >= Number.MAX_VALUE\n            && this.__max.x <= -Number.MAX_VALUE && this.__max.y <= -Number.MAX_VALUE && this.__max.z <= -Number.MAX_VALUE) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    addPosition(positionVector) {\n        this.__min.x = (positionVector.x < this.__min.x) ? positionVector.x : this.__min.x;\n        this.__min.y = (positionVector.y < this.__min.y) ? positionVector.y : this.__min.y;\n        this.__min.z = (positionVector.z < this.__min.z) ? positionVector.z : this.__min.z;\n        this.__max.x = (this.__max.x < positionVector.x) ? positionVector.x : this.__max.x;\n        this.__max.y = (this.__max.y < positionVector.y) ? positionVector.y : this.__max.y;\n        this.__max.z = (this.__max.z < positionVector.z) ? positionVector.z : this.__max.z;\n        this.__isCenterPointDirty = true;\n        this.__isLengthCenterToCornerDirty = true;\n        return positionVector;\n    }\n    addPositionWithArray(array, index) {\n        this.__min.x = (array[index + 0] < this.__min.x) ? array[index + 0] : this.__min.x;\n        this.__min.y = (array[index + 1] < this.__min.y) ? array[index + 1] : this.__min.y;\n        this.__min.z = (array[index + 2] < this.__min.z) ? array[index + 2] : this.__min.z;\n        this.__max.x = (this.__max.x < array[index + 0]) ? array[index + 0] : this.__max.x;\n        this.__max.y = (this.__max.y < array[index + 1]) ? array[index + 1] : this.__max.y;\n        this.__max.z = (this.__max.z < array[index + 2]) ? array[index + 2] : this.__max.z;\n        this.__isCenterPointDirty = true;\n        this.__isLengthCenterToCornerDirty = true;\n        return array;\n    }\n    mergeAABB(aabb) {\n        var isUpdated = false;\n        if (aabb.isVanilla()) {\n            return isUpdated;\n        }\n        if (this.isVanilla()) {\n            this.__min.x = aabb.minPoint.x;\n            this.__min.y = aabb.minPoint.y;\n            this.__min.z = aabb.minPoint.z;\n            this.__max.x = aabb.maxPoint.x;\n            this.__max.y = aabb.maxPoint.y;\n            this.__max.z = aabb.maxPoint.z;\n            isUpdated = true;\n            return isUpdated;\n        }\n        if (aabb.minPoint.x < this.__min.x) {\n            this.__min.x = aabb.minPoint.x;\n            isUpdated = true;\n        }\n        if (aabb.minPoint.y < this.__min.y) {\n            this.__min.y = aabb.minPoint.y;\n            isUpdated = true;\n        }\n        if (aabb.minPoint.z < this.__min.z) {\n            this.__min.z = aabb.minPoint.z;\n            isUpdated = true;\n        }\n        if (this.__max.x < aabb.maxPoint.x) {\n            this.__max.x = aabb.maxPoint.x;\n            isUpdated = true;\n        }\n        if (this.__max.y < aabb.maxPoint.y) {\n            this.__max.y = aabb.maxPoint.y;\n            isUpdated = true;\n        }\n        if (this.__max.z < aabb.maxPoint.z) {\n            this.__max.z = aabb.maxPoint.z;\n            isUpdated = true;\n        }\n        this.__isCenterPointDirty = true;\n        this.__isLengthCenterToCornerDirty = true;\n        return isUpdated;\n    }\n    get centerPoint() {\n        if (this.__isCenterPointDirty) {\n            this.__centerPoint = _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.__min, this.__max).divide(2);\n            this.__isCenterPointDirty = false;\n        }\n        return this.__centerPoint;\n    }\n    get lengthCenterToCorner() {\n        if (this.__isLengthCenterToCornerDirty) {\n            const lengthCenterToCorner = _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].lengthBtw(this.centerPoint, this.maxPoint);\n            this.__lengthCenterToCorner = (lengthCenterToCorner !== lengthCenterToCorner) ? 0 : lengthCenterToCorner;\n            this.__isLengthCenterToCornerDirty = false;\n        }\n        return this.__lengthCenterToCorner;\n    }\n    get sizeX() {\n        return (this.__max.x - this.__min.x);\n    }\n    get sizeY() {\n        return (this.__max.y - this.__min.y);\n    }\n    get sizeZ() {\n        return (this.__max.z - this.__min.z);\n    }\n    static multiplyMatrix(matrix, aabb) {\n        if (aabb.isVanilla()) {\n            return aabb.clone();\n        }\n        var newAabb = new AABB();\n        let AABB_0 = new _Vector4__WEBPACK_IMPORTED_MODULE_1__[\"default\"](aabb.__min.x, aabb.__min.y, aabb.__min.z, 1);\n        let AABB_1 = new _Vector4__WEBPACK_IMPORTED_MODULE_1__[\"default\"](aabb.__max.x, aabb.__min.y, aabb.__min.z, 1);\n        let AABB_2 = new _Vector4__WEBPACK_IMPORTED_MODULE_1__[\"default\"](aabb.__min.x, aabb.__max.y, aabb.__min.z, 1);\n        let AABB_3 = new _Vector4__WEBPACK_IMPORTED_MODULE_1__[\"default\"](aabb.__min.x, aabb.__min.y, aabb.__max.z, 1);\n        let AABB_4 = new _Vector4__WEBPACK_IMPORTED_MODULE_1__[\"default\"](aabb.__min.x, aabb.__max.y, aabb.__max.z, 1);\n        let AABB_5 = new _Vector4__WEBPACK_IMPORTED_MODULE_1__[\"default\"](aabb.__max.x, aabb.__min.y, aabb.__max.z, 1);\n        let AABB_6 = new _Vector4__WEBPACK_IMPORTED_MODULE_1__[\"default\"](aabb.__max.x, aabb.__max.y, aabb.__min.z, 1);\n        let AABB_7 = new _Vector4__WEBPACK_IMPORTED_MODULE_1__[\"default\"](aabb.__max.x, aabb.__max.y, aabb.__max.z, 1);\n        newAabb.addPosition(new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](matrix.multiplyVector(AABB_0)));\n        newAabb.addPosition(new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](matrix.multiplyVector(AABB_1)));\n        newAabb.addPosition(new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](matrix.multiplyVector(AABB_2)));\n        newAabb.addPosition(new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](matrix.multiplyVector(AABB_3)));\n        newAabb.addPosition(new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](matrix.multiplyVector(AABB_4)));\n        newAabb.addPosition(new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](matrix.multiplyVector(AABB_5)));\n        newAabb.addPosition(new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](matrix.multiplyVector(AABB_6)));\n        newAabb.addPosition(new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](matrix.multiplyVector(AABB_7)));\n        return newAabb;\n    }\n    toString() {\n        return 'AABB_min: ' + this.__min + '\\n' + 'AABB_max: ' + this.__max + '\\n'\n            + 'centerPoint: ' + this.__centerPoint + '\\n' + 'lengthCenterToCorner: ' + this.__lengthCenterToCorner;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/AABB.ts?");

/***/ }),

/***/ "./src/foundation/math/MathUtil.ts":
/*!*****************************************!*\
  !*** ./src/foundation/math/MathUtil.ts ***!
  \*****************************************/
/*! exports provided: MathUtil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MathUtil\", function() { return MathUtil; });\n//import GLBoost from '../../globals';\nfunction radianToDegree(rad) {\n    return rad * 180 / Math.PI;\n}\nfunction degreeToRadian(deg) {\n    return deg * Math.PI / 180;\n}\n// https://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\nconst toHalfFloat = (function () {\n    var floatView = new Float32Array(1);\n    var int32View = new Int32Array(floatView.buffer);\n    /* This method is faster than the OpenEXR implementation (very often\n      * used, eg. in Ogre), with the additional benefit of rounding, inspired\n      * by James Tursa?s half-precision code. */\n    return function toHalf(val) {\n        floatView[0] = val;\n        var x = int32View[0];\n        var bits = (x >> 16) & 0x8000; /* Get the sign */\n        var m = (x >> 12) & 0x07ff; /* Keep one extra bit for rounding */\n        var e = (x >> 23) & 0xff; /* Using int is faster here */\n        /* If zero, or denormal, or exponent underflows too much for a denormal\n          * half, return signed zero. */\n        if (e < 103) {\n            return bits;\n        }\n        /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n        if (e > 142) {\n            bits |= 0x7c00;\n            /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n                  * not Inf, so make sure we set one mantissa bit too. */\n            bits |= ((e == 255) ? 0 : 1) && (x & 0x007fffff);\n            return bits;\n        }\n        /* If exponent underflows but not too much, return a denormal */\n        if (e < 113) {\n            m |= 0x0800;\n            /* Extra rounding may overflow and set mantissa to 0 and exponent\n              * to 1, which is OK. */\n            bits |= (m >> (114 - e)) + ((m >> (113 - e)) & 1);\n            return bits;\n        }\n        bits |= ((e - 112) << 10) | (m >> 1);\n        /* Extra rounding. An overflow will set mantissa to 0 and increment\n          * the exponent, which is OK. */\n        bits += m & 1;\n        return bits;\n    };\n}());\n/**\n * check whether or not this texture size is power of two.\n *\n * @param x texture size.\n * @returns check whether or not the size x is power of two.\n */\nfunction isPowerOfTwo(x) {\n    return (x & (x - 1)) == 0;\n}\nfunction isPowerOfTwoTexture(width, height) {\n    return isPowerOfTwo(width) && isPowerOfTwo(height);\n}\nconst MathUtil = Object.freeze({ radianToDegree, degreeToRadian, toHalfFloat, isPowerOfTwo, isPowerOfTwoTexture });\n\n\n//# sourceURL=webpack:///./src/foundation/math/MathUtil.ts?");

/***/ }),

/***/ "./src/foundation/math/Matrix33.ts":
/*!*****************************************!*\
  !*** ./src/foundation/math/Matrix33.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Matrix33; });\n/* harmony import */ var _Vector3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n// import GLBoost from '../../globals';\n\n\nclass Matrix33 {\n    constructor(m0, m1, m2, m3, m4, m5, m6, m7, m8, isColumnMajor = false, notCopyFloatArray = false) {\n        const _isColumnMajor = (arguments.length === 10) ? isColumnMajor : m1;\n        const _notCopyFloatArray = (arguments.length === 3) ? notCopyFloatArray : false;\n        const m = m0;\n        if (m == null) {\n            this.v = new Float32Array(0);\n            return;\n        }\n        if (arguments.length === 9) {\n            this.v = new Float32Array(9);\n            if (_isColumnMajor === true) {\n                let m = arguments;\n                this.v[0] = m[0];\n                this.v[3] = m[3];\n                this.v[6] = m[6];\n                this.v[1] = m[1];\n                this.v[4] = m[4];\n                this.v[7] = m[7];\n                this.v[2] = m[2];\n                this.v[5] = m[5];\n                this.v[8] = m[8];\n            }\n            else {\n                let m = arguments;\n                // arguments[0-8] must be row major values if isColumnMajor is false\n                this.v[0] = m[0];\n                this.v[3] = m[1];\n                this.v[6] = m[2];\n                this.v[1] = m[3];\n                this.v[4] = m[4];\n                this.v[7] = m[5];\n                this.v[2] = m[6];\n                this.v[5] = m[7];\n                this.v[8] = m[8];\n            }\n        }\n        else if (Array.isArray(m)) {\n            this.v = new Float32Array(9);\n            if (_isColumnMajor === true) {\n                this.v[0] = m[0];\n                this.v[3] = m[3];\n                this.v[6] = m[6];\n                this.v[1] = m[1];\n                this.v[4] = m[4];\n                this.v[7] = m[7];\n                this.v[2] = m[2];\n                this.v[5] = m[5];\n                this.v[8] = m[8];\n            }\n            else {\n                // 'm' must be row major array if isColumnMajor is false\n                this.v[0] = m[0];\n                this.v[3] = m[1];\n                this.v[6] = m[2];\n                this.v[1] = m[3];\n                this.v[4] = m[4];\n                this.v[7] = m[5];\n                this.v[2] = m[6];\n                this.v[5] = m[7];\n                this.v[8] = m[8];\n            }\n        }\n        else if (m instanceof Float32Array) {\n            if (_notCopyFloatArray) {\n                this.v = m;\n            }\n            else {\n                this.v = new Float32Array(9);\n                if (_isColumnMajor === true) {\n                    this.v[0] = m[0];\n                    this.v[3] = m[3];\n                    this.v[6] = m[6];\n                    this.v[1] = m[1];\n                    this.v[4] = m[4];\n                    this.v[7] = m[7];\n                    this.v[2] = m[2];\n                    this.v[5] = m[5];\n                    this.v[8] = m[8];\n                }\n                else {\n                    // 'm' must be row major array if isColumnMajor is false\n                    this.v[0] = m[0];\n                    this.v[3] = m[1];\n                    this.v[6] = m[2];\n                    this.v[1] = m[3];\n                    this.v[4] = m[4];\n                    this.v[7] = m[5];\n                    this.v[2] = m[6];\n                    this.v[5] = m[7];\n                    this.v[8] = m[8];\n                }\n            }\n        }\n        else if (!!m && typeof m.m22 !== 'undefined') {\n            if (_notCopyFloatArray) {\n                this.v = m.v;\n            }\n            else {\n                this.v = new Float32Array(9);\n                if (_isColumnMajor === true) {\n                    const v = m.v;\n                    this.v[0] = v[0];\n                    this.v[3] = v[3];\n                    this.v[6] = v[6];\n                    this.v[1] = v[1];\n                    this.v[4] = v[4];\n                    this.v[7] = v[7];\n                    this.v[2] = v[2];\n                    this.v[5] = v[5];\n                    this.v[8] = v[8];\n                }\n                else {\n                    const v = m.v;\n                    // 'm' must be row major array if isColumnMajor is false\n                    this.v[0] = v[0];\n                    this.v[3] = v[1];\n                    this.v[6] = v[2];\n                    this.v[1] = v[3];\n                    this.v[4] = v[4];\n                    this.v[7] = v[5];\n                    this.v[2] = v[6];\n                    this.v[5] = v[7];\n                    this.v[8] = v[8];\n                }\n            }\n        }\n        else if (!!m && typeof m.className !== 'undefined' && m.className === 'Quaternion') {\n            this.v = new Float32Array(9);\n            const q = m;\n            const sx = q.x * q.x;\n            const sy = q.y * q.y;\n            const sz = q.z * q.z;\n            const cx = q.y * q.z;\n            const cy = q.x * q.z;\n            const cz = q.x * q.y;\n            const wx = q.w * q.x;\n            const wy = q.w * q.y;\n            const wz = q.w * q.z;\n            this.v[0] = 1.0 - 2.0 * (sy + sz);\n            this.v[3] = 2.0 * (cz - wz);\n            this.v[6] = 2.0 * (cy + wy);\n            this.v[1] = 2.0 * (cz + wz);\n            this.v[4] = 1.0 - 2.0 * (sx + sz);\n            this.v[7] = 2.0 * (cx - wx);\n            this.v[2] = 2.0 * (cy - wy);\n            this.v[5] = 2.0 * (cx + wx);\n            this.v[8] = 1.0 - 2.0 * (sx + sy);\n        }\n        else {\n            this.v = new Float32Array(9);\n            this.v[0] = 1;\n            this.v[3] = 0;\n            this.v[6] = 0;\n            this.v[1] = 0;\n            this.v[4] = 1;\n            this.v[7] = 0;\n            this.v[2] = 0;\n            this.v[5] = 0;\n            this.v[8] = 1;\n        }\n    }\n    get className() {\n        return this.constructor.name;\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__[\"CompositionType\"].Mat3;\n    }\n    multiplyVector(vec) {\n        var x = this.m00 * vec.x + this.m01 * vec.y + this.m02 * vec.z;\n        var y = this.m10 * vec.x + this.m11 * vec.y + this.m12 * vec.z;\n        var z = this.m20 * vec.x + this.m21 * vec.y + this.m22 * vec.z;\n        return new vec.constructor(x, y, z);\n    }\n    /**\n     * Make this identity matrix（static method version）\n     */\n    static identity() {\n        return new Matrix33(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    }\n    static dummy() {\n        return new Matrix33(null);\n    }\n    isDummy() {\n        if (this.v.length === 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    clone() {\n        return new Matrix33(this.v[0], this.v[3], this.v[6], this.v[1], this.v[4], this.v[7], this.v[2], this.v[5], this.v[8]);\n    }\n    /**\n     * Create X oriented Rotation Matrix\n     */\n    static rotateX(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new Matrix33(1, 0, 0, 0, cos, -sin, 0, sin, cos);\n    }\n    /**\n     * Create Y oriented Rotation Matrix\n     */\n    static rotateY(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new Matrix33(cos, 0, sin, 0, 1, 0, -sin, 0, cos);\n    }\n    /**\n     * Create Z oriented Rotation Matrix\n     */\n    static rotateZ(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new Matrix33(cos, -sin, 0, sin, cos, 0, 0, 0, 1);\n    }\n    static rotateXYZ(x, y, z) {\n        return Matrix33.multiply(Matrix33.multiply(Matrix33.rotateZ(z), Matrix33.rotateY(y)), Matrix33.rotateX(x));\n    }\n    static rotate(vec3) {\n        return Matrix33.multiply(Matrix33.multiply(Matrix33.rotateZ(vec3.z), Matrix33.rotateY(vec3.y)), Matrix33.rotateX(vec3.x));\n    }\n    static scale(vec) {\n        return new Matrix33(vec.x, 0, 0, 0, vec.y, 0, 0, 0, vec.z);\n    }\n    /**\n     * zero matrix(static version)\n     */\n    static zero() {\n        return new Matrix33(0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n    /**\n     * transpose(static version)\n     */\n    static transpose(mat) {\n        var mat_t = new Matrix33(mat.m00, mat.m10, mat.m20, mat.m01, mat.m11, mat.m21, mat.m02, mat.m12, mat.m22);\n        return mat_t;\n    }\n    /**\n     * multiply matrixs (static version)\n     */\n    static multiply(l_m, r_m) {\n        var m00 = l_m.m00 * r_m.m00 + l_m.m01 * r_m.m10 + l_m.m02 * r_m.m20;\n        var m10 = l_m.m10 * r_m.m00 + l_m.m11 * r_m.m10 + l_m.m12 * r_m.m20;\n        var m20 = l_m.m20 * r_m.m00 + l_m.m21 * r_m.m10 + l_m.m22 * r_m.m20;\n        var m01 = l_m.m00 * r_m.m01 + l_m.m01 * r_m.m11 + l_m.m02 * r_m.m21;\n        var m11 = l_m.m10 * r_m.m01 + l_m.m11 * r_m.m11 + l_m.m12 * r_m.m21;\n        var m21 = l_m.m20 * r_m.m01 + l_m.m21 * r_m.m11 + l_m.m22 * r_m.m21;\n        var m02 = l_m.m00 * r_m.m02 + l_m.m01 * r_m.m12 + l_m.m02 * r_m.m22;\n        var m12 = l_m.m10 * r_m.m02 + l_m.m11 * r_m.m12 + l_m.m12 * r_m.m22;\n        var m22 = l_m.m20 * r_m.m02 + l_m.m21 * r_m.m12 + l_m.m22 * r_m.m22;\n        return new Matrix33(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n    }\n    determinant() {\n        return this.m00 * this.m11 * this.m22 + this.m10 * this.m21 * this.m02 + this.m20 * this.m01 * this.m12\n            - this.m00 * this.m21 * this.m12 - this.m20 * this.m11 * this.m02 - this.m10 * this.m01 * this.m22;\n    }\n    static determinant(mat) {\n        return mat.m00 * mat.m11 * mat.m22 + mat.m10 * mat.m21 * mat.m02 + mat.m20 * mat.m01 * mat.m12\n            - mat.m00 * mat.m21 * mat.m12 - mat.m20 * mat.m11 * mat.m02 - mat.m10 * mat.m01 * mat.m22;\n    }\n    static invert(mat) {\n        var det = mat.determinant();\n        var m00 = (mat.m11 * mat.m22 - mat.m12 * mat.m21) / det;\n        var m01 = (mat.m02 * mat.m21 - mat.m01 * mat.m22) / det;\n        var m02 = (mat.m01 * mat.m12 - mat.m02 * mat.m11) / det;\n        var m10 = (mat.m12 * mat.m20 - mat.m10 * mat.m22) / det;\n        var m11 = (mat.m00 * mat.m22 - mat.m02 * mat.m20) / det;\n        var m12 = (mat.m02 * mat.m10 - mat.m00 * mat.m12) / det;\n        var m20 = (mat.m10 * mat.m21 - mat.m11 * mat.m20) / det;\n        var m21 = (mat.m01 * mat.m20 - mat.m00 * mat.m21) / det;\n        var m22 = (mat.m00 * mat.m11 - mat.m01 * mat.m10) / det;\n        return new Matrix33(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n    }\n    get m00() {\n        return this.v[0];\n    }\n    get m10() {\n        return this.v[1];\n    }\n    get m20() {\n        return this.v[2];\n    }\n    get m01() {\n        return this.v[3];\n    }\n    get m11() {\n        return this.v[4];\n    }\n    get m21() {\n        return this.v[5];\n    }\n    get m02() {\n        return this.v[6];\n    }\n    get m12() {\n        return this.v[7];\n    }\n    get m22() {\n        return this.v[8];\n    }\n    toString() {\n        return this.m00 + ' ' + this.m01 + ' ' + this.m02 + '\\n' +\n            this.m10 + ' ' + this.m11 + ' ' + this.m12 + '\\n' +\n            this.m20 + ' ' + this.m21 + ' ' + this.m22 + '\\n';\n    }\n    nearZeroToZero(value) {\n        if (Math.abs(value) < 0.00001) {\n            value = 0;\n        }\n        else if (0.99999 < value && value < 1.00001) {\n            value = 1;\n        }\n        else if (-1.00001 < value && value < -0.99999) {\n            value = -1;\n        }\n        return value;\n    }\n    toStringApproximately() {\n        return this.nearZeroToZero(this.m00) + ' ' + this.nearZeroToZero(this.m01) + ' ' + this.nearZeroToZero(this.m02) + '\\n' +\n            this.nearZeroToZero(this.m10) + ' ' + this.nearZeroToZero(this.m11) + ' ' + this.nearZeroToZero(this.m12) + ' \\n' +\n            this.nearZeroToZero(this.m20) + ' ' + this.nearZeroToZero(this.m21) + ' ' + this.nearZeroToZero(this.m22) + '\\n';\n    }\n    getScale() {\n        return new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.sqrt(this.m00 * this.m00 + this.m01 * this.m01 + this.m02 * this.m02), Math.sqrt(this.m10 * this.m10 + this.m11 * this.m11 + this.m12 * this.m12), Math.sqrt(this.m20 * this.m20 + this.m21 * this.m21 + this.m22 * this.m22));\n    }\n    isEqual(mat, delta = Number.EPSILON) {\n        if (Math.abs(mat.v[0] - this.v[0]) < delta &&\n            Math.abs(mat.v[1] - this.v[1]) < delta &&\n            Math.abs(mat.v[2] - this.v[2]) < delta &&\n            Math.abs(mat.v[3] - this.v[3]) < delta &&\n            Math.abs(mat.v[4] - this.v[4]) < delta &&\n            Math.abs(mat.v[5] - this.v[5]) < delta &&\n            Math.abs(mat.v[6] - this.v[6]) < delta &&\n            Math.abs(mat.v[7] - this.v[7]) < delta &&\n            Math.abs(mat.v[8] - this.v[8]) < delta) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/Matrix33.ts?");

/***/ }),

/***/ "./src/foundation/math/Matrix44.ts":
/*!*****************************************!*\
  !*** ./src/foundation/math/Matrix44.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Matrix44; });\n/* harmony import */ var _Vector3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _Quaternion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Quaternion */ \"./src/foundation/math/Quaternion.ts\");\n/* harmony import */ var _Vector4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n//import GLBoost from '../../globals';\n\n\n\n\nconst FloatArray = Float32Array;\nclass Matrix44 {\n    constructor(m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, isColumnMajor = false, notCopyFloatArray = false) {\n        const _isColumnMajor = (arguments.length >= 16) ? isColumnMajor : m1;\n        const _notCopyFloatArray = (arguments.length >= 16) ? notCopyFloatArray : m2;\n        const m = m0;\n        if (m == null) {\n            this.v = new FloatArray(0);\n            return;\n        }\n        if (arguments.length >= 16 && arguments[3] != null) {\n            this.v = new FloatArray(16); // Data order is column major\n            let m = arguments;\n            if (_isColumnMajor === true) {\n                this.v[0] = m[0];\n                this.v[4] = m[4];\n                this.v[8] = m[8];\n                this.v[12] = m[12];\n                this.v[1] = m[1];\n                this.v[5] = m[5];\n                this.v[9] = m[9];\n                this.v[13] = m[13];\n                this.v[2] = m[2];\n                this.v[6] = m[6];\n                this.v[10] = m[10];\n                this.v[14] = m[14];\n                this.v[3] = m[3];\n                this.v[7] = m[7];\n                this.v[11] = m[11];\n                this.v[15] = m[15];\n            }\n            else {\n                // arguments[0-15] must be row major values if isColumnMajor is false\n                this.v[0] = m[0];\n                this.v[4] = m[1];\n                this.v[8] = m[2];\n                this.v[12] = m[3];\n                this.v[1] = m[4];\n                this.v[5] = m[5];\n                this.v[9] = m[6];\n                this.v[13] = m[7];\n                this.v[2] = m[8];\n                this.v[6] = m[9];\n                this.v[10] = m[10];\n                this.v[14] = m[11];\n                this.v[3] = m[12];\n                this.v[7] = m[13];\n                this.v[11] = m[14];\n                this.v[15] = m[15];\n            }\n        }\n        else if (Array.isArray(m)) {\n            this.v = new FloatArray(16);\n            if (_isColumnMajor === true) {\n                this.v[0] = m[0];\n                this.v[4] = m[4];\n                this.v[8] = m[8];\n                this.v[12] = m[12];\n                this.v[1] = m[1];\n                this.v[5] = m[5];\n                this.v[9] = m[9];\n                this.v[13] = m[13];\n                this.v[2] = m[2];\n                this.v[6] = m[6];\n                this.v[10] = m[10];\n                this.v[14] = m[14];\n                this.v[3] = m[3];\n                this.v[7] = m[7];\n                this.v[11] = m[11];\n                this.v[15] = m[15];\n            }\n            else {\n                // 'm' must be row major values if isColumnMajor is false\n                this.v[0] = m[0];\n                this.v[4] = m[1];\n                this.v[8] = m[2];\n                this.v[12] = m[3];\n                this.v[1] = m[4];\n                this.v[5] = m[5];\n                this.v[9] = m[6];\n                this.v[13] = m[7];\n                this.v[2] = m[8];\n                this.v[6] = m[9];\n                this.v[10] = m[10];\n                this.v[14] = m[11];\n                this.v[3] = m[12];\n                this.v[7] = m[13];\n                this.v[11] = m[14];\n                this.v[15] = m[15];\n            }\n        }\n        else if (m instanceof FloatArray) {\n            if (_notCopyFloatArray) {\n                this.v = m;\n            }\n            else {\n                this.v = new FloatArray(16);\n                if (_isColumnMajor === true) {\n                    this.v[0] = m[0];\n                    this.v[4] = m[4];\n                    this.v[8] = m[8];\n                    this.v[12] = m[12];\n                    this.v[1] = m[1];\n                    this.v[5] = m[5];\n                    this.v[9] = m[9];\n                    this.v[13] = m[13];\n                    this.v[2] = m[2];\n                    this.v[6] = m[6];\n                    this.v[10] = m[10];\n                    this.v[14] = m[14];\n                    this.v[3] = m[3];\n                    this.v[7] = m[7];\n                    this.v[11] = m[11];\n                    this.v[15] = m[15];\n                }\n                else {\n                    // 'm' must be row major values if isColumnMajor is false\n                    this.v[0] = m[0];\n                    this.v[4] = m[1];\n                    this.v[8] = m[2];\n                    this.v[12] = m[3];\n                    this.v[1] = m[4];\n                    this.v[5] = m[5];\n                    this.v[9] = m[6];\n                    this.v[13] = m[7];\n                    this.v[2] = m[8];\n                    this.v[6] = m[9];\n                    this.v[10] = m[10];\n                    this.v[14] = m[11];\n                    this.v[3] = m[12];\n                    this.v[7] = m[13];\n                    this.v[11] = m[14];\n                    this.v[15] = m[15];\n                }\n            }\n        }\n        else if (!!m && typeof m.m33 !== 'undefined' && typeof m.m22 !== 'undefined') {\n            if (_notCopyFloatArray) {\n                this.v = m.v;\n            }\n            else {\n                this.v = new FloatArray(16);\n                const v = m.v;\n                if (_isColumnMajor === true) {\n                    this.v[0] = v[0];\n                    this.v[4] = v[4];\n                    this.v[8] = v[8];\n                    this.v[12] = v[12];\n                    this.v[1] = v[1];\n                    this.v[5] = v[5];\n                    this.v[9] = v[9];\n                    this.v[13] = v[13];\n                    this.v[2] = v[2];\n                    this.v[6] = v[6];\n                    this.v[10] = v[10];\n                    this.v[14] = v[14];\n                    this.v[3] = v[3];\n                    this.v[7] = v[7];\n                    this.v[11] = v[11];\n                    this.v[15] = v[15];\n                }\n                else {\n                    // 'm' must be row major values if isColumnMajor is false\n                    this.v[0] = v[0];\n                    this.v[4] = v[1];\n                    this.v[8] = v[2];\n                    this.v[12] = v[3];\n                    this.v[1] = v[4];\n                    this.v[5] = v[5];\n                    this.v[9] = v[6];\n                    this.v[13] = v[7];\n                    this.v[2] = v[8];\n                    this.v[6] = v[9];\n                    this.v[10] = v[10];\n                    this.v[14] = v[11];\n                    this.v[3] = v[12];\n                    this.v[7] = v[13];\n                    this.v[11] = v[14];\n                    this.v[15] = v[15];\n                }\n            }\n        }\n        else if (!!m && typeof m.m33 === 'undefined' && typeof m.m22 !== 'undefined') {\n            if (_notCopyFloatArray) {\n                this.v = m.v;\n            }\n            else {\n                this.v = new FloatArray(16);\n                const v = m.v;\n                if (_isColumnMajor === true) {\n                    this.v[0] = v[0];\n                    this.v[4] = v[3];\n                    this.v[8] = v[6];\n                    this.v[12] = 0;\n                    this.v[1] = v[1];\n                    this.v[5] = v[4];\n                    this.v[9] = v[7];\n                    this.v[13] = 0;\n                    this.v[2] = v[2];\n                    this.v[6] = v[5];\n                    this.v[10] = v[8];\n                    this.v[14] = 0;\n                    this.v[3] = 0;\n                    this.v[7] = 0;\n                    this.v[11] = 0;\n                    this.v[15] = 1;\n                }\n                else {\n                    // 'm' must be row major values if isColumnMajor is false\n                    this.v[0] = v[0];\n                    this.v[4] = v[1];\n                    this.v[8] = v[2];\n                    this.v[12] = 0;\n                    this.v[1] = v[3];\n                    this.v[5] = v[4];\n                    this.v[9] = v[5];\n                    this.v[13] = 0;\n                    this.v[2] = v[6];\n                    this.v[6] = v[7];\n                    this.v[10] = v[8];\n                    this.v[14] = 0;\n                    this.v[3] = 0;\n                    this.v[7] = 0;\n                    this.v[11] = 0;\n                    this.v[15] = 1;\n                }\n            }\n        }\n        else if (!!m && typeof m.className !== 'undefined' && m instanceof _Quaternion__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n            this.v = new FloatArray(16);\n            const sx = m.x * m.x;\n            const sy = m.y * m.y;\n            const sz = m.z * m.z;\n            const cx = m.y * m.z;\n            const cy = m.x * m.z;\n            const cz = m.x * m.y;\n            const wx = m.w * m.x;\n            const wy = m.w * m.y;\n            const wz = m.w * m.z;\n            this.v[0] = 1.0 - 2.0 * (sy + sz);\n            this.v[4] = 2.0 * (cz - wz);\n            this.v[8] = 2.0 * (cy + wy);\n            this.v[12] = 0;\n            this.v[1] = 2.0 * (cz + wz);\n            this.v[5] = 1.0 - 2.0 * (sx + sz);\n            this.v[9] = 2.0 * (cx - wx);\n            this.v[13] = 0;\n            this.v[2] = 2.0 * (cy - wy);\n            this.v[6] = 2.0 * (cx + wx);\n            this.v[10] = 1.0 - 2.0 * (sx + sy);\n            this.v[14] = 0;\n            this.v[3] = 0;\n            this.v[7] = 0;\n            this.v[11] = 0;\n            this.v[15] = 1;\n        }\n        else {\n            this.v = new FloatArray(16);\n            this.v[0] = 1;\n            this.v[4] = 0;\n            this.v[8] = 0;\n            this.v[12] = 0;\n            this.v[1] = 0;\n            this.v[5] = 1;\n            this.v[9] = 0;\n            this.v[13] = 0;\n            this.v[2] = 0;\n            this.v[6] = 0;\n            this.v[10] = 1;\n            this.v[14] = 0;\n            this.v[3] = 0;\n            this.v[7] = 0;\n            this.v[11] = 0;\n            this.v[15] = 1;\n        }\n    }\n    static dummy() {\n        return new Matrix44(null);\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_3__[\"CompositionType\"].Mat4;\n    }\n    isDummy() {\n        if (this.v.length === 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get className() {\n        return this.constructor.name;\n    }\n    clone() {\n        return new Matrix44(this.v[0], this.v[4], this.v[8], this.v[12], this.v[1], this.v[5], this.v[9], this.v[13], this.v[2], this.v[6], this.v[10], this.v[14], this.v[3], this.v[7], this.v[11], this.v[15]);\n    }\n    /**\n     * to the identity matrix（static版）\n     */\n    static identity() {\n        return new Matrix44(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    isEqual(mat, delta = Number.EPSILON) {\n        if (Math.abs(mat.v[0] - this.v[0]) < delta &&\n            Math.abs(mat.v[1] - this.v[1]) < delta &&\n            Math.abs(mat.v[2] - this.v[2]) < delta &&\n            Math.abs(mat.v[3] - this.v[3]) < delta &&\n            Math.abs(mat.v[4] - this.v[4]) < delta &&\n            Math.abs(mat.v[5] - this.v[5]) < delta &&\n            Math.abs(mat.v[6] - this.v[6]) < delta &&\n            Math.abs(mat.v[7] - this.v[7]) < delta &&\n            Math.abs(mat.v[8] - this.v[8]) < delta &&\n            Math.abs(mat.v[9] - this.v[9]) < delta &&\n            Math.abs(mat.v[10] - this.v[10]) < delta &&\n            Math.abs(mat.v[11] - this.v[11]) < delta &&\n            Math.abs(mat.v[12] - this.v[12]) < delta &&\n            Math.abs(mat.v[13] - this.v[13]) < delta &&\n            Math.abs(mat.v[14] - this.v[14]) < delta &&\n            Math.abs(mat.v[15] - this.v[15]) < delta) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    getTranslate() {\n        return new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.m03, this.m13, this.m23);\n    }\n    static translate(vec) {\n        return new Matrix44(1, 0, 0, vec.x, 0, 1, 0, vec.y, 0, 0, 1, vec.z, 0, 0, 0, 1);\n    }\n    static scale(vec) {\n        return new Matrix44(vec.x, 0, 0, 0, 0, vec.y, 0, 0, 0, 0, vec.z, 0, 0, 0, 0, 1);\n    }\n    /**\n     * Create X oriented Rotation Matrix\n    */\n    static rotateX(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new Matrix44(1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1);\n    }\n    /**\n     * Create Y oriented Rotation Matrix\n     */\n    static rotateY(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new Matrix44(cos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 1);\n    }\n    /**\n     * Create Z oriented Rotation Matrix\n     */\n    static rotateZ(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new Matrix44(cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    /**\n     * @return Euler Angles Rotation (x, y, z)\n     */\n    toEulerAngles() {\n        let rotate = null;\n        if (Math.abs(this.m20) != 1.0) {\n            let y = -Math.asin(this.m20);\n            let x = Math.atan2(this.m21 / Math.cos(y), this.m22 / Math.cos(y));\n            let z = Math.atan2(this.m10 / Math.cos(y), this.m00 / Math.cos(y));\n            rotate = new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x, y, z);\n        }\n        else if (this.m20 === -1.0) {\n            rotate = new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.atan2(this.m01, this.m02), Math.PI / 2.0, 0.0);\n        }\n        else {\n            rotate = new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.atan2(-this.m01, -this.m02), -Math.PI / 2.0, 0.0);\n        }\n        return rotate;\n    }\n    static zero() {\n        return new Matrix44(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n    flattenAsArray() {\n        return [this.v[0], this.v[1], this.v[2], this.v[3],\n            this.v[4], this.v[5], this.v[6], this.v[7],\n            this.v[8], this.v[9], this.v[10], this.v[11],\n            this.v[12], this.v[13], this.v[14], this.v[15]];\n    }\n    /**\n     * transpose(static version)\n     */\n    static transpose(mat) {\n        var mat_t = new Matrix44(mat.m00, mat.m10, mat.m20, mat.m30, mat.m01, mat.m11, mat.m21, mat.m31, mat.m02, mat.m12, mat.m22, mat.m32, mat.m03, mat.m13, mat.m23, mat.m33);\n        return mat_t;\n    }\n    multiplyVector(vec) {\n        var x = this.m00 * vec.x + this.m01 * vec.y + this.m02 * vec.z + this.m03 * vec.w;\n        var y = this.m10 * vec.x + this.m11 * vec.y + this.m12 * vec.z + this.m13 * vec.w;\n        var z = this.m20 * vec.x + this.m21 * vec.y + this.m22 * vec.z + this.m23 * vec.w;\n        var w = this.m30 * vec.x + this.m31 * vec.y + this.m32 * vec.z + this.m33 * vec.w;\n        return new _Vector4__WEBPACK_IMPORTED_MODULE_2__[\"default\"](x, y, z, w);\n    }\n    /**\n     * multiply zero matrix and zero matrix(static version)\n     */\n    static multiply(l_m, r_m) {\n        var m00 = l_m.m00 * r_m.m00 + l_m.m01 * r_m.m10 + l_m.m02 * r_m.m20 + l_m.m03 * r_m.m30;\n        var m10 = l_m.m10 * r_m.m00 + l_m.m11 * r_m.m10 + l_m.m12 * r_m.m20 + l_m.m13 * r_m.m30;\n        var m20 = l_m.m20 * r_m.m00 + l_m.m21 * r_m.m10 + l_m.m22 * r_m.m20 + l_m.m23 * r_m.m30;\n        var m30 = l_m.m30 * r_m.m00 + l_m.m31 * r_m.m10 + l_m.m32 * r_m.m20 + l_m.m33 * r_m.m30;\n        var m01 = l_m.m00 * r_m.m01 + l_m.m01 * r_m.m11 + l_m.m02 * r_m.m21 + l_m.m03 * r_m.m31;\n        var m11 = l_m.m10 * r_m.m01 + l_m.m11 * r_m.m11 + l_m.m12 * r_m.m21 + l_m.m13 * r_m.m31;\n        var m21 = l_m.m20 * r_m.m01 + l_m.m21 * r_m.m11 + l_m.m22 * r_m.m21 + l_m.m23 * r_m.m31;\n        var m31 = l_m.m30 * r_m.m01 + l_m.m31 * r_m.m11 + l_m.m32 * r_m.m21 + l_m.m33 * r_m.m31;\n        var m02 = l_m.m00 * r_m.m02 + l_m.m01 * r_m.m12 + l_m.m02 * r_m.m22 + l_m.m03 * r_m.m32;\n        var m12 = l_m.m10 * r_m.m02 + l_m.m11 * r_m.m12 + l_m.m12 * r_m.m22 + l_m.m13 * r_m.m32;\n        var m22 = l_m.m20 * r_m.m02 + l_m.m21 * r_m.m12 + l_m.m22 * r_m.m22 + l_m.m23 * r_m.m32;\n        var m32 = l_m.m30 * r_m.m02 + l_m.m31 * r_m.m12 + l_m.m32 * r_m.m22 + l_m.m33 * r_m.m32;\n        var m03 = l_m.m00 * r_m.m03 + l_m.m01 * r_m.m13 + l_m.m02 * r_m.m23 + l_m.m03 * r_m.m33;\n        var m13 = l_m.m10 * r_m.m03 + l_m.m11 * r_m.m13 + l_m.m12 * r_m.m23 + l_m.m13 * r_m.m33;\n        var m23 = l_m.m20 * r_m.m03 + l_m.m21 * r_m.m13 + l_m.m22 * r_m.m23 + l_m.m23 * r_m.m33;\n        var m33 = l_m.m30 * r_m.m03 + l_m.m31 * r_m.m13 + l_m.m32 * r_m.m23 + l_m.m33 * r_m.m33;\n        return new Matrix44(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    determinant() {\n        return this.m00 * this.m11 * this.m22 * this.m33 + this.m00 * this.m12 * this.m23 * this.m31 + this.m00 * this.m13 * this.m21 * this.m32 +\n            this.m01 * this.m10 * this.m23 * this.m32 + this.m01 * this.m12 * this.m20 * this.m33 + this.m01 * this.m13 * this.m22 * this.m30 +\n            this.m02 * this.m10 * this.m21 * this.m33 + this.m02 * this.m11 * this.m23 * this.m30 + this.m02 * this.m13 * this.m20 * this.m31 +\n            this.m03 * this.m10 * this.m22 * this.m31 + this.m03 * this.m11 * this.m20 * this.m32 + this.m03 * this.m12 * this.m21 * this.m30 -\n            this.m00 * this.m11 * this.m23 * this.m32 - this.m00 * this.m12 * this.m21 * this.m33 - this.m00 * this.m13 * this.m22 * this.m31 -\n            this.m01 * this.m10 * this.m22 * this.m33 - this.m01 * this.m12 * this.m23 * this.m30 - this.m01 * this.m13 * this.m20 * this.m32 -\n            this.m02 * this.m10 * this.m23 * this.m31 - this.m02 * this.m11 * this.m20 * this.m33 - this.m02 * this.m13 * this.m21 * this.m30 -\n            this.m03 * this.m10 * this.m21 * this.m32 - this.m03 * this.m11 * this.m22 * this.m30 - this.m03 * this.m12 * this.m20 * this.m31;\n    }\n    static determinant(m) {\n        let n00 = m.m00 * m.m11 - m.m01 * m.m10;\n        let n01 = m.m00 * m.m12 - m.m02 * m.m10;\n        let n02 = m.m00 * m.m13 - m.m03 * m.m10;\n        let n03 = m.m01 * m.m12 - m.m02 * m.m11;\n        let n04 = m.m01 * m.m13 - m.m03 * m.m11;\n        let n05 = m.m02 * m.m13 - m.m03 * m.m12;\n        let n06 = m.m20 * m.m31 - m.m21 * m.m30;\n        let n07 = m.m20 * m.m32 - m.m22 * m.m30;\n        let n08 = m.m20 * m.m33 - m.m23 * m.m30;\n        let n09 = m.m21 * m.m32 - m.m22 * m.m31;\n        let n10 = m.m21 * m.m33 - m.m23 * m.m31;\n        let n11 = m.m22 * m.m33 - m.m23 * m.m32;\n        let det = n00 * n11 - n01 * n10 + n02 * n09 + n03 * n08 - n04 * n07 + n05 * n06;\n        return det;\n    }\n    static invert(m) {\n        let n00 = m.m00 * m.m11 - m.m01 * m.m10;\n        let n01 = m.m00 * m.m12 - m.m02 * m.m10;\n        let n02 = m.m00 * m.m13 - m.m03 * m.m10;\n        let n03 = m.m01 * m.m12 - m.m02 * m.m11;\n        let n04 = m.m01 * m.m13 - m.m03 * m.m11;\n        let n05 = m.m02 * m.m13 - m.m03 * m.m12;\n        let n06 = m.m20 * m.m31 - m.m21 * m.m30;\n        let n07 = m.m20 * m.m32 - m.m22 * m.m30;\n        let n08 = m.m20 * m.m33 - m.m23 * m.m30;\n        let n09 = m.m21 * m.m32 - m.m22 * m.m31;\n        let n10 = m.m21 * m.m33 - m.m23 * m.m31;\n        let n11 = m.m22 * m.m33 - m.m23 * m.m32;\n        let det = n00 * n11 - n01 * n10 + n02 * n09 + n03 * n08 - n04 * n07 + n05 * n06;\n        det = 1.0 / det;\n        const out0 = (m.m11 * n11 - m.m12 * n10 + m.m13 * n09) * det;\n        const out1 = (m.m02 * n10 - m.m01 * n11 - m.m03 * n09) * det;\n        const out2 = (m.m31 * n05 - m.m32 * n04 + m.m33 * n03) * det;\n        const out3 = (m.m22 * n04 - m.m21 * n05 - m.m23 * n03) * det;\n        const out4 = (m.m12 * n08 - m.m10 * n11 - m.m13 * n07) * det;\n        const out5 = (m.m00 * n11 - m.m02 * n08 + m.m03 * n07) * det;\n        const out6 = (m.m32 * n02 - m.m30 * n05 - m.m33 * n01) * det;\n        const out7 = (m.m20 * n05 - m.m22 * n02 + m.m23 * n01) * det;\n        const out8 = (m.m10 * n10 - m.m11 * n08 + m.m13 * n06) * det;\n        const out9 = (m.m01 * n08 - m.m00 * n10 - m.m03 * n06) * det;\n        const out10 = (m.m30 * n04 - m.m31 * n02 + m.m33 * n00) * det;\n        const out11 = (m.m21 * n02 - m.m20 * n04 - m.m23 * n00) * det;\n        const out12 = (m.m11 * n07 - m.m10 * n09 - m.m12 * n06) * det;\n        const out13 = (m.m00 * n09 - m.m01 * n07 + m.m02 * n06) * det;\n        const out14 = (m.m31 * n01 - m.m30 * n03 - m.m32 * n00) * det;\n        const out15 = (m.m20 * n03 - m.m21 * n01 + m.m22 * n00) * det;\n        return new Matrix44(out0, out1, out2, out3, out4, out5, out6, out7, out8, out9, out10, out11, out12, out13, out14, out15, true);\n    }\n    get m00() {\n        return this.v[0];\n    }\n    get m10() {\n        return this.v[1];\n    }\n    get m20() {\n        return this.v[2];\n    }\n    get m30() {\n        return this.v[3];\n    }\n    get m01() {\n        return this.v[4];\n    }\n    get m11() {\n        return this.v[5];\n    }\n    get m21() {\n        return this.v[6];\n    }\n    get m31() {\n        return this.v[7];\n    }\n    get m02() {\n        return this.v[8];\n    }\n    get m12() {\n        return this.v[9];\n    }\n    get m22() {\n        return this.v[10];\n    }\n    get m32() {\n        return this.v[11];\n    }\n    get m03() {\n        return this.v[12];\n    }\n    get m13() {\n        return this.v[13];\n    }\n    get m23() {\n        return this.v[14];\n    }\n    get m33() {\n        return this.v[15];\n    }\n    toString() {\n        return this.m00 + ' ' + this.m01 + ' ' + this.m02 + ' ' + this.m03 + ' \\n' +\n            this.m10 + ' ' + this.m11 + ' ' + this.m12 + ' ' + this.m13 + ' \\n' +\n            this.m20 + ' ' + this.m21 + ' ' + this.m22 + ' ' + this.m23 + ' \\n' +\n            this.m30 + ' ' + this.m31 + ' ' + this.m32 + ' ' + this.m33 + ' \\n';\n    }\n    nearZeroToZero(value) {\n        if (Math.abs(value) < 0.00001) {\n            value = 0;\n        }\n        else if (0.99999 < value && value < 1.00001) {\n            value = 1;\n        }\n        else if (-1.00001 < value && value < -0.99999) {\n            value = -1;\n        }\n        return value;\n    }\n    toStringApproximately() {\n        return this.nearZeroToZero(this.m00) + ' ' + this.nearZeroToZero(this.m01) + ' ' + this.nearZeroToZero(this.m02) + ' ' + this.nearZeroToZero(this.m03) + ' \\n' +\n            this.nearZeroToZero(this.m10) + ' ' + this.nearZeroToZero(this.m11) + ' ' + this.nearZeroToZero(this.m12) + ' ' + this.nearZeroToZero(this.m13) + ' \\n' +\n            this.nearZeroToZero(this.m20) + ' ' + this.nearZeroToZero(this.m21) + ' ' + this.nearZeroToZero(this.m22) + ' ' + this.nearZeroToZero(this.m23) + ' \\n' +\n            this.nearZeroToZero(this.m30) + ' ' + this.nearZeroToZero(this.m31) + ' ' + this.nearZeroToZero(this.m32) + ' ' + this.nearZeroToZero(this.m33) + ' \\n';\n    }\n    getScale() {\n        return new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.sqrt(this.m00 * this.m00 + this.m01 * this.m01 + this.m02 * this.m02), Math.sqrt(this.m10 * this.m10 + this.m11 * this.m11 + this.m12 * this.m12), Math.sqrt(this.m20 * this.m20 + this.m21 * this.m21 + this.m22 * this.m22));\n    }\n    getRotate() {\n        const quat = _Quaternion__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fromMatrix(this);\n        const rotateMat = new Matrix44(quat);\n        return rotateMat;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/Matrix44.ts?");

/***/ }),

/***/ "./src/foundation/math/MutableMatrix33.ts":
/*!************************************************!*\
  !*** ./src/foundation/math/MutableMatrix33.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MutableMatrix33; });\n/* harmony import */ var _Matrix33__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Matrix33 */ \"./src/foundation/math/Matrix33.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n\n\nclass MutableMatrix33 extends _Matrix33__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(m0, m1, m2, m3, m4, m5, m6, m7, m8, isColumnMajor = false, notCopyFloatArray = false) {\n        super(m0, m1, m2, m3, m4, m5, m6, m7, m8, isColumnMajor);\n    }\n    setComponents(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        this.v[0] = m00;\n        this.v[3] = m01;\n        this.v[6] = m02;\n        this.v[1] = m10;\n        this.v[4] = m11;\n        this.v[7] = m12;\n        this.v[2] = m20;\n        this.v[5] = m21;\n        this.v[8] = m22;\n        return this;\n    }\n    copyComponents(mat) {\n        const m = mat;\n        this.m00 = m.m00;\n        this.m01 = m.m01;\n        this.m02 = m.m02;\n        this.m10 = m.m10;\n        this.m11 = m.m11;\n        this.m12 = m.m12;\n        this.m20 = m.m20;\n        this.m21 = m.m21;\n        this.m22 = m.m22;\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__[\"CompositionType\"].Mat3;\n    }\n    static dummy() {\n        return new MutableMatrix33(null);\n    }\n    identity() {\n        this.setComponents(1, 0, 0, 0, 1, 0, 0, 0, 1);\n        return this;\n    }\n    /**\n     * Create X oriented Rotation Matrix\n     */\n    rotateX(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return this.setComponents(1, 0, 0, 0, cos, -sin, 0, sin, cos);\n    }\n    /**\n     * Create Y oriented Rotation Matrix\n     */\n    rotateY(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        this.setComponents(cos, 0, sin, 0, 1, 0, -sin, 0, cos);\n        return this;\n    }\n    /**\n     * Create Z oriented Rotation Matrix\n     */\n    rotateZ(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return this.setComponents(cos, -sin, 0, sin, cos, 0, 0, 0, 1);\n    }\n    /**\n   * Create X oriented Rotation Matrix\n   */\n    static rotateX(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new MutableMatrix33(1, 0, 0, 0, cos, -sin, 0, sin, cos);\n    }\n    /**\n     * Create Y oriented Rotation Matrix\n     */\n    static rotateY(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new MutableMatrix33(cos, 0, sin, 0, 1, 0, -sin, 0, cos);\n    }\n    /**\n     * Create Z oriented Rotation Matrix\n     */\n    static rotateZ(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new MutableMatrix33(cos, -sin, 0, sin, cos, 0, 0, 0, 1);\n    }\n    scale(vec) {\n        return this.setComponents(vec.x, 0, 0, 0, vec.y, 0, 0, 0, vec.z);\n    }\n    static rotateXYZ(x, y, z) {\n        return (MutableMatrix33.rotateZ(z).multiply(MutableMatrix33.rotateY(y).multiply(MutableMatrix33.rotateX(x))));\n    }\n    static rotate(vec3) {\n        return (MutableMatrix33.rotateZ(vec3.z).multiply(MutableMatrix33.rotateY(vec3.y).multiply(MutableMatrix33.rotateX(vec3.x))));\n    }\n    /**\n     * zero matrix\n     */\n    zero() {\n        this.setComponents(0, 0, 0, 0, 0, 0, 0, 0, 0);\n        return this;\n    }\n    raw() {\n        return this.v;\n    }\n    flattenAsArray() {\n        return [this.v[0], this.v[1], this.v[2],\n            this.v[3], this.v[4], this.v[5],\n            this.v[6], this.v[7], this.v[8]];\n    }\n    _swap(l, r) {\n        this.v[r] = [this.v[l], this.v[l] = this.v[r]][0]; // Swap\n    }\n    /**\n     * transpose\n     */\n    transpose() {\n        this._swap(1, 3);\n        this._swap(2, 6);\n        this._swap(5, 8);\n        return this;\n    }\n    /**\n     * multiply zero matrix and zero matrix\n     */\n    multiply(mat) {\n        var m00 = this.m00 * mat.m00 + this.m01 * mat.m10 + this.m02 * mat.m20;\n        var m01 = this.m00 * mat.m01 + this.m01 * mat.m11 + this.m02 * mat.m21;\n        var m02 = this.m00 * mat.m02 + this.m01 * mat.m12 + this.m02 * mat.m22;\n        var m10 = this.m10 * mat.m00 + this.m11 * mat.m10 + this.m12 * mat.m20;\n        var m11 = this.m10 * mat.m01 + this.m11 * mat.m11 + this.m12 * mat.m21;\n        var m12 = this.m10 * mat.m02 + this.m11 * mat.m12 + this.m12 * mat.m22;\n        var m20 = this.m20 * mat.m00 + this.m21 * mat.m10 + this.m22 * mat.m20;\n        var m21 = this.m20 * mat.m01 + this.m21 * mat.m11 + this.m22 * mat.m21;\n        var m22 = this.m20 * mat.m02 + this.m21 * mat.m12 + this.m22 * mat.m22;\n        return this.setComponents(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n    }\n    invert() {\n        var det = this.determinant();\n        var m00 = (this.m11 * this.m22 - this.m12 * this.m21) / det;\n        var m01 = (this.m02 * this.m21 - this.m01 * this.m22) / det;\n        var m02 = (this.m01 * this.m12 - this.m02 * this.m11) / det;\n        var m10 = (this.m12 * this.m20 - this.m10 * this.m22) / det;\n        var m11 = (this.m00 * this.m22 - this.m02 * this.m20) / det;\n        var m12 = (this.m02 * this.m10 - this.m00 * this.m12) / det;\n        var m20 = (this.m10 * this.m21 - this.m11 * this.m20) / det;\n        var m21 = (this.m01 * this.m20 - this.m00 * this.m21) / det;\n        var m22 = (this.m00 * this.m11 - this.m01 * this.m10) / det;\n        return this.setComponents(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n    }\n    addScale(vec) {\n        this.m00 *= vec.x;\n        this.m11 *= vec.y;\n        this.m22 *= vec.z;\n        return this;\n    }\n    set m00(val) {\n        this.v[0] = val;\n    }\n    get m00() {\n        return this.v[0];\n    }\n    set m10(val) {\n        this.v[1] = val;\n    }\n    get m10() {\n        return this.v[1];\n    }\n    set m20(val) {\n        this.v[2] = val;\n    }\n    get m20() {\n        return this.v[2];\n    }\n    set m01(val) {\n        this.v[3] = val;\n    }\n    get m01() {\n        return this.v[3];\n    }\n    set m11(val) {\n        this.v[4] = val;\n    }\n    get m11() {\n        return this.v[4];\n    }\n    set m21(val) {\n        this.v[5] = val;\n    }\n    get m21() {\n        return this.v[5];\n    }\n    set m02(val) {\n        this.v[6] = val;\n    }\n    get m02() {\n        return this.v[6];\n    }\n    set m12(val) {\n        this.v[7] = val;\n    }\n    get m12() {\n        return this.v[7];\n    }\n    set m22(val) {\n        this.v[8] = val;\n    }\n    get m22() {\n        return this.v[8];\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/MutableMatrix33.ts?");

/***/ }),

/***/ "./src/foundation/math/MutableMatrix44.ts":
/*!************************************************!*\
  !*** ./src/foundation/math/MutableMatrix44.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MutableMatrix44; });\n/* harmony import */ var _Matrix44__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Matrix44 */ \"./src/foundation/math/Matrix44.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n\n\nconst FloatArray = Float32Array;\nclass MutableMatrix44 extends _Matrix44__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, isColumnMajor = false, notCopyFloatArray = false) {\n        const _isColumnMajor = (arguments.length >= 16) ? isColumnMajor : m1;\n        const _notCopyFloatArray = (arguments.length >= 16) ? notCopyFloatArray : m2;\n        if (arguments.length >= 16) {\n            super(m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, _isColumnMajor, _notCopyFloatArray);\n        }\n        else {\n            super(m0, _isColumnMajor, _notCopyFloatArray);\n        }\n    }\n    setComponents(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        this.v[0] = m00;\n        this.v[4] = m01;\n        this.v[8] = m02;\n        this.v[12] = m03;\n        this.v[1] = m10;\n        this.v[5] = m11;\n        this.v[9] = m12;\n        this.v[13] = m13;\n        this.v[2] = m20;\n        this.v[6] = m21;\n        this.v[10] = m22;\n        this.v[14] = m23;\n        this.v[3] = m30;\n        this.v[7] = m31;\n        this.v[11] = m32;\n        this.v[15] = m33;\n        return this;\n    }\n    copyComponents(mat4) {\n        //this.setComponents.apply(this, mat4.m); // 'm' must be row major array if isColumnMajor is false\n        const m = mat4.v;\n        this.v[0] = m[0];\n        this.v[1] = m[1];\n        this.v[2] = m[2];\n        this.v[3] = m[3];\n        this.v[4] = m[4];\n        this.v[5] = m[5];\n        this.v[6] = m[6];\n        this.v[7] = m[7];\n        this.v[8] = m[8];\n        this.v[9] = m[9];\n        this.v[10] = m[10];\n        this.v[11] = m[11];\n        this.v[12] = m[12];\n        this.v[13] = m[13];\n        this.v[14] = m[14];\n        this.v[15] = m[15];\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__[\"CompositionType\"].Mat4;\n    }\n    static dummy() {\n        return new MutableMatrix44(null);\n    }\n    /**\n     * to the identity matrix（static版）\n     */\n    static identity() {\n        return new MutableMatrix44(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    translate(vec) {\n        return this.setComponents(1, 0, 0, vec.x, 0, 1, 0, vec.y, 0, 0, 1, vec.z, 0, 0, 0, 1);\n    }\n    putTranslate(vec) {\n        this.m03 = vec.x;\n        this.m13 = vec.y;\n        this.m23 = vec.z;\n    }\n    scale(vec) {\n        return this.setComponents(vec.x, 0, 0, 0, 0, vec.y, 0, 0, 0, 0, vec.z, 0, 0, 0, 0, 1);\n    }\n    addScale(vec) {\n        this.m00 *= vec.x;\n        this.m11 *= vec.y;\n        this.m22 *= vec.z;\n        return this;\n    }\n    /**\n     * Create X oriented Rotation Matrix\n     */\n    rotateX(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return this.setComponents(1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1);\n    }\n    /**\n     * Create Y oriented Rotation Matrix\n     */\n    rotateY(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return this.setComponents(cos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 1);\n    }\n    /**\n   * Create Z oriented Rotation Matrix\n   */\n    rotateZ(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return this.setComponents(cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    rotateXYZ(x, y, z) {\n        var cosX = Math.cos(x);\n        var sinX = Math.sin(x);\n        var cosY = Math.cos(y);\n        var sinY = Math.sin(y);\n        var cosZ = Math.cos(z);\n        var sinZ = Math.sin(z);\n        const xm00 = 1;\n        //const xm01 = 0;\n        //const xm02 = 0;\n        //const xm10 = 0;\n        const xm11 = cosX;\n        const xm12 = -sinX;\n        //const xm20 = 0;\n        const xm21 = sinX;\n        const xm22 = cosX;\n        const ym00 = cosY;\n        //const ym01 = 0;\n        const ym02 = sinY;\n        //const ym10 = 0;\n        const ym11 = 1;\n        //const ym12 = 0;\n        const ym20 = -sinY;\n        //const ym21 = 0;\n        const ym22 = cosY;\n        const zm00 = cosZ;\n        const zm01 = -sinZ;\n        //const zm02 = 0;\n        const zm10 = sinZ;\n        const zm11 = cosZ;\n        //const zm12 = 0;\n        //const zm20 = 0;\n        //const zm21 = 0;\n        const zm22 = 1;\n        const yxm00 = ym00 * xm00;\n        const yxm01 = ym02 * xm21;\n        const yxm02 = ym02 * xm22;\n        //const yxm10 = 0;\n        const yxm11 = ym11 * xm11;\n        const yxm12 = ym11 * xm12;\n        const yxm20 = ym20 * xm00;\n        const yxm21 = ym22 * xm21;\n        const yxm22 = ym22 * xm22;\n        this.v[0] = zm00 * yxm00;\n        this.v[4] = zm00 * yxm01 + zm01 * yxm11;\n        this.v[8] = zm00 * yxm02 + zm01 * yxm12;\n        this.v[12] = 0;\n        this.v[1] = zm10 * yxm00;\n        this.v[5] = zm10 * yxm01 + zm11 * yxm11;\n        this.v[9] = zm10 * yxm02 + zm11 * yxm12;\n        this.v[13] = 0;\n        this.v[2] = zm22 * yxm20;\n        this.v[6] = zm22 * yxm21;\n        this.v[10] = zm22 * yxm22;\n        this.v[14] = 0;\n        this.v[3] = 0;\n        this.v[7] = 0;\n        this.v[11] = 0;\n        this.v[15] = 1;\n        return this;\n    }\n    /**\n     * to the identity matrix\n     */\n    identity() {\n        this.setComponents(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n        return this;\n    }\n    _swap(l, r) {\n        this.v[r] = [this.v[l], this.v[l] = this.v[r]][0]; // Swap\n    }\n    /**\n     * transpose\n     */\n    transpose() {\n        this._swap(1, 4);\n        this._swap(2, 8);\n        this._swap(3, 12);\n        this._swap(6, 9);\n        this._swap(7, 13);\n        this._swap(11, 14);\n        return this;\n    }\n    /**\n   * multiply zero matrix and zero matrix\n   */\n    multiply(mat) {\n        var m00 = this.m00 * mat.m00 + this.m01 * mat.m10 + this.m02 * mat.m20 + this.m03 * mat.m30;\n        var m01 = this.m00 * mat.m01 + this.m01 * mat.m11 + this.m02 * mat.m21 + this.m03 * mat.m31;\n        var m02 = this.m00 * mat.m02 + this.m01 * mat.m12 + this.m02 * mat.m22 + this.m03 * mat.m32;\n        var m03 = this.m00 * mat.m03 + this.m01 * mat.m13 + this.m02 * mat.m23 + this.m03 * mat.m33;\n        var m10 = this.m10 * mat.m00 + this.m11 * mat.m10 + this.m12 * mat.m20 + this.m13 * mat.m30;\n        var m11 = this.m10 * mat.m01 + this.m11 * mat.m11 + this.m12 * mat.m21 + this.m13 * mat.m31;\n        var m12 = this.m10 * mat.m02 + this.m11 * mat.m12 + this.m12 * mat.m22 + this.m13 * mat.m32;\n        var m13 = this.m10 * mat.m03 + this.m11 * mat.m13 + this.m12 * mat.m23 + this.m13 * mat.m33;\n        var m20 = this.m20 * mat.m00 + this.m21 * mat.m10 + this.m22 * mat.m20 + this.m23 * mat.m30;\n        var m21 = this.m20 * mat.m01 + this.m21 * mat.m11 + this.m22 * mat.m21 + this.m23 * mat.m31;\n        var m22 = this.m20 * mat.m02 + this.m21 * mat.m12 + this.m22 * mat.m22 + this.m23 * mat.m32;\n        var m23 = this.m20 * mat.m03 + this.m21 * mat.m13 + this.m22 * mat.m23 + this.m23 * mat.m33;\n        var m30 = this.m30 * mat.m00 + this.m31 * mat.m10 + this.m32 * mat.m20 + this.m33 * mat.m30;\n        var m31 = this.m30 * mat.m01 + this.m31 * mat.m11 + this.m32 * mat.m21 + this.m33 * mat.m31;\n        var m32 = this.m30 * mat.m02 + this.m31 * mat.m12 + this.m32 * mat.m22 + this.m33 * mat.m32;\n        var m33 = this.m30 * mat.m03 + this.m31 * mat.m13 + this.m32 * mat.m23 + this.m33 * mat.m33;\n        return this.setComponents(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    multiplyByLeft(mat) {\n        var m00 = mat.m00 * this.m00 + mat.m01 * this.m10 + mat.m02 * this.m20 + mat.m03 * this.m30;\n        var m01 = mat.m00 * this.m01 + mat.m01 * this.m11 + mat.m02 * this.m21 + mat.m03 * this.m31;\n        var m02 = mat.m00 * this.m02 + mat.m01 * this.m12 + mat.m02 * this.m22 + mat.m03 * this.m32;\n        var m03 = mat.m00 * this.m03 + mat.m01 * this.m13 + mat.m02 * this.m23 + mat.m03 * this.m33;\n        var m10 = mat.m10 * this.m00 + mat.m11 * this.m10 + mat.m12 * this.m20 + mat.m13 * this.m30;\n        var m11 = mat.m10 * this.m01 + mat.m11 * this.m11 + mat.m12 * this.m21 + mat.m13 * this.m31;\n        var m12 = mat.m10 * this.m02 + mat.m11 * this.m12 + mat.m12 * this.m22 + mat.m13 * this.m32;\n        var m13 = mat.m10 * this.m03 + mat.m11 * this.m13 + mat.m12 * this.m23 + mat.m13 * this.m33;\n        var m20 = mat.m20 * this.m00 + mat.m21 * this.m10 + mat.m22 * this.m20 + mat.m23 * this.m30;\n        var m21 = mat.m20 * this.m01 + mat.m21 * this.m11 + mat.m22 * this.m21 + mat.m23 * this.m31;\n        var m22 = mat.m20 * this.m02 + mat.m21 * this.m12 + mat.m22 * this.m22 + mat.m23 * this.m32;\n        var m23 = mat.m20 * this.m03 + mat.m21 * this.m13 + mat.m22 * this.m23 + mat.m23 * this.m33;\n        var m30 = mat.m30 * this.m00 + mat.m31 * this.m10 + mat.m32 * this.m20 + mat.m33 * this.m30;\n        var m31 = mat.m30 * this.m01 + mat.m31 * this.m11 + mat.m32 * this.m21 + mat.m33 * this.m31;\n        var m32 = mat.m30 * this.m02 + mat.m31 * this.m12 + mat.m32 * this.m22 + mat.m33 * this.m32;\n        var m33 = mat.m30 * this.m03 + mat.m31 * this.m13 + mat.m32 * this.m23 + mat.m33 * this.m33;\n        return this.setComponents(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    invert() {\n        var det = this.determinant();\n        var m00 = (this.m11 * this.m22 * this.m33 + this.m12 * this.m23 * this.m31 + this.m13 * this.m21 * this.m32 - this.m11 * this.m23 * this.m32 - this.m12 * this.m21 * this.m33 - this.m13 * this.m22 * this.m31) / det;\n        var m01 = (this.m01 * this.m23 * this.m32 + this.m02 * this.m21 * this.m33 + this.m03 * this.m22 * this.m31 - this.m01 * this.m22 * this.m33 - this.m02 * this.m23 * this.m31 - this.m03 * this.m21 * this.m32) / det;\n        var m02 = (this.m01 * this.m12 * this.m33 + this.m02 * this.m13 * this.m31 + this.m03 * this.m11 * this.m32 - this.m01 * this.m13 * this.m32 - this.m02 * this.m11 * this.m33 - this.m03 * this.m12 * this.m31) / det;\n        var m03 = (this.m01 * this.m13 * this.m22 + this.m02 * this.m11 * this.m23 + this.m03 * this.m12 * this.m21 - this.m01 * this.m12 * this.m23 - this.m02 * this.m13 * this.m21 - this.m03 * this.m11 * this.m22) / det;\n        var m10 = (this.m10 * this.m23 * this.m32 + this.m12 * this.m20 * this.m33 + this.m13 * this.m22 * this.m30 - this.m10 * this.m22 * this.m33 - this.m12 * this.m23 * this.m30 - this.m13 * this.m20 * this.m32) / det;\n        var m11 = (this.m00 * this.m22 * this.m33 + this.m02 * this.m23 * this.m30 + this.m03 * this.m20 * this.m32 - this.m00 * this.m23 * this.m32 - this.m02 * this.m20 * this.m33 - this.m03 * this.m22 * this.m30) / det;\n        var m12 = (this.m00 * this.m13 * this.m32 + this.m02 * this.m10 * this.m33 + this.m03 * this.m12 * this.m30 - this.m00 * this.m12 * this.m33 - this.m02 * this.m13 * this.m30 - this.m03 * this.m10 * this.m32) / det;\n        var m13 = (this.m00 * this.m12 * this.m23 + this.m02 * this.m13 * this.m20 + this.m03 * this.m10 * this.m22 - this.m00 * this.m13 * this.m22 - this.m02 * this.m10 * this.m23 - this.m03 * this.m12 * this.m20) / det;\n        var m20 = (this.m10 * this.m21 * this.m33 + this.m11 * this.m23 * this.m30 + this.m13 * this.m20 * this.m31 - this.m10 * this.m23 * this.m31 - this.m11 * this.m20 * this.m33 - this.m13 * this.m21 * this.m30) / det;\n        var m21 = (this.m00 * this.m23 * this.m31 + this.m01 * this.m20 * this.m33 + this.m03 * this.m21 * this.m30 - this.m00 * this.m21 * this.m33 - this.m01 * this.m23 * this.m30 - this.m03 * this.m20 * this.m31) / det;\n        var m22 = (this.m00 * this.m11 * this.m33 + this.m01 * this.m13 * this.m30 + this.m03 * this.m10 * this.m31 - this.m00 * this.m13 * this.m31 - this.m01 * this.m10 * this.m33 - this.m03 * this.m11 * this.m30) / det;\n        var m23 = (this.m00 * this.m13 * this.m21 + this.m01 * this.m10 * this.m23 + this.m03 * this.m11 * this.m20 - this.m00 * this.m11 * this.m23 - this.m01 * this.m13 * this.m20 - this.m03 * this.m10 * this.m21) / det;\n        var m30 = (this.m10 * this.m22 * this.m31 + this.m11 * this.m20 * this.m32 + this.m12 * this.m21 * this.m30 - this.m10 * this.m21 * this.m32 - this.m11 * this.m22 * this.m30 - this.m12 * this.m20 * this.m31) / det;\n        var m31 = (this.m00 * this.m21 * this.m32 + this.m01 * this.m22 * this.m30 + this.m02 * this.m20 * this.m31 - this.m00 * this.m22 * this.m31 - this.m01 * this.m20 * this.m32 - this.m02 * this.m21 * this.m30) / det;\n        var m32 = (this.m00 * this.m12 * this.m31 + this.m01 * this.m10 * this.m32 + this.m02 * this.m11 * this.m30 - this.m00 * this.m11 * this.m32 - this.m01 * this.m12 * this.m30 - this.m02 * this.m10 * this.m31) / det;\n        var m33 = (this.m00 * this.m11 * this.m22 + this.m01 * this.m12 * this.m20 + this.m02 * this.m10 * this.m21 - this.m00 * this.m12 * this.m21 - this.m01 * this.m10 * this.m22 - this.m02 * this.m11 * this.m20) / det;\n        return this.setComponents(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    /**\n     * multiply zero matrix and zero matrix(static version)\n     */\n    static multiply(l_m, r_m) {\n        var m00 = l_m.m00 * r_m.m00 + l_m.m01 * r_m.m10 + l_m.m02 * r_m.m20 + l_m.m03 * r_m.m30;\n        var m10 = l_m.m10 * r_m.m00 + l_m.m11 * r_m.m10 + l_m.m12 * r_m.m20 + l_m.m13 * r_m.m30;\n        var m20 = l_m.m20 * r_m.m00 + l_m.m21 * r_m.m10 + l_m.m22 * r_m.m20 + l_m.m23 * r_m.m30;\n        var m30 = l_m.m30 * r_m.m00 + l_m.m31 * r_m.m10 + l_m.m32 * r_m.m20 + l_m.m33 * r_m.m30;\n        var m01 = l_m.m00 * r_m.m01 + l_m.m01 * r_m.m11 + l_m.m02 * r_m.m21 + l_m.m03 * r_m.m31;\n        var m11 = l_m.m10 * r_m.m01 + l_m.m11 * r_m.m11 + l_m.m12 * r_m.m21 + l_m.m13 * r_m.m31;\n        var m21 = l_m.m20 * r_m.m01 + l_m.m21 * r_m.m11 + l_m.m22 * r_m.m21 + l_m.m23 * r_m.m31;\n        var m31 = l_m.m30 * r_m.m01 + l_m.m31 * r_m.m11 + l_m.m32 * r_m.m21 + l_m.m33 * r_m.m31;\n        var m02 = l_m.m00 * r_m.m02 + l_m.m01 * r_m.m12 + l_m.m02 * r_m.m22 + l_m.m03 * r_m.m32;\n        var m12 = l_m.m10 * r_m.m02 + l_m.m11 * r_m.m12 + l_m.m12 * r_m.m22 + l_m.m13 * r_m.m32;\n        var m22 = l_m.m20 * r_m.m02 + l_m.m21 * r_m.m12 + l_m.m22 * r_m.m22 + l_m.m23 * r_m.m32;\n        var m32 = l_m.m30 * r_m.m02 + l_m.m31 * r_m.m12 + l_m.m32 * r_m.m22 + l_m.m33 * r_m.m32;\n        var m03 = l_m.m00 * r_m.m03 + l_m.m01 * r_m.m13 + l_m.m02 * r_m.m23 + l_m.m03 * r_m.m33;\n        var m13 = l_m.m10 * r_m.m03 + l_m.m11 * r_m.m13 + l_m.m12 * r_m.m23 + l_m.m13 * r_m.m33;\n        var m23 = l_m.m20 * r_m.m03 + l_m.m21 * r_m.m13 + l_m.m22 * r_m.m23 + l_m.m23 * r_m.m33;\n        var m33 = l_m.m30 * r_m.m03 + l_m.m31 * r_m.m13 + l_m.m32 * r_m.m23 + l_m.m33 * r_m.m33;\n        return new MutableMatrix44(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    /**\n     * zero matrix\n     */\n    zero() {\n        this.setComponents(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        return this;\n    }\n    set m00(val) {\n        this.v[0] = val;\n    }\n    get m00() {\n        return this.v[0];\n    }\n    set m10(val) {\n        this.v[1] = val;\n    }\n    get m10() {\n        return this.v[1];\n    }\n    set m20(val) {\n        this.v[2] = val;\n    }\n    get m20() {\n        return this.v[2];\n    }\n    set m30(val) {\n        this.v[3] = val;\n    }\n    get m30() {\n        return this.v[3];\n    }\n    set m01(val) {\n        this.v[4] = val;\n    }\n    get m01() {\n        return this.v[4];\n    }\n    set m11(val) {\n        this.v[5] = val;\n    }\n    get m11() {\n        return this.v[5];\n    }\n    set m21(val) {\n        this.v[6] = val;\n    }\n    get m21() {\n        return this.v[6];\n    }\n    set m31(val) {\n        this.v[7] = val;\n    }\n    get m31() {\n        return this.v[7];\n    }\n    set m02(val) {\n        this.v[8] = val;\n    }\n    get m02() {\n        return this.v[8];\n    }\n    set m12(val) {\n        this.v[9] = val;\n    }\n    get m12() {\n        return this.v[9];\n    }\n    set m22(val) {\n        this.v[10] = val;\n    }\n    get m22() {\n        return this.v[10];\n    }\n    set m32(val) {\n        this.v[11] = val;\n    }\n    get m32() {\n        return this.v[11];\n    }\n    set m03(val) {\n        this.v[12] = val;\n    }\n    get m03() {\n        return this.v[12];\n    }\n    set m13(val) {\n        this.v[13] = val;\n    }\n    get m13() {\n        return this.v[13];\n    }\n    set m23(val) {\n        this.v[14] = val;\n    }\n    get m23() {\n        return this.v[14];\n    }\n    set m33(val) {\n        this.v[15] = val;\n    }\n    get m33() {\n        return this.v[15];\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/MutableMatrix44.ts?");

/***/ }),

/***/ "./src/foundation/math/MutableQuaterion.ts":
/*!*************************************************!*\
  !*** ./src/foundation/math/MutableQuaterion.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MutableQuaternion; });\n/* harmony import */ var _Vector3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _Quaternion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Quaternion */ \"./src/foundation/math/Quaternion.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n\n\n\nclass MutableQuaternion extends _Quaternion__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(x, y, z, w) {\n        super(x, y, z, w);\n    }\n    static dummy() {\n        return new MutableQuaternion(null);\n    }\n    clone() {\n        return new MutableQuaternion(this.x, this.y, this.z, this.w);\n    }\n    axisAngle(axisVec3, radian) {\n        var halfAngle = 0.5 * radian;\n        var sin = Math.sin(halfAngle);\n        var axis = _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].normalize(axisVec3);\n        this.w = Math.cos(halfAngle);\n        this.x = sin * axis.x;\n        this.y = sin * axis.y;\n        this.z = sin * axis.z;\n        return this;\n    }\n    add(q) {\n        this.x += q.x;\n        this.y += q.y;\n        this.z += q.z;\n        this.w += q.w;\n        return this;\n    }\n    multiply(q) {\n        let result = new _Quaternion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](0, 0, 0, 1);\n        result.v[0] = q.w * this.x + q.z * this.y + q.y * this.z - q.x * this.w;\n        result.v[1] = -q.z * this.x + q.w * this.y + q.x * this.z - q.y * this.w;\n        result.v[2] = q.y * this.x + q.x * this.y + q.w * this.z - q.z * this.w;\n        result.v[3] = -q.x * this.x - q.y * this.y - q.z * this.z - q.w * this.w;\n        this.x = result.x;\n        this.y = result.y;\n        this.z = result.z;\n        this.w = result.w;\n        return this;\n    }\n    fromMatrix(m) {\n        let tr = m.m00 + m.m11 + m.m22;\n        if (tr > 0) {\n            let S = 0.5 / Math.sqrt(tr + 1.0);\n            this.v[0] = (m.m21 - m.m12) * S;\n            this.v[1] = (m.m02 - m.m20) * S;\n            this.v[2] = (m.m10 - m.m01) * S;\n            this.v[3] = 0.25 / S;\n        }\n        else if ((m.m00 > m.m11) && (m.m00 > m.m22)) {\n            let S = Math.sqrt(1.0 + m.m00 - m.m11 - m.m22) * 2;\n            this.v[0] = 0.25 * S;\n            this.v[1] = (m.m01 + m.m10) / S;\n            this.v[2] = (m.m02 + m.m20) / S;\n            this.v[3] = (m.m21 - m.m12) / S;\n        }\n        else if (m.m11 > m.m22) {\n            let S = Math.sqrt(1.0 + m.m11 - m.m00 - m.m22) * 2;\n            this.v[0] = (m.m01 + m.m10) / S;\n            this.v[1] = 0.25 * S;\n            this.v[2] = (m.m12 + m.m21) / S;\n            this.v[3] = (m.m02 - m.m20) / S;\n        }\n        else {\n            let S = Math.sqrt(1.0 + m.m22 - m.m00 - m.m11) * 2;\n            this.v[0] = (m.m02 + m.m20) / S;\n            this.v[1] = (m.m12 + m.m21) / S;\n            this.v[2] = 0.25 * S;\n            this.v[3] = (m.m10 - m.m01) / S;\n        }\n        return this;\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Vec4;\n    }\n    setAt(i, val) {\n        switch (i % 4) {\n            case 0:\n                this.x = val;\n                break;\n            case 1:\n                this.y = val;\n                break;\n            case 2:\n                this.z = val;\n                break;\n            case 3:\n                this.w = val;\n                break;\n        }\n    }\n    normalize() {\n        let norm = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n        this.x /= norm;\n        this.y /= norm;\n        this.z /= norm;\n        this.w /= norm;\n        return this;\n    }\n    identity() {\n        this.x = 0;\n        this.y = 0;\n        this.x = 0;\n        this.w = 1;\n    }\n    get x() {\n        return this.v[0];\n    }\n    set x(x) {\n        this.v[0] = x;\n    }\n    get y() {\n        return this.v[1];\n    }\n    set y(y) {\n        this.v[1] = y;\n    }\n    get z() {\n        return this.v[2];\n    }\n    set z(z) {\n        this.v[2] = z;\n    }\n    get w() {\n        return this.v[3];\n    }\n    set w(w) {\n        this.v[3] = w;\n    }\n    get raw() {\n        return this.v;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/MutableQuaterion.ts?");

/***/ }),

/***/ "./src/foundation/math/MutableRowMajarMatrix44.ts":
/*!********************************************************!*\
  !*** ./src/foundation/math/MutableRowMajarMatrix44.ts ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MutableRowMajarMatrix44; });\n/* harmony import */ var _RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RowMajarMatrix44 */ \"./src/foundation/math/RowMajarMatrix44.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n\n\nconst FloatArray = Float32Array;\nclass MutableRowMajarMatrix44 extends _RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, notCopyFloatArray = false) {\n        const _notCopyFloatArray = (arguments.length >= 16) ? notCopyFloatArray : m1;\n        if (arguments.length >= 16) {\n            super(m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, _notCopyFloatArray);\n        }\n        else {\n            super(m0, _notCopyFloatArray);\n        }\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__[\"CompositionType\"].Mat4;\n    }\n    static dummy() {\n        return new MutableRowMajarMatrix44(null);\n    }\n    setComponents(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        this.v[0] = m00;\n        this.v[4] = m10;\n        this.v[8] = m20;\n        this.v[12] = m30;\n        this.v[1] = m01;\n        this.v[5] = m11;\n        this.v[9] = m21;\n        this.v[13] = m31;\n        this.v[2] = m02;\n        this.v[6] = m12;\n        this.v[10] = m22;\n        this.v[14] = m32;\n        this.v[3] = m03;\n        this.v[7] = m13;\n        this.v[11] = m23;\n        this.v[15] = m33;\n        return this;\n    }\n    copyComponents(mat4) {\n        //this.setComponents.apply(this, mat4.m); // 'm' must be row major array if isColumnMajor is false\n        const m = mat4;\n        this.m00 = m.m00;\n        this.m01 = m.m01;\n        this.m02 = m.m02;\n        this.m03 = m.m03;\n        this.m10 = m.m10;\n        this.m11 = m.m11;\n        this.m12 = m.m12;\n        this.m13 = m.m13;\n        this.m20 = m.m20;\n        this.m21 = m.m21;\n        this.m22 = m.m22;\n        this.m23 = m.m23;\n        this.m30 = m.m30;\n        this.m31 = m.m31;\n        this.m32 = m.m32;\n        this.m33 = m.m33;\n    }\n    /**\n     * to the identity matrix\n     */\n    identity() {\n        this.setComponents(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n        return this;\n    }\n    translate(vec) {\n        return this.setComponents(1, 0, 0, vec.x, 0, 1, 0, vec.y, 0, 0, 1, vec.z, 0, 0, 0, 1);\n    }\n    putTranslate(vec) {\n        this.m03 = vec.x;\n        this.m13 = vec.y;\n        this.m23 = vec.z;\n    }\n    scale(vec) {\n        return this.setComponents(vec.x, 0, 0, 0, 0, vec.y, 0, 0, 0, 0, vec.z, 0, 0, 0, 0, 1);\n    }\n    addScale(vec) {\n        this.m00 *= vec.x;\n        this.m11 *= vec.y;\n        this.m22 *= vec.z;\n        return this;\n    }\n    /**\n     * Create X oriented Rotation Matrix\n     */\n    rotateX(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return this.setComponents(1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1);\n    }\n    /**\n   * Create Y oriented Rotation Matrix\n   */\n    rotateY(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return this.setComponents(cos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 1);\n    }\n    /**\n     * Create Z oriented Rotation Matrix\n     */\n    rotateZ(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return this.setComponents(cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    rotateXYZ(x, y, z) {\n        var cosX = Math.cos(x);\n        var sinX = Math.sin(x);\n        var cosY = Math.cos(y);\n        var sinY = Math.sin(y);\n        var cosZ = Math.cos(z);\n        var sinZ = Math.sin(z);\n        const xm00 = 1;\n        //const xm01 = 0;\n        //const xm02 = 0;\n        //const xm10 = 0;\n        const xm11 = cosX;\n        const xm12 = -sinX;\n        //const xm20 = 0;\n        const xm21 = sinX;\n        const xm22 = cosX;\n        const ym00 = cosY;\n        //const ym01 = 0;\n        const ym02 = sinY;\n        //const ym10 = 0;\n        const ym11 = 1;\n        //const ym12 = 0;\n        const ym20 = -sinY;\n        //const ym21 = 0;\n        const ym22 = cosY;\n        const zm00 = cosZ;\n        const zm01 = -sinZ;\n        //const zm02 = 0;\n        const zm10 = sinZ;\n        const zm11 = cosZ;\n        //const zm12 = 0;\n        //const zm20 = 0;\n        //const zm21 = 0;\n        const zm22 = 1;\n        const yxm00 = ym00 * xm00;\n        const yxm01 = ym02 * xm21;\n        const yxm02 = ym02 * xm22;\n        //const yxm10 = 0;\n        const yxm11 = ym11 * xm11;\n        const yxm12 = ym11 * xm12;\n        const yxm20 = ym20 * xm00;\n        const yxm21 = ym22 * xm21;\n        const yxm22 = ym22 * xm22;\n        this.v[0] = zm00 * yxm00;\n        this.v[1] = zm00 * yxm01 + zm01 * yxm11;\n        this.v[2] = zm00 * yxm02 + zm01 * yxm12;\n        this.v[3] = 0;\n        this.v[4] = zm10 * yxm00;\n        this.v[5] = zm10 * yxm01 + zm11 * yxm11;\n        this.v[6] = zm10 * yxm02 + zm11 * yxm12;\n        this.v[7] = 0;\n        this.v[8] = zm22 * yxm20;\n        this.v[9] = zm22 * yxm21;\n        this.v[10] = zm22 * yxm22;\n        this.v[11] = 0;\n        this.v[12] = 0;\n        this.v[13] = 0;\n        this.v[14] = 0;\n        this.v[15] = 1;\n        return this;\n        //return new RowMajarMatrix44(Matrix33.rotateXYZ(x, y, z));\n    }\n    /**\n     * Zero Matrix\n     */\n    zero() {\n        this.setComponents(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n        return this;\n    }\n    _swap(l, r) {\n        this.v[r] = [this.v[l], this.v[l] = this.v[r]][0]; // Swap\n    }\n    /**\n     * transpose\n     */\n    transpose() {\n        this._swap(1, 4);\n        this._swap(2, 8);\n        this._swap(3, 12);\n        this._swap(6, 9);\n        this._swap(7, 13);\n        this._swap(11, 14);\n        return this;\n    }\n    /**\n     * multiply zero matrix and zero matrix\n     */\n    multiply(mat) {\n        var m00 = this.m00 * mat.m00 + this.m01 * mat.m10 + this.m02 * mat.m20 + this.m03 * mat.m30;\n        var m01 = this.m00 * mat.m01 + this.m01 * mat.m11 + this.m02 * mat.m21 + this.m03 * mat.m31;\n        var m02 = this.m00 * mat.m02 + this.m01 * mat.m12 + this.m02 * mat.m22 + this.m03 * mat.m32;\n        var m03 = this.m00 * mat.m03 + this.m01 * mat.m13 + this.m02 * mat.m23 + this.m03 * mat.m33;\n        var m10 = this.m10 * mat.m00 + this.m11 * mat.m10 + this.m12 * mat.m20 + this.m13 * mat.m30;\n        var m11 = this.m10 * mat.m01 + this.m11 * mat.m11 + this.m12 * mat.m21 + this.m13 * mat.m31;\n        var m12 = this.m10 * mat.m02 + this.m11 * mat.m12 + this.m12 * mat.m22 + this.m13 * mat.m32;\n        var m13 = this.m10 * mat.m03 + this.m11 * mat.m13 + this.m12 * mat.m23 + this.m13 * mat.m33;\n        var m20 = this.m20 * mat.m00 + this.m21 * mat.m10 + this.m22 * mat.m20 + this.m23 * mat.m30;\n        var m21 = this.m20 * mat.m01 + this.m21 * mat.m11 + this.m22 * mat.m21 + this.m23 * mat.m31;\n        var m22 = this.m20 * mat.m02 + this.m21 * mat.m12 + this.m22 * mat.m22 + this.m23 * mat.m32;\n        var m23 = this.m20 * mat.m03 + this.m21 * mat.m13 + this.m22 * mat.m23 + this.m23 * mat.m33;\n        var m30 = this.m30 * mat.m00 + this.m31 * mat.m10 + this.m32 * mat.m20 + this.m33 * mat.m30;\n        var m31 = this.m30 * mat.m01 + this.m31 * mat.m11 + this.m32 * mat.m21 + this.m33 * mat.m31;\n        var m32 = this.m30 * mat.m02 + this.m31 * mat.m12 + this.m32 * mat.m22 + this.m33 * mat.m32;\n        var m33 = this.m30 * mat.m03 + this.m31 * mat.m13 + this.m32 * mat.m23 + this.m33 * mat.m33;\n        return this.setComponents(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    multiplyByLeft(mat) {\n        var m00 = mat.m00 * this.m00 + mat.m01 * this.m10 + mat.m02 * this.m20 + mat.m03 * this.m30;\n        var m01 = mat.m00 * this.m01 + mat.m01 * this.m11 + mat.m02 * this.m21 + mat.m03 * this.m31;\n        var m02 = mat.m00 * this.m02 + mat.m01 * this.m12 + mat.m02 * this.m22 + mat.m03 * this.m32;\n        var m03 = mat.m00 * this.m03 + mat.m01 * this.m13 + mat.m02 * this.m23 + mat.m03 * this.m33;\n        var m10 = mat.m10 * this.m00 + mat.m11 * this.m10 + mat.m12 * this.m20 + mat.m13 * this.m30;\n        var m11 = mat.m10 * this.m01 + mat.m11 * this.m11 + mat.m12 * this.m21 + mat.m13 * this.m31;\n        var m12 = mat.m10 * this.m02 + mat.m11 * this.m12 + mat.m12 * this.m22 + mat.m13 * this.m32;\n        var m13 = mat.m10 * this.m03 + mat.m11 * this.m13 + mat.m12 * this.m23 + mat.m13 * this.m33;\n        var m20 = mat.m20 * this.m00 + mat.m21 * this.m10 + mat.m22 * this.m20 + mat.m23 * this.m30;\n        var m21 = mat.m20 * this.m01 + mat.m21 * this.m11 + mat.m22 * this.m21 + mat.m23 * this.m31;\n        var m22 = mat.m20 * this.m02 + mat.m21 * this.m12 + mat.m22 * this.m22 + mat.m23 * this.m32;\n        var m23 = mat.m20 * this.m03 + mat.m21 * this.m13 + mat.m22 * this.m23 + mat.m23 * this.m33;\n        var m30 = mat.m30 * this.m00 + mat.m31 * this.m10 + mat.m32 * this.m20 + mat.m33 * this.m30;\n        var m31 = mat.m30 * this.m01 + mat.m31 * this.m11 + mat.m32 * this.m21 + mat.m33 * this.m31;\n        var m32 = mat.m30 * this.m02 + mat.m31 * this.m12 + mat.m32 * this.m22 + mat.m33 * this.m32;\n        var m33 = mat.m30 * this.m03 + mat.m31 * this.m13 + mat.m32 * this.m23 + mat.m33 * this.m33;\n        return this.setComponents(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    invert() {\n        var det = this.determinant();\n        var m00 = (this.m11 * this.m22 * this.m33 + this.m12 * this.m23 * this.m31 + this.m13 * this.m21 * this.m32 - this.m11 * this.m23 * this.m32 - this.m12 * this.m21 * this.m33 - this.m13 * this.m22 * this.m31) / det;\n        var m01 = (this.m01 * this.m23 * this.m32 + this.m02 * this.m21 * this.m33 + this.m03 * this.m22 * this.m31 - this.m01 * this.m22 * this.m33 - this.m02 * this.m23 * this.m31 - this.m03 * this.m21 * this.m32) / det;\n        var m02 = (this.m01 * this.m12 * this.m33 + this.m02 * this.m13 * this.m31 + this.m03 * this.m11 * this.m32 - this.m01 * this.m13 * this.m32 - this.m02 * this.m11 * this.m33 - this.m03 * this.m12 * this.m31) / det;\n        var m03 = (this.m01 * this.m13 * this.m22 + this.m02 * this.m11 * this.m23 + this.m03 * this.m12 * this.m21 - this.m01 * this.m12 * this.m23 - this.m02 * this.m13 * this.m21 - this.m03 * this.m11 * this.m22) / det;\n        var m10 = (this.m10 * this.m23 * this.m32 + this.m12 * this.m20 * this.m33 + this.m13 * this.m22 * this.m30 - this.m10 * this.m22 * this.m33 - this.m12 * this.m23 * this.m30 - this.m13 * this.m20 * this.m32) / det;\n        var m11 = (this.m00 * this.m22 * this.m33 + this.m02 * this.m23 * this.m30 + this.m03 * this.m20 * this.m32 - this.m00 * this.m23 * this.m32 - this.m02 * this.m20 * this.m33 - this.m03 * this.m22 * this.m30) / det;\n        var m12 = (this.m00 * this.m13 * this.m32 + this.m02 * this.m10 * this.m33 + this.m03 * this.m12 * this.m30 - this.m00 * this.m12 * this.m33 - this.m02 * this.m13 * this.m30 - this.m03 * this.m10 * this.m32) / det;\n        var m13 = (this.m00 * this.m12 * this.m23 + this.m02 * this.m13 * this.m20 + this.m03 * this.m10 * this.m22 - this.m00 * this.m13 * this.m22 - this.m02 * this.m10 * this.m23 - this.m03 * this.m12 * this.m20) / det;\n        var m20 = (this.m10 * this.m21 * this.m33 + this.m11 * this.m23 * this.m30 + this.m13 * this.m20 * this.m31 - this.m10 * this.m23 * this.m31 - this.m11 * this.m20 * this.m33 - this.m13 * this.m21 * this.m30) / det;\n        var m21 = (this.m00 * this.m23 * this.m31 + this.m01 * this.m20 * this.m33 + this.m03 * this.m21 * this.m30 - this.m00 * this.m21 * this.m33 - this.m01 * this.m23 * this.m30 - this.m03 * this.m20 * this.m31) / det;\n        var m22 = (this.m00 * this.m11 * this.m33 + this.m01 * this.m13 * this.m30 + this.m03 * this.m10 * this.m31 - this.m00 * this.m13 * this.m31 - this.m01 * this.m10 * this.m33 - this.m03 * this.m11 * this.m30) / det;\n        var m23 = (this.m00 * this.m13 * this.m21 + this.m01 * this.m10 * this.m23 + this.m03 * this.m11 * this.m20 - this.m00 * this.m11 * this.m23 - this.m01 * this.m13 * this.m20 - this.m03 * this.m10 * this.m21) / det;\n        var m30 = (this.m10 * this.m22 * this.m31 + this.m11 * this.m20 * this.m32 + this.m12 * this.m21 * this.m30 - this.m10 * this.m21 * this.m32 - this.m11 * this.m22 * this.m30 - this.m12 * this.m20 * this.m31) / det;\n        var m31 = (this.m00 * this.m21 * this.m32 + this.m01 * this.m22 * this.m30 + this.m02 * this.m20 * this.m31 - this.m00 * this.m22 * this.m31 - this.m01 * this.m20 * this.m32 - this.m02 * this.m21 * this.m30) / det;\n        var m32 = (this.m00 * this.m12 * this.m31 + this.m01 * this.m10 * this.m32 + this.m02 * this.m11 * this.m30 - this.m00 * this.m11 * this.m32 - this.m01 * this.m12 * this.m30 - this.m02 * this.m10 * this.m31) / det;\n        var m33 = (this.m00 * this.m11 * this.m22 + this.m01 * this.m12 * this.m20 + this.m02 * this.m10 * this.m21 - this.m00 * this.m12 * this.m21 - this.m01 * this.m10 * this.m22 - this.m02 * this.m11 * this.m20) / det;\n        return this.setComponents(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    set m00(val) {\n        this.v[0] = val;\n    }\n    get m00() {\n        return this.v[0];\n    }\n    set m01(val) {\n        this.v[1] = val;\n    }\n    get m01() {\n        return this.v[1];\n    }\n    set m02(val) {\n        this.v[2] = val;\n    }\n    get m02() {\n        return this.v[2];\n    }\n    set m03(val) {\n        this.v[3] = val;\n    }\n    get m03() {\n        return this.v[3];\n    }\n    set m10(val) {\n        this.v[4] = val;\n    }\n    get m10() {\n        return this.v[4];\n    }\n    set m11(val) {\n        this.v[5] = val;\n    }\n    get m11() {\n        return this.v[5];\n    }\n    set m12(val) {\n        this.v[6] = val;\n    }\n    get m12() {\n        return this.v[6];\n    }\n    set m13(val) {\n        this.v[7] = val;\n    }\n    get m13() {\n        return this.v[7];\n    }\n    set m20(val) {\n        this.v[8] = val;\n    }\n    get m20() {\n        return this.v[8];\n    }\n    set m21(val) {\n        this.v[9] = val;\n    }\n    get m21() {\n        return this.v[9];\n    }\n    set m22(val) {\n        this.v[10] = val;\n    }\n    get m22() {\n        return this.v[10];\n    }\n    set m23(val) {\n        this.v[11] = val;\n    }\n    get m23() {\n        return this.v[11];\n    }\n    set m30(val) {\n        this.v[12] = val;\n    }\n    get m30() {\n        return this.v[12];\n    }\n    set m31(val) {\n        this.v[13] = val;\n    }\n    get m31() {\n        return this.v[13];\n    }\n    set m32(val) {\n        this.v[14] = val;\n    }\n    get m32() {\n        return this.v[14];\n    }\n    set m33(val) {\n        this.v[15] = val;\n    }\n    get m33() {\n        return this.v[15];\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/MutableRowMajarMatrix44.ts?");

/***/ }),

/***/ "./src/foundation/math/MutableVector3.ts":
/*!***********************************************!*\
  !*** ./src/foundation/math/MutableVector3.ts ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MutableVector3; });\n/* harmony import */ var _Vector3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n\n\nclass MutableVector3 extends _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(x, y, z) {\n        super(x, y, z);\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__[\"CompositionType\"].Vec3;\n    }\n    zero() {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        return this;\n    }\n    one() {\n        this.x = 1;\n        this.y = 1;\n        this.z = 1;\n        return this;\n    }\n    clone() {\n        return new MutableVector3(this.x, this.y, this.z);\n    }\n    /**\n     * Zero Vector\n     */\n    static zero() {\n        return new MutableVector3(0, 0, 0);\n    }\n    static one() {\n        return new MutableVector3(1, 1, 1);\n    }\n    static dummy() {\n        return new MutableVector3(null);\n    }\n    /**\n     * to square length\n     */\n    lengthSquared() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n    /**\n     * cross product\n     */\n    cross(v) {\n        var x = this.y * v.z - this.z * v.y;\n        var y = this.z * v.x - this.x * v.z;\n        var z = this.x * v.y - this.y * v.x;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n    /**\n   * normalize\n   */\n    normalize() {\n        var length = this.length();\n        this.divide(length);\n        return this;\n    }\n    /**\n   * add value\n   */\n    add(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return this;\n    }\n    /**\n   * subtract\n   */\n    subtract(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        return this;\n    }\n    /**\n     * divide\n     */\n    divide(val) {\n        if (val !== 0) {\n            this.x /= val;\n            this.y /= val;\n            this.z /= val;\n        }\n        else {\n            console.error(\"0 division occured!\");\n            this.x = Infinity;\n            this.y = Infinity;\n            this.z = Infinity;\n        }\n        return this;\n    }\n    /**\n     * multiply\n     */\n    multiply(val) {\n        this.x *= val;\n        this.y *= val;\n        this.z *= val;\n        return this;\n    }\n    /**\n     * multiply vector\n     */\n    multiplyVector(vec) {\n        this.x *= vec.x;\n        this.y *= vec.y;\n        this.z *= vec.z;\n        return this;\n    }\n    /**\n   * divide vector\n   */\n    divideVector(vec3) {\n        this.x /= vec3.x;\n        this.y /= vec3.y;\n        this.z /= vec3.z;\n        return this;\n    }\n    get x() {\n        return this.v[0];\n    }\n    set x(x) {\n        this.v[0] = x;\n    }\n    get y() {\n        return this.v[1];\n    }\n    set y(y) {\n        this.v[1] = y;\n    }\n    get z() {\n        return this.v[2];\n    }\n    set z(z) {\n        this.v[2] = z;\n    }\n    get raw() {\n        return this.v;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/MutableVector3.ts?");

/***/ }),

/***/ "./src/foundation/math/MutableVector4.ts":
/*!***********************************************!*\
  !*** ./src/foundation/math/MutableVector4.ts ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MutableVector4; });\n/* harmony import */ var _Vector4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n\n\nclass MutableVector4 extends _Vector4__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(x, y, z, w) {\n        super(x, y, z, w);\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__[\"CompositionType\"].Vec4;\n    }\n    normalize() {\n        var length = this.length();\n        this.divide(length);\n        return this;\n    }\n    static dummy() {\n        return new MutableVector4(null);\n    }\n    /**\n     * add value\n     */\n    add(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        this.w += v.w;\n        return this;\n    }\n    /**\n   * add value except w component\n   */\n    addWithOutW(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        return this;\n    }\n    subtract(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        this.w -= v.w;\n        return this;\n    }\n    multiply(val) {\n        this.x *= val;\n        this.y *= val;\n        this.z *= val;\n        this.w *= val;\n        return this;\n    }\n    multiplyVector(vec) {\n        this.x *= vec.x;\n        this.y *= vec.y;\n        this.z *= vec.z;\n        this.w *= vec.w;\n        return this;\n    }\n    divide(val) {\n        if (val !== 0) {\n            this.x /= val;\n            this.y /= val;\n            this.z /= val;\n            this.w /= val;\n        }\n        else {\n            console.error(\"0 division occured!\");\n            this.x = Infinity;\n            this.y = Infinity;\n            this.z = Infinity;\n            this.w = Infinity;\n        }\n        return this;\n    }\n    divideVector(vec4) {\n        this.x /= vec4.x;\n        this.y /= vec4.y;\n        this.z /= vec4.z;\n        this.w /= vec4.w;\n        return this;\n    }\n    get x() {\n        return this.v[0];\n    }\n    get y() {\n        return this.v[1];\n    }\n    get z() {\n        return this.v[2];\n    }\n    get w() {\n        return this.v[3];\n    }\n    set x(x) {\n        this.v[0] = x;\n    }\n    set y(y) {\n        this.v[1] = y;\n    }\n    set z(z) {\n        this.v[2] = z;\n    }\n    set w(w) {\n        this.v[3] = w;\n    }\n    get raw() {\n        return this.v;\n    }\n    // set w(w:number) {\n    //   this.__Error();\n    // }\n    // get w(): number {\n    //   return this.v[3];\n    // }\n    // get raw(): TypedArray {\n    //   this.__Error();\n    //   return new Float32Array(0);\n    // }\n    __Error() {\n        //console.error('Not avavailabe because this Vector class is immutable.');\n        throw new Error('Not avavailabe because this Vector class is immutable.');\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/MutableVector4.ts?");

/***/ }),

/***/ "./src/foundation/math/Quaternion.ts":
/*!*******************************************!*\
  !*** ./src/foundation/math/Quaternion.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Quaternion; });\n/* harmony import */ var _Vector3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n//import GLBoost from '../../globals';\n\n\nclass Quaternion {\n    constructor(x, y, z, w) {\n        if (ArrayBuffer.isView(x)) {\n            this.v = x;\n            return;\n        }\n        else if (x == null) {\n            this.v = new Float32Array(0);\n        }\n        else {\n            this.v = new Float32Array(4);\n        }\n        if (!(x != null)) {\n            this.v[0] = 0;\n            this.v[1] = 0;\n            this.v[2] = 0;\n            this.v[3] = 1;\n        }\n        else if (Array.isArray(x)) {\n            this.v[0] = x[0];\n            this.v[1] = x[1];\n            this.v[2] = x[2];\n            this.v[3] = x[3];\n        }\n        else if (typeof x.w !== 'undefined') {\n            this.v[0] = x.x;\n            this.v[1] = x.y;\n            this.v[2] = x.z;\n            this.v[3] = x.w;\n        }\n        else if (typeof x.z !== 'undefined') {\n            this.v[0] = x.x;\n            this.v[1] = x.y;\n            this.v[2] = x.z;\n            this.v[3] = 1;\n        }\n        else if (typeof x.y !== 'undefined') {\n            this.v[0] = x.x;\n            this.v[1] = x.y;\n            this.v[2] = 0;\n            this.v[3] = 1;\n        }\n        else {\n            this.v[0] = x;\n            this.v[1] = y;\n            this.v[2] = z;\n            this.v[3] = w;\n        }\n    }\n    isEqual(quat) {\n        if (this.x === quat.x && this.y === quat.y && this.z === quat.z && this.w === quat.w) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__[\"CompositionType\"].Vec4;\n    }\n    static dummy() {\n        return new Quaternion(null);\n    }\n    isDummy() {\n        if (this.v.length === 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get className() {\n        return this.constructor.name;\n    }\n    clone() {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    }\n    static invert(quat) {\n        quat = new Quaternion(-quat.x, -quat.y, -quat.z, quat.w);\n        const inorm2 = 1.0 / (quat.x * quat.x + quat.y * quat.y + quat.z * quat.z + quat.w * quat.w);\n        quat.v[0] *= inorm2;\n        quat.v[1] *= inorm2;\n        quat.v[2] *= inorm2;\n        quat.v[3] *= inorm2;\n        return quat;\n    }\n    static qlerp(lhq, rhq, ratio) {\n        var q = new Quaternion(0, 0, 0, 1);\n        var qr = lhq.w * rhq.w + lhq.x * rhq.x + lhq.y * rhq.y + lhq.z * rhq.z;\n        var ss = 1.0 - qr * qr;\n        if (ss === 0.0) {\n            q.v[3] = lhq.w;\n            q.v[0] = lhq.x;\n            q.v[1] = lhq.y;\n            q.v[2] = lhq.z;\n            return q;\n        }\n        else {\n            if (qr > 1) {\n                qr = 0.999;\n            }\n            else if (qr < -1) {\n                qr = -0.999;\n            }\n            let ph = Math.acos(qr);\n            let s2;\n            if (qr < 0.0 && ph > Math.PI / 2.0) {\n                qr = -lhq.w * rhq.w - lhq.x * rhq.x - lhq.y * rhq.y - lhq.z * rhq.z;\n                ph = Math.acos(qr);\n                s2 = -1 * Math.sin(ph * ratio) / Math.sin(ph);\n            }\n            else {\n                s2 = Math.sin(ph * ratio) / Math.sin(ph);\n            }\n            let s1 = Math.sin(ph * (1.0 - ratio)) / Math.sin(ph);\n            q.v[0] = lhq.x * s1 + rhq.x * s2;\n            q.v[1] = lhq.y * s1 + rhq.y * s2;\n            q.v[2] = lhq.z * s1 + rhq.z * s2;\n            q.v[3] = lhq.w * s1 + rhq.w * s2;\n            return q;\n        }\n    }\n    static axisAngle(axisVec3, radian) {\n        var halfAngle = 0.5 * radian;\n        var sin = Math.sin(halfAngle);\n        var axis = _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"].normalize(axisVec3);\n        return new Quaternion(sin * axis.x, sin * axis.y, sin * axis.z, Math.cos(halfAngle));\n    }\n    static multiply(q1, q2) {\n        let result = new Quaternion(0, 0, 0, 1);\n        result.v[0] = q2.w * q1.x + q2.z * q1.y - q2.y * q1.z + q2.x * q1.w;\n        result.v[1] = -q2.z * q1.x + q2.w * q1.y + q2.x * q1.z + q2.y * q1.w;\n        result.v[2] = q2.y * q1.x - q2.x * q1.y + q2.w * q1.z + q2.z * q1.w;\n        result.v[3] = -q2.x * q1.x - q2.y * q1.y - q2.z * q1.z + q2.w * q1.w;\n        return result;\n    }\n    static fromMatrix(m) {\n        let q = new Quaternion();\n        let tr = m.m00 + m.m11 + m.m22;\n        if (tr > 0) {\n            let S = 0.5 / Math.sqrt(tr + 1.0);\n            q.v[3] = 0.25 / S;\n            q.v[0] = (m.m21 - m.m12) * S;\n            q.v[1] = (m.m02 - m.m20) * S;\n            q.v[2] = (m.m10 - m.m01) * S;\n        }\n        else if ((m.m00 > m.m11) && (m.m00 > m.m22)) {\n            let S = Math.sqrt(1.0 + m.m00 - m.m11 - m.m22) * 2;\n            q.v[3] = (m.m21 - m.m12) / S;\n            q.v[0] = 0.25 * S;\n            q.v[1] = (m.m01 + m.m10) / S;\n            q.v[2] = (m.m02 + m.m20) / S;\n        }\n        else if (m.m11 > m.m22) {\n            let S = Math.sqrt(1.0 + m.m11 - m.m00 - m.m22) * 2;\n            q.v[3] = (m.m02 - m.m20) / S;\n            q.v[0] = (m.m01 + m.m10) / S;\n            q.v[1] = 0.25 * S;\n            q.v[2] = (m.m12 + m.m21) / S;\n        }\n        else {\n            let S = Math.sqrt(1.0 + m.m22 - m.m00 - m.m11) * 2;\n            q.v[3] = (m.m10 - m.m01) / S;\n            q.v[0] = (m.m02 + m.m20) / S;\n            q.v[1] = (m.m12 + m.m21) / S;\n            q.v[2] = 0.25 * S;\n        }\n        return q;\n    }\n    static fromPosition(vec3) {\n        let q = new Quaternion(vec3.x, vec3.y, vec3.z, 0);\n        return q;\n    }\n    at(i) {\n        switch (i % 4) {\n            case 0: return this.x;\n            case 1: return this.y;\n            case 2: return this.z;\n            case 3: return this.w;\n        }\n    }\n    toString() {\n        return '(' + this.x + ', ' + this.y + ', ' + this.z + ', ' + this.w + ')';\n    }\n    get x() {\n        return this.v[0];\n    }\n    get y() {\n        return this.v[1];\n    }\n    get z() {\n        return this.v[2];\n    }\n    get w() {\n        return this.v[3];\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/Quaternion.ts?");

/***/ }),

/***/ "./src/foundation/math/RowMajarMatrix44.ts":
/*!*************************************************!*\
  !*** ./src/foundation/math/RowMajarMatrix44.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RowMajarMatrix44; });\n/* harmony import */ var _Vector3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _Quaternion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Quaternion */ \"./src/foundation/math/Quaternion.ts\");\n/* harmony import */ var _Vector4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n//import GLBoost from '../../globals';\n\n\n\n\nconst FloatArray = Float32Array;\nclass RowMajarMatrix44 {\n    constructor(m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, notCopyFloatArray = false) {\n        const _notCopyFloatArray = (arguments.length >= 16) ? notCopyFloatArray : m1;\n        const m = m0;\n        if (m == null) {\n            this.v = new FloatArray(0);\n            return;\n        }\n        if (arguments.length >= 16) {\n            let m = arguments;\n            this.v = new FloatArray(16); // Data order is row major\n            this.v[0] = m[0];\n            this.v[4] = m[4];\n            this.v[8] = m[8];\n            this.v[12] = m[12];\n            this.v[1] = m[1];\n            this.v[5] = m[5];\n            this.v[9] = m[9];\n            this.v[13] = m[13];\n            this.v[2] = m[2];\n            this.v[6] = m[6];\n            this.v[10] = m[10];\n            this.v[14] = m[14];\n            this.v[3] = m[3];\n            this.v[7] = m[7];\n            this.v[11] = m[11];\n            this.v[15] = m[15];\n        }\n        else if (Array.isArray(m)) {\n            this.v = new FloatArray(16);\n            this.v[0] = m[0];\n            this.v[4] = m[4];\n            this.v[8] = m[8];\n            this.v[12] = m[12];\n            this.v[1] = m[1];\n            this.v[5] = m[5];\n            this.v[9] = m[9];\n            this.v[13] = m[13];\n            this.v[2] = m[2];\n            this.v[6] = m[6];\n            this.v[10] = m[10];\n            this.v[14] = m[14];\n            this.v[3] = m[3];\n            this.v[7] = m[7];\n            this.v[11] = m[11];\n            this.v[15] = m[15];\n        }\n        else if (m instanceof FloatArray) {\n            if (_notCopyFloatArray) {\n                this.v = m;\n            }\n            else {\n                this.v = new FloatArray(16);\n                this.v[0] = m[0];\n                this.v[4] = m[4];\n                this.v[8] = m[8];\n                this.v[12] = m[12];\n                this.v[1] = m[1];\n                this.v[5] = m[5];\n                this.v[9] = m[9];\n                this.v[13] = m[13];\n                this.v[2] = m[2];\n                this.v[6] = m[6];\n                this.v[10] = m[10];\n                this.v[14] = m[14];\n                this.v[3] = m[3];\n                this.v[7] = m[7];\n                this.v[11] = m[11];\n                this.v[15] = m[15];\n            }\n        }\n        else if (!!m && typeof m.m33 !== 'undefined' && typeof m.m22 !== 'undefined') {\n            if (_notCopyFloatArray) {\n                this.v = m.v;\n            }\n            else {\n                this.v = new FloatArray(16);\n                this.v[0] = m.m00;\n                this.v[4] = m.m10;\n                this.v[8] = m.m20;\n                this.v[12] = m.m30;\n                this.v[1] = m.m01;\n                this.v[5] = m.m11;\n                this.v[9] = m.m21;\n                this.v[13] = m.m31;\n                this.v[2] = m.m02;\n                this.v[6] = m.m12;\n                this.v[10] = m.m22;\n                this.v[14] = m.m32;\n                this.v[3] = m.m03;\n                this.v[7] = m.m13;\n                this.v[11] = m.m23;\n                this.v[15] = m.m33;\n            }\n        }\n        else if (!!m && typeof m.m33 === 'undefined' && typeof m.m22 !== 'undefined') {\n            if (_notCopyFloatArray) {\n                this.v = m.v;\n            }\n            else {\n                this.v = new FloatArray(16);\n                this.v[0] = m.m00;\n                this.v[4] = m.m10;\n                this.v[8] = m.m20;\n                this.v[12] = 0;\n                this.v[1] = m.m01;\n                this.v[5] = m.m11;\n                this.v[9] = m.m21;\n                this.v[13] = 0;\n                this.v[2] = m.m02;\n                this.v[6] = m.m12;\n                this.v[10] = m.m22;\n                this.v[14] = 0;\n                this.v[3] = 0;\n                this.v[7] = 0;\n                this.v[11] = 0;\n                this.v[15] = 1;\n            }\n        }\n        else if (!!m && typeof m.className !== 'undefined' && m.className === 'Quaternion') {\n            this.v = new FloatArray(16);\n            const sx = m.x * m.x;\n            const sy = m.y * m.y;\n            const sz = m.z * m.z;\n            const cx = m.y * m.z;\n            const cy = m.x * m.z;\n            const cz = m.x * m.y;\n            const wx = m.w * m.x;\n            const wy = m.w * m.y;\n            const wz = m.w * m.z;\n            this.v[0] = 1.0 - 2.0 * (sy + sz);\n            this.v[1] = 2.0 * (cz - wz);\n            this.v[2] = 2.0 * (cy + wy);\n            this.v[3] = 0;\n            this.v[4] = 2.0 * (cz + wz);\n            this.v[5] = 1.0 - 2.0 * (sx + sz);\n            this.v[6] = 2.0 * (cx - wx);\n            this.v[7] = 0;\n            this.v[8] = 2.0 * (cy - wy);\n            this.v[9] = 2.0 * (cx + wx);\n            this.v[10] = 1.0 - 2.0 * (sx + sy);\n            this.v[11] = 0;\n            this.v[12] = 0;\n            this.v[13] = 0;\n            this.v[14] = 0;\n            this.v[15] = 1;\n        }\n        else {\n            this.v = new FloatArray(16);\n            this.v[0] = 1;\n            this.v[4] = 0;\n            this.v[8] = 0;\n            this.v[12] = 0;\n            this.v[1] = 0;\n            this.v[5] = 1;\n            this.v[9] = 0;\n            this.v[13] = 0;\n            this.v[2] = 0;\n            this.v[6] = 0;\n            this.v[10] = 1;\n            this.v[14] = 0;\n            this.v[3] = 0;\n            this.v[7] = 0;\n            this.v[11] = 0;\n            this.v[15] = 1;\n        }\n    }\n    static dummy() {\n        return new RowMajarMatrix44(null);\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_3__[\"CompositionType\"].Mat4;\n    }\n    isDummy() {\n        if (this.v.length === 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get className() {\n        return this.constructor.name;\n    }\n    clone() {\n        return new RowMajarMatrix44(this.v[0], this.v[1], this.v[2], this.v[3], this.v[4], this.v[5], this.v[6], this.v[7], this.v[8], this.v[9], this.v[10], this.v[11], this.v[12], this.v[13], this.v[14], this.v[15]);\n    }\n    /**\n     * to the identity matrix（static版）\n     */\n    static identity() {\n        return new RowMajarMatrix44(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    isEqual(mat, delta = Number.EPSILON) {\n        if (Math.abs(mat.v[0] - this.v[0]) < delta &&\n            Math.abs(mat.v[1] - this.v[1]) < delta &&\n            Math.abs(mat.v[2] - this.v[2]) < delta &&\n            Math.abs(mat.v[3] - this.v[3]) < delta &&\n            Math.abs(mat.v[4] - this.v[4]) < delta &&\n            Math.abs(mat.v[5] - this.v[5]) < delta &&\n            Math.abs(mat.v[6] - this.v[6]) < delta &&\n            Math.abs(mat.v[7] - this.v[7]) < delta &&\n            Math.abs(mat.v[8] - this.v[8]) < delta &&\n            Math.abs(mat.v[9] - this.v[9]) < delta &&\n            Math.abs(mat.v[10] - this.v[10]) < delta &&\n            Math.abs(mat.v[11] - this.v[11]) < delta &&\n            Math.abs(mat.v[12] - this.v[12]) < delta &&\n            Math.abs(mat.v[13] - this.v[13]) < delta &&\n            Math.abs(mat.v[14] - this.v[14]) < delta &&\n            Math.abs(mat.v[15] - this.v[15]) < delta) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    getTranslate() {\n        return new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.m03, this.m13, this.m23);\n    }\n    static translate(vec) {\n        return new RowMajarMatrix44(1, 0, 0, vec.x, 0, 1, 0, vec.y, 0, 0, 1, vec.z, 0, 0, 0, 1);\n    }\n    static scale(vec) {\n        return new RowMajarMatrix44(vec.x, 0, 0, 0, 0, vec.y, 0, 0, 0, 0, vec.z, 0, 0, 0, 0, 1);\n    }\n    /**\n     * Create X oriented Rotation Matrix\n    */\n    static rotateX(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new RowMajarMatrix44(1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1);\n    }\n    /**\n     * Create Y oriented Rotation Matrix\n     */\n    static rotateY(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new RowMajarMatrix44(cos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 1);\n    }\n    /**\n     * Create Z oriented Rotation Matrix\n     */\n    static rotateZ(radian) {\n        var cos = Math.cos(radian);\n        var sin = Math.sin(radian);\n        return new RowMajarMatrix44(cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    /**\n     * @return Euler Angles Rotation (x, y, z)\n     */\n    toEulerAngles() {\n        let rotate = null;\n        if (Math.abs(this.m20) != 1.0) {\n            let y = -Math.asin(this.m20);\n            let x = Math.atan2(this.m21 / Math.cos(y), this.m22 / Math.cos(y));\n            let z = Math.atan2(this.m10 / Math.cos(y), this.m00 / Math.cos(y));\n            rotate = new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x, y, z);\n        }\n        else if (this.m20 === -1.0) {\n            rotate = new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.atan2(this.m01, this.m02), Math.PI / 2.0, 0.0);\n        }\n        else {\n            rotate = new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.atan2(-this.m01, -this.m02), -Math.PI / 2.0, 0.0);\n        }\n        return rotate;\n    }\n    static zero() {\n        return new RowMajarMatrix44(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n    raw() {\n        return this.v;\n    }\n    flattenAsArray() {\n        return [this.v[0], this.v[1], this.v[2], this.v[3],\n            this.v[4], this.v[5], this.v[6], this.v[7],\n            this.v[8], this.v[9], this.v[10], this.v[11],\n            this.v[12], this.v[13], this.v[14], this.v[15]];\n    }\n    /**\n     * transpose(static version)\n     */\n    static transpose(mat) {\n        var mat_t = new RowMajarMatrix44(mat.m00, mat.m10, mat.m20, mat.m30, mat.m01, mat.m11, mat.m21, mat.m31, mat.m02, mat.m12, mat.m22, mat.m32, mat.m03, mat.m13, mat.m23, mat.m33);\n        return mat_t;\n    }\n    multiplyVector(vec) {\n        var x = this.m00 * vec.x + this.m01 * vec.y + this.m02 * vec.z + this.m03 * vec.w;\n        var y = this.m10 * vec.x + this.m11 * vec.y + this.m12 * vec.z + this.m13 * vec.w;\n        var z = this.m20 * vec.x + this.m21 * vec.y + this.m22 * vec.z + this.m23 * vec.w;\n        var w = this.m30 * vec.x + this.m31 * vec.y + this.m32 * vec.z + this.m33 * vec.w;\n        return new _Vector4__WEBPACK_IMPORTED_MODULE_2__[\"default\"](x, y, z, w);\n    }\n    /**\n     * multiply zero matrix and zero matrix(static version)\n     */\n    static multiply(l_m, r_m) {\n        var m00 = l_m.m00 * r_m.m00 + l_m.m01 * r_m.m10 + l_m.m02 * r_m.m20 + l_m.m03 * r_m.m30;\n        var m10 = l_m.m10 * r_m.m00 + l_m.m11 * r_m.m10 + l_m.m12 * r_m.m20 + l_m.m13 * r_m.m30;\n        var m20 = l_m.m20 * r_m.m00 + l_m.m21 * r_m.m10 + l_m.m22 * r_m.m20 + l_m.m23 * r_m.m30;\n        var m30 = l_m.m30 * r_m.m00 + l_m.m31 * r_m.m10 + l_m.m32 * r_m.m20 + l_m.m33 * r_m.m30;\n        var m01 = l_m.m00 * r_m.m01 + l_m.m01 * r_m.m11 + l_m.m02 * r_m.m21 + l_m.m03 * r_m.m31;\n        var m11 = l_m.m10 * r_m.m01 + l_m.m11 * r_m.m11 + l_m.m12 * r_m.m21 + l_m.m13 * r_m.m31;\n        var m21 = l_m.m20 * r_m.m01 + l_m.m21 * r_m.m11 + l_m.m22 * r_m.m21 + l_m.m23 * r_m.m31;\n        var m31 = l_m.m30 * r_m.m01 + l_m.m31 * r_m.m11 + l_m.m32 * r_m.m21 + l_m.m33 * r_m.m31;\n        var m02 = l_m.m00 * r_m.m02 + l_m.m01 * r_m.m12 + l_m.m02 * r_m.m22 + l_m.m03 * r_m.m32;\n        var m12 = l_m.m10 * r_m.m02 + l_m.m11 * r_m.m12 + l_m.m12 * r_m.m22 + l_m.m13 * r_m.m32;\n        var m22 = l_m.m20 * r_m.m02 + l_m.m21 * r_m.m12 + l_m.m22 * r_m.m22 + l_m.m23 * r_m.m32;\n        var m32 = l_m.m30 * r_m.m02 + l_m.m31 * r_m.m12 + l_m.m32 * r_m.m22 + l_m.m33 * r_m.m32;\n        var m03 = l_m.m00 * r_m.m03 + l_m.m01 * r_m.m13 + l_m.m02 * r_m.m23 + l_m.m03 * r_m.m33;\n        var m13 = l_m.m10 * r_m.m03 + l_m.m11 * r_m.m13 + l_m.m12 * r_m.m23 + l_m.m13 * r_m.m33;\n        var m23 = l_m.m20 * r_m.m03 + l_m.m21 * r_m.m13 + l_m.m22 * r_m.m23 + l_m.m23 * r_m.m33;\n        var m33 = l_m.m30 * r_m.m03 + l_m.m31 * r_m.m13 + l_m.m32 * r_m.m23 + l_m.m33 * r_m.m33;\n        return new RowMajarMatrix44(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    determinant() {\n        return this.m00 * this.m11 * this.m22 * this.m33 + this.m00 * this.m12 * this.m23 * this.m31 + this.m00 * this.m13 * this.m21 * this.m32 +\n            this.m01 * this.m10 * this.m23 * this.m32 + this.m01 * this.m12 * this.m20 * this.m33 + this.m01 * this.m13 * this.m22 * this.m30 +\n            this.m02 * this.m10 * this.m21 * this.m33 + this.m02 * this.m11 * this.m23 * this.m30 + this.m02 * this.m13 * this.m20 * this.m31 +\n            this.m03 * this.m10 * this.m22 * this.m31 + this.m03 * this.m11 * this.m20 * this.m32 + this.m03 * this.m12 * this.m21 * this.m30 -\n            this.m00 * this.m11 * this.m23 * this.m32 - this.m00 * this.m12 * this.m21 * this.m33 - this.m00 * this.m13 * this.m22 * this.m31 -\n            this.m01 * this.m10 * this.m22 * this.m33 - this.m01 * this.m12 * this.m23 * this.m30 - this.m01 * this.m13 * this.m20 * this.m32 -\n            this.m02 * this.m10 * this.m23 * this.m31 - this.m02 * this.m11 * this.m20 * this.m33 - this.m02 * this.m13 * this.m21 * this.m30 -\n            this.m03 * this.m10 * this.m21 * this.m32 - this.m03 * this.m11 * this.m22 * this.m30 - this.m03 * this.m12 * this.m20 * this.m31;\n    }\n    static determinant(mat) {\n        return mat.m00 * mat.m11 * mat.m22 * mat.m33 + mat.m00 * mat.m12 * mat.m23 * mat.m31 + mat.m00 * mat.m13 * mat.m21 * mat.m32 +\n            mat.m01 * mat.m10 * mat.m23 * mat.m32 + mat.m01 * mat.m12 * mat.m20 * mat.m33 + mat.m01 * mat.m13 * mat.m22 * mat.m30 +\n            mat.m02 * mat.m10 * mat.m21 * mat.m33 + mat.m02 * mat.m11 * mat.m23 * mat.m30 + mat.m02 * mat.m13 * mat.m20 * mat.m31 +\n            mat.m03 * mat.m10 * mat.m22 * mat.m31 + mat.m03 * mat.m11 * mat.m20 * mat.m32 + mat.m03 * mat.m12 * mat.m21 * mat.m30 -\n            mat.m00 * mat.m11 * mat.m23 * mat.m32 - mat.m00 * mat.m12 * mat.m21 * mat.m33 - mat.m00 * mat.m13 * mat.m22 * mat.m31 -\n            mat.m01 * mat.m10 * mat.m22 * mat.m33 - mat.m01 * mat.m12 * mat.m23 * mat.m30 - mat.m01 * mat.m13 * mat.m20 * mat.m32 -\n            mat.m02 * mat.m10 * mat.m23 * mat.m31 - mat.m02 * mat.m11 * mat.m20 * mat.m33 - mat.m02 * mat.m13 * mat.m21 * mat.m30 -\n            mat.m03 * mat.m10 * mat.m21 * mat.m32 - mat.m03 * mat.m11 * mat.m22 * mat.m30 - mat.m03 * mat.m12 * mat.m20 * mat.m31;\n    }\n    static invert(mat) {\n        var det = mat.determinant();\n        var m00 = (mat.m11 * mat.m22 * mat.m33 + mat.m12 * mat.m23 * mat.m31 + mat.m13 * mat.m21 * mat.m32 - mat.m11 * mat.m23 * mat.m32 - mat.m12 * mat.m21 * mat.m33 - mat.m13 * mat.m22 * mat.m31) / det;\n        var m01 = (mat.m01 * mat.m23 * mat.m32 + mat.m02 * mat.m21 * mat.m33 + mat.m03 * mat.m22 * mat.m31 - mat.m01 * mat.m22 * mat.m33 - mat.m02 * mat.m23 * mat.m31 - mat.m03 * mat.m21 * mat.m32) / det;\n        var m02 = (mat.m01 * mat.m12 * mat.m33 + mat.m02 * mat.m13 * mat.m31 + mat.m03 * mat.m11 * mat.m32 - mat.m01 * mat.m13 * mat.m32 - mat.m02 * mat.m11 * mat.m33 - mat.m03 * mat.m12 * mat.m31) / det;\n        var m03 = (mat.m01 * mat.m13 * mat.m22 + mat.m02 * mat.m11 * mat.m23 + mat.m03 * mat.m12 * mat.m21 - mat.m01 * mat.m12 * mat.m23 - mat.m02 * mat.m13 * mat.m21 - mat.m03 * mat.m11 * mat.m22) / det;\n        var m10 = (mat.m10 * mat.m23 * mat.m32 + mat.m12 * mat.m20 * mat.m33 + mat.m13 * mat.m22 * mat.m30 - mat.m10 * mat.m22 * mat.m33 - mat.m12 * mat.m23 * mat.m30 - mat.m13 * mat.m20 * mat.m32) / det;\n        var m11 = (mat.m00 * mat.m22 * mat.m33 + mat.m02 * mat.m23 * mat.m30 + mat.m03 * mat.m20 * mat.m32 - mat.m00 * mat.m23 * mat.m32 - mat.m02 * mat.m20 * mat.m33 - mat.m03 * mat.m22 * mat.m30) / det;\n        var m12 = (mat.m00 * mat.m13 * mat.m32 + mat.m02 * mat.m10 * mat.m33 + mat.m03 * mat.m12 * mat.m30 - mat.m00 * mat.m12 * mat.m33 - mat.m02 * mat.m13 * mat.m30 - mat.m03 * mat.m10 * mat.m32) / det;\n        var m13 = (mat.m00 * mat.m12 * mat.m23 + mat.m02 * mat.m13 * mat.m20 + mat.m03 * mat.m10 * mat.m22 - mat.m00 * mat.m13 * mat.m22 - mat.m02 * mat.m10 * mat.m23 - mat.m03 * mat.m12 * mat.m20) / det;\n        var m20 = (mat.m10 * mat.m21 * mat.m33 + mat.m11 * mat.m23 * mat.m30 + mat.m13 * mat.m20 * mat.m31 - mat.m10 * mat.m23 * mat.m31 - mat.m11 * mat.m20 * mat.m33 - mat.m13 * mat.m21 * mat.m30) / det;\n        var m21 = (mat.m00 * mat.m23 * mat.m31 + mat.m01 * mat.m20 * mat.m33 + mat.m03 * mat.m21 * mat.m30 - mat.m00 * mat.m21 * mat.m33 - mat.m01 * mat.m23 * mat.m30 - mat.m03 * mat.m20 * mat.m31) / det;\n        var m22 = (mat.m00 * mat.m11 * mat.m33 + mat.m01 * mat.m13 * mat.m30 + mat.m03 * mat.m10 * mat.m31 - mat.m00 * mat.m13 * mat.m31 - mat.m01 * mat.m10 * mat.m33 - mat.m03 * mat.m11 * mat.m30) / det;\n        var m23 = (mat.m00 * mat.m13 * mat.m21 + mat.m01 * mat.m10 * mat.m23 + mat.m03 * mat.m11 * mat.m20 - mat.m00 * mat.m11 * mat.m23 - mat.m01 * mat.m13 * mat.m20 - mat.m03 * mat.m10 * mat.m21) / det;\n        var m30 = (mat.m10 * mat.m22 * mat.m31 + mat.m11 * mat.m20 * mat.m32 + mat.m12 * mat.m21 * mat.m30 - mat.m10 * mat.m21 * mat.m32 - mat.m11 * mat.m22 * mat.m30 - mat.m12 * mat.m20 * mat.m31) / det;\n        var m31 = (mat.m00 * mat.m21 * mat.m32 + mat.m01 * mat.m22 * mat.m30 + mat.m02 * mat.m20 * mat.m31 - mat.m00 * mat.m22 * mat.m31 - mat.m01 * mat.m20 * mat.m32 - mat.m02 * mat.m21 * mat.m30) / det;\n        var m32 = (mat.m00 * mat.m12 * mat.m31 + mat.m01 * mat.m10 * mat.m32 + mat.m02 * mat.m11 * mat.m30 - mat.m00 * mat.m11 * mat.m32 - mat.m01 * mat.m12 * mat.m30 - mat.m02 * mat.m10 * mat.m31) / det;\n        var m33 = (mat.m00 * mat.m11 * mat.m22 + mat.m01 * mat.m12 * mat.m20 + mat.m02 * mat.m10 * mat.m21 - mat.m00 * mat.m12 * mat.m21 - mat.m01 * mat.m10 * mat.m22 - mat.m02 * mat.m11 * mat.m20) / det;\n        return new RowMajarMatrix44(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n    }\n    get m00() {\n        return this.v[0];\n    }\n    get m01() {\n        return this.v[1];\n    }\n    get m02() {\n        return this.v[2];\n    }\n    get m03() {\n        return this.v[3];\n    }\n    get m10() {\n        return this.v[4];\n    }\n    get m11() {\n        return this.v[5];\n    }\n    get m12() {\n        return this.v[6];\n    }\n    get m13() {\n        return this.v[7];\n    }\n    get m20() {\n        return this.v[8];\n    }\n    get m21() {\n        return this.v[9];\n    }\n    get m22() {\n        return this.v[10];\n    }\n    get m23() {\n        return this.v[11];\n    }\n    get m30() {\n        return this.v[12];\n    }\n    get m31() {\n        return this.v[13];\n    }\n    get m32() {\n        return this.v[14];\n    }\n    get m33() {\n        return this.v[15];\n    }\n    toString() {\n        return this.m00 + ' ' + this.m01 + ' ' + this.m02 + ' ' + this.m03 + ' \\n' +\n            this.m10 + ' ' + this.m11 + ' ' + this.m12 + ' ' + this.m13 + ' \\n' +\n            this.m20 + ' ' + this.m21 + ' ' + this.m22 + ' ' + this.m23 + ' \\n' +\n            this.m30 + ' ' + this.m31 + ' ' + this.m32 + ' ' + this.m33 + ' \\n';\n    }\n    nearZeroToZero(value) {\n        if (Math.abs(value) < 0.00001) {\n            value = 0;\n        }\n        else if (0.99999 < value && value < 1.00001) {\n            value = 1;\n        }\n        else if (-1.00001 < value && value < -0.99999) {\n            value = -1;\n        }\n        return value;\n    }\n    toStringApproximately() {\n        return this.nearZeroToZero(this.m00) + ' ' + this.nearZeroToZero(this.m01) + ' ' + this.nearZeroToZero(this.m02) + ' ' + this.nearZeroToZero(this.m03) + ' \\n' +\n            this.nearZeroToZero(this.m10) + ' ' + this.nearZeroToZero(this.m11) + ' ' + this.nearZeroToZero(this.m12) + ' ' + this.nearZeroToZero(this.m13) + ' \\n' +\n            this.nearZeroToZero(this.m20) + ' ' + this.nearZeroToZero(this.m21) + ' ' + this.nearZeroToZero(this.m22) + ' ' + this.nearZeroToZero(this.m23) + ' \\n' +\n            this.nearZeroToZero(this.m30) + ' ' + this.nearZeroToZero(this.m31) + ' ' + this.nearZeroToZero(this.m32) + ' ' + this.nearZeroToZero(this.m33) + ' \\n';\n    }\n    getScale() {\n        return new _Vector3__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.sqrt(this.m00 * this.m00 + this.m01 * this.m01 + this.m02 * this.m02), Math.sqrt(this.m10 * this.m10 + this.m11 * this.m11 + this.m12 * this.m12), Math.sqrt(this.m20 * this.m20 + this.m21 * this.m21 + this.m22 * this.m22));\n    }\n    getRotate() {\n        const quat = _Quaternion__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fromMatrix(this);\n        const rotateMat = new RowMajarMatrix44(quat);\n        return rotateMat;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/RowMajarMatrix44.ts?");

/***/ }),

/***/ "./src/foundation/math/Vector2.ts":
/*!****************************************!*\
  !*** ./src/foundation/math/Vector2.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Vector2; });\nclass Vector2 {\n    constructor(x, y) {\n        if (ArrayBuffer.isView(x)) {\n            this.v = x;\n            return;\n        }\n        else {\n            this.v = new Float32Array(2);\n        }\n        this.x = x;\n        this.y = y;\n    }\n    get className() {\n        return this.constructor.name;\n    }\n    clone() {\n        return new Vector2(this.x, this.y);\n    }\n    multiply(val) {\n        this.x *= val;\n        this.y *= val;\n        return this;\n    }\n    isStrictEqual(vec) {\n        if (this.x === vec.x && this.y === vec.y) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    isEqual(vec, delta = Number.EPSILON) {\n        if (Math.abs(vec.x - this.x) < delta &&\n            Math.abs(vec.y - this.y) < delta) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    static multiply(vec2, val) {\n        return new Vector2(vec2.x * val, vec2.y * val);\n    }\n    get x() {\n        return this.v[0];\n    }\n    set x(x) {\n        this.v[0] = x;\n    }\n    get y() {\n        return this.v[1];\n    }\n    set y(y) {\n        this.v[1] = y;\n    }\n    get raw() {\n        return this.v;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/math/Vector2.ts?");

/***/ }),

/***/ "./src/foundation/math/Vector3.ts":
/*!****************************************!*\
  !*** ./src/foundation/math/Vector3.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Vector3; });\n/* harmony import */ var _misc_IsUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../misc/IsUtil */ \"./src/foundation/misc/IsUtil.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n\n\nclass Vector3 {\n    constructor(x, y, z) {\n        if (ArrayBuffer.isView(x)) {\n            this.v = x;\n            return;\n        }\n        else if (x == null) {\n            this.v = new Float32Array(0);\n            return;\n        }\n        else {\n            this.v = new Float32Array(3);\n        }\n        if (_misc_IsUtil__WEBPACK_IMPORTED_MODULE_0__[\"default\"].not.exist(x)) {\n            this.v[0] = 0;\n            this.v[1] = 0;\n            this.v[2] = 0;\n        }\n        else if (Array.isArray(x)) {\n            this.v[0] = x[0];\n            this.v[1] = x[1];\n            this.v[2] = x[2];\n        }\n        else if (typeof x.w !== 'undefined') {\n            this.v[0] = x.x;\n            this.v[1] = x.y;\n            this.v[2] = x.z;\n        }\n        else if (typeof x.z !== 'undefined') {\n            this.v[0] = x.x;\n            this.v[1] = x.y;\n            this.v[2] = x.z;\n        }\n        else if (typeof x.y !== 'undefined') {\n            this.v[0] = x.x;\n            this.v[1] = x.y;\n            this.v[2] = 0;\n        }\n        else {\n            this.v[0] = x;\n            this.v[1] = y;\n            this.v[2] = z;\n        }\n    }\n    get className() {\n        return this.constructor.name;\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__[\"CompositionType\"].Vec3;\n    }\n    isStrictEqual(vec) {\n        if (this.x === vec.x && this.y === vec.y && this.z === vec.z) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    isEqual(vec, delta = Number.EPSILON) {\n        if (Math.abs(vec.x - this.x) < delta &&\n            Math.abs(vec.y - this.y) < delta &&\n            Math.abs(vec.z - this.z) < delta) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Zero Vector\n     */\n    static zero() {\n        return new Vector3(0, 0, 0);\n    }\n    static one() {\n        return new Vector3(1, 1, 1);\n    }\n    static dummy() {\n        return new Vector3(null);\n    }\n    isDummy() {\n        if (this.v.length === 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    clone() {\n        return new Vector3(this.x, this.y, this.z);\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n    copyComponents(vec) {\n        this.v[0] = vec.v[0];\n        this.v[1] = vec.v[1];\n        this.v[2] = vec.v[2];\n    }\n    /**\n     * to square length(static verison)\n     */\n    static lengthSquared(vec3) {\n        return vec3.x * vec3.x + vec3.y * vec3.y + vec3.z * vec3.z;\n    }\n    lengthTo(vec3) {\n        var deltaX = vec3.x - this.x;\n        var deltaY = vec3.y - this.y;\n        var deltaZ = vec3.z - this.z;\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ);\n    }\n    static lengthBtw(lhv, rhv) {\n        var deltaX = rhv.x - lhv.x;\n        var deltaY = rhv.y - lhv.y;\n        var deltaZ = rhv.z - lhv.z;\n        return Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ);\n    }\n    /**\n     * dot product\n     */\n    dotProduct(vec3) {\n        return this.x * vec3.x + this.y * vec3.y + this.z * vec3.z;\n    }\n    /**\n     * dot product(static version)\n     */\n    static dotProduct(lv, rv) {\n        return lv.x * rv.x + lv.y * rv.y + lv.z * rv.z;\n    }\n    /**\n    * cross product(static version)\n    */\n    static cross(lv, rv) {\n        var x = lv.y * rv.z - lv.z * rv.y;\n        var y = lv.z * rv.x - lv.x * rv.z;\n        var z = lv.x * rv.y - lv.y * rv.x;\n        return new lv.constructor(x, y, z);\n    }\n    /**\n     * normalize(static version)\n     */\n    static normalize(vec3) {\n        var length = vec3.length();\n        var newVec = new vec3.constructor(vec3.x, vec3.y, vec3.z);\n        newVec = Vector3.divide(newVec, length);\n        return newVec;\n    }\n    /**\n     * add value（static version）\n     */\n    static add(lv, rv) {\n        return new lv.constructor(lv.x + rv.x, lv.y + rv.y, lv.z + rv.z);\n    }\n    /**\n     * subtract(subtract)\n     */\n    static subtract(lv, rv) {\n        return new lv.constructor(lv.x - rv.x, lv.y - rv.y, lv.z - rv.z);\n    }\n    /**\n     * divide(static version)\n     */\n    static divide(vec3, val) {\n        if (val !== 0) {\n            return new vec3.constructor(vec3.x / val, vec3.y / val, vec3.z / val);\n        }\n        else {\n            console.error(\"0 division occured!\");\n            return new vec3.constructor(Infinity, Infinity, Infinity);\n        }\n    }\n    /**\n     * multiply(static version)\n     */\n    static multiply(vec3, val) {\n        return new vec3.constructor(vec3.x * val, vec3.y * val, vec3.z * val);\n    }\n    /**\n     * multiply vector(static version)\n     */\n    static multiplyVector(vec3, vec) {\n        return new vec3.constructor(vec3.x * vec.x, vec3.y * vec.y, vec3.z * vec.z);\n    }\n    static angleOfVectors(lhv, rhv) {\n        let cos_sita = Vector3.dotProduct(lhv, rhv) / (lhv.length() * rhv.length());\n        let sita = Math.acos(cos_sita);\n        return sita;\n    }\n    /**\n     * divide vector(static version)\n     */\n    static divideVector(lvec3, rvec3) {\n        return new lvec3.constructor(lvec3.x / rvec3.x, lvec3.y / rvec3.y, lvec3.z / rvec3.z);\n    }\n    /**\n     * change to string\n     */\n    toString() {\n        return '(' + this.x + ', ' + this.y + ', ' + this.z + ')';\n    }\n    get x() {\n        return this.v[0];\n    }\n    get y() {\n        return this.v[1];\n    }\n    get z() {\n        return this.v[2];\n    }\n    get raw() {\n        return this.v;\n    }\n}\n//GLBoost['Vector3'] = Vector3;\n\n\n//# sourceURL=webpack:///./src/foundation/math/Vector3.ts?");

/***/ }),

/***/ "./src/foundation/math/Vector4.ts":
/*!****************************************!*\
  !*** ./src/foundation/math/Vector4.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Vector4; });\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n\nclass Vector4 {\n    constructor(x, y, z, w) {\n        if (ArrayBuffer.isView(x)) {\n            this.v = x;\n            return;\n        }\n        else if (x == null) {\n            this.v = new Float32Array(0);\n            return;\n        }\n        else {\n            this.v = new Float32Array(4);\n        }\n        if (Array.isArray(x)) {\n            this.v[0] = x[0];\n            this.v[1] = x[1];\n            this.v[2] = x[2];\n            this.v[3] = x[3];\n        }\n        else if (typeof x.w !== 'undefined') {\n            this.v[0] = x.x;\n            this.v[1] = x.y;\n            this.v[2] = x.z;\n            this.v[3] = x.w;\n        }\n        else if (typeof x.z !== 'undefined') {\n            this.v[0] = x.x;\n            this.v[1] = x.y;\n            this.v[2] = x.z;\n            this.v[3] = 1;\n        }\n        else if (typeof x.y !== 'undefined') {\n            this.v[0] = x.x;\n            this.v[1] = x.y;\n            this.v[2] = 0;\n            this.v[3] = 1;\n        }\n        else {\n            this.v[0] = x;\n            this.v[1] = y;\n            this.v[2] = z;\n            this.v[3] = w;\n        }\n    }\n    get className() {\n        return this.constructor.name;\n    }\n    static get compositionType() {\n        return _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_0__[\"CompositionType\"].Vec4;\n    }\n    static dummy() {\n        return new Vector4(null);\n    }\n    isDummy() {\n        if (this.v.length === 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    isStrictEqual(vec) {\n        if (this.v[0] === vec.v[0] && this.v[1] === vec.v[1] && this.v[2] === vec.v[2] && this.v[3] === vec.v[3]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    isEqual(vec, delta = Number.EPSILON) {\n        if (Math.abs(vec.v[0] - this.v[0]) < delta &&\n            Math.abs(vec.v[1] - this.v[1]) < delta &&\n            Math.abs(vec.v[2] - this.v[2]) < delta &&\n            Math.abs(vec.v[3] - this.v[3]) < delta) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    clone() {\n        return new this.constructor(this.x, this.y, this.z, this.w);\n    }\n    /**\n     * Zero Vector\n     */\n    static zero() {\n        return new this.constructor(0, 0, 0, 1);\n    }\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n    copyComponents(vec) {\n        this.v[0] = vec.v[0];\n        this.v[1] = vec.v[1];\n        this.v[2] = vec.v[2];\n        this.v[3] = vec.v[3];\n    }\n    static normalize(vec4) {\n        const length = vec4.length();\n        let newVec = new Vector4(vec4.x, vec4.y, vec4.z, vec4.w);\n        newVec = Vector4.divide(newVec, length);\n        return newVec;\n    }\n    /**\n     * add value（static version）\n     */\n    static add(lv, rv) {\n        return new lv.constructor(lv.x + rv.x, lv.y + rv.y, lv.z + rv.z, lv.z + rv.z);\n    }\n    static subtract(lv, rv) {\n        return new lv.constructor(lv.x - rv.x, lv.y - rv.y, lv.z - rv.z, lv.w - rv.w);\n    }\n    /**\n     * add value except w component（static version）\n     */\n    static addWithOutW(lv, rv) {\n        return new lv.constructor(lv.x + rv.x, lv.y + rv.y, lv.z + rv.z, lv.z);\n    }\n    static multiply(vec4, val) {\n        return new vec4.constructor(vec4.x * val, vec4.y * val, vec4.z * val, vec4.w * val);\n    }\n    static multiplyVector(vec4, vec) {\n        return new vec4.constructor(vec4.x * vec.x, vec4.y * vec.y, vec4.z * vec.z, vec4.w * vec.w);\n    }\n    static divide(vec4, val) {\n        if (val !== 0) {\n            return new vec4.constructor(vec4.x / val, vec4.y / val, vec4.z / val, vec4.w / val);\n        }\n        else {\n            console.warn(\"0 division occured!\");\n            return new vec4.constructor(Infinity, Infinity, Infinity, Infinity);\n        }\n    }\n    static divideVector(lvec4, rvec4) {\n        return new lvec4.constructor(lvec4.x / rvec4.x, lvec4.y / rvec4.y, lvec4.z / rvec4.z, lvec4.w / rvec4.w);\n    }\n    toString() {\n        return '(' + this.x + ', ' + this.y + ', ' + this.z + ', ' + this.w + ')';\n    }\n    get x() {\n        return this.v[0];\n    }\n    get y() {\n        return this.v[1];\n    }\n    get z() {\n        return this.v[2];\n    }\n    get w() {\n        return this.v[3];\n    }\n}\n// GLBoost[\"Vector4\"] = Vector4;\n\n\n//# sourceURL=webpack:///./src/foundation/math/Vector4.ts?");

/***/ }),

/***/ "./src/foundation/memory/AccessorBase.ts":
/*!***********************************************!*\
  !*** ./src/foundation/memory/AccessorBase.ts ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AccessorBase; });\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _core_Object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/Object */ \"./src/foundation/core/Object.ts\");\n/* harmony import */ var _math_Vector2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math/Vector2 */ \"./src/foundation/math/Vector2.ts\");\n/* harmony import */ var _math_Vector3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math/Vector3 */ \"./src/foundation/math/Vector3.ts\");\n/* harmony import */ var _math_Vector4__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math/Vector4 */ \"./src/foundation/math/Vector4.ts\");\n/* harmony import */ var _math_Matrix33__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../math/Matrix33 */ \"./src/foundation/math/Matrix33.ts\");\n/* harmony import */ var _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../math/MutableMatrix44 */ \"./src/foundation/math/MutableMatrix44.ts\");\n\n\n\n\n\n\n\n\nclass AccessorBase extends _core_Object__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    constructor({ bufferView, byteOffset, compositionType, componentType, byteStride, count, raw, max, min }) {\n        super(true);\n        this.__compositionType = _definitions_CompositionType__WEBPACK_IMPORTED_MODULE_1__[\"CompositionType\"].Unknown;\n        this.__componentType = _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Unknown;\n        this.__count = 0;\n        this.__takenCount = 0;\n        this.__byteStride = 0;\n        this.__bufferView = bufferView;\n        this.__byteOffsetInBuffer = bufferView.byteOffset + byteOffset;\n        this.__compositionType = compositionType;\n        this.__componentType = componentType;\n        this.__count = count;\n        this.__raw = raw.buffer;\n        if (max != null) {\n            this.__max = max;\n        }\n        if (min != null) {\n            this.__min = min;\n        }\n        this.__byteStride = byteStride;\n        if (this.__byteStride === 0) {\n            this.__byteStride = this.__compositionType.getNumberOfComponents() * this.__componentType.getSizeInBytes();\n        }\n        this.prepare();\n    }\n    prepare() {\n        const typedArrayClass = this.getTypedArrayClass(this.__componentType);\n        this.__typedArrayClass = typedArrayClass;\n        if (this.__componentType.getSizeInBytes() === 8) {\n            if (this.__byteOffsetInBuffer % 8 !== 0) {\n                console.info('Padding added because of byteOffset of accessor is not 8byte aligned despite of Double precision.');\n                this.__byteOffsetInBuffer += 8 - this.__byteOffsetInBuffer % 8;\n            }\n        }\n        if (this.__bufferView.isSoA) {\n            this.__dataView = new DataView(this.__raw, this.__byteOffsetInBuffer, this.__compositionType.getNumberOfComponents() * this.__componentType.getSizeInBytes() * this.__count);\n        }\n        else {\n            this.__dataView = new DataView(this.__raw, this.__byteOffsetInBuffer);\n        }\n        this.__typedArray = new typedArrayClass(this.__raw, this.__byteOffsetInBuffer, this.__compositionType.getNumberOfComponents() * this.__count);\n        this.__dataViewGetter = this.__dataView[this.getDataViewGetter(this.__componentType)].bind(this.__dataView);\n        this.__dataViewSetter = this.__dataView[this.getDataViewSetter(this.__componentType)].bind(this.__dataView);\n    }\n    getTypedArrayClass(componentType) {\n        switch (componentType) {\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Byte: return Int8Array;\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].UnsignedByte: return Uint8Array;\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Short: return Int16Array;\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].UnsignedShort: return Uint16Array;\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Int: return Int32Array;\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].UnsingedInt: return Uint32Array;\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Float: return Float32Array;\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Double: return Float64Array;\n            default: console.error('Unexpected ComponentType!');\n        }\n    }\n    getDataViewGetter(componentType) {\n        switch (componentType) {\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Byte: return 'getInt8';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].UnsignedByte: return 'getUint8';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Short: return 'getInt16';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].UnsignedShort: return 'getUint16';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Int: return 'getInt32';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].UnsingedInt: return 'getUint32';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Float: return 'getFloat32';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Double: return 'getFloat64';\n            default: console.error('Unexpected ComponentType!');\n        }\n    }\n    getDataViewSetter(componentType) {\n        switch (componentType) {\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Byte: return 'setInt8';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].UnsignedByte: return 'setUint8';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Short: return 'setInt16';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].UnsignedShort: return 'setUint16';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Int: return 'setInt32';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].UnsingedInt: return 'setUint32';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Float: return 'setFloat32';\n            case _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_0__[\"ComponentType\"].Double: return 'setFloat64';\n            default: console.error('Unexpected ComponentType!');\n        }\n        return undefined;\n    }\n    takeOne() {\n        const arrayBufferOfBufferView = this.__raw;\n        // let stride = this.__compositionType.getNumberOfComponents() * this.__componentType.getSizeInBytes();\n        // if (this.__bufferView.isAoS) {\n        //   stride = this.__bufferView.byteStride;\n        // }\n        const subTypedArray = new this.__typedArrayClass(arrayBufferOfBufferView, this.__byteOffsetInBuffer + this.__byteStride * this.__takenCount, this.__compositionType.getNumberOfComponents());\n        this.__takenCount += 1;\n        return subTypedArray;\n    }\n    get numberOfComponents() {\n        return this.__compositionType.getNumberOfComponents();\n    }\n    get componentSizeInBytes() {\n        return this.__componentType.getSizeInBytes();\n    }\n    get elementSizeInBytes() {\n        return this.numberOfComponents * this.componentSizeInBytes;\n    }\n    get elementCount() {\n        return this.__dataView.byteLength / (this.numberOfComponents * this.componentSizeInBytes);\n    }\n    get byteLength() {\n        return this.__byteStride * this.__count;\n    }\n    get componentType() {\n        return this.__componentType;\n    }\n    get compositionType() {\n        return this.__compositionType;\n    }\n    getTypedArray() {\n        if (this.__bufferView.isAoS) {\n            console.warn('Be careful. this referance bufferView is AoS(Array on Structure), it means Interleaved Data. So you can not access your data properly by this TypedArray.');\n        }\n        return this.__typedArray;\n    }\n    get isAoS() {\n        return this.__bufferView.isAoS;\n    }\n    get isSoA() {\n        return this.__bufferView.isSoA;\n    }\n    get byteStride() {\n        return this.__byteStride;\n    }\n    getScalar(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        return this.__dataViewGetter(this.__byteStride * index, endian);\n    }\n    getScalarAt(i, compositionOffset, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        return this.__dataViewGetter(this.__byteStride * index + compositionOffset, endian);\n    }\n    getVec2AsArray(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return [this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian)];\n    }\n    getVec3AsArray(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return [this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 2 * byteSize, endian)];\n    }\n    getVec4AsArray(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return [this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 2 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 3 * byteSize, endian)];\n    }\n    getMat3AsArray(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return [\n            this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 2 * byteSize, endian),\n            this.__dataViewGetter(this.__byteStride * index + 3 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 4 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 5 * byteSize, endian),\n            this.__dataViewGetter(this.__byteStride * index + 6 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 7 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 8 * byteSize, endian),\n        ];\n    }\n    getMat4AsArray(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return [\n            this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 2 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 3 * byteSize, endian),\n            this.__dataViewGetter(this.__byteStride * index + 4 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 5 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 6 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 7 * byteSize, endian),\n            this.__dataViewGetter(this.__byteStride * index + 8 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 9 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 10 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 11 * byteSize, endian),\n            this.__dataViewGetter(this.__byteStride * index + 12 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 13 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 14 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 15 * byteSize, endian),\n        ];\n    }\n    getVec2(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return new _math_Vector2__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian));\n    }\n    getVec3(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return new _math_Vector3__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 2 * byteSize, endian));\n    }\n    getVec4(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return new _math_Vector4__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 2 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 3 * byteSize, endian));\n    }\n    getMat3(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return new _math_Matrix33__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 2 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 3 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 4 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 5 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 6 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 7 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 8 * byteSize, endian));\n    }\n    getMat4(i, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const byteSize = this.componentSizeInBytes;\n        return new _math_MutableMatrix44__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this.__dataViewGetter(this.__byteStride * index, endian), this.__dataViewGetter(this.__byteStride * index + 1 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 2 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 3 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 4 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 5 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 6 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 7 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 8 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 9 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 10 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 11 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 12 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 13 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 14 * byteSize, endian), this.__dataViewGetter(this.__byteStride * index + 15 * byteSize, endian));\n    }\n    setScalar(i, value, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        this.__dataViewSetter(this.__byteStride * index, value, endian);\n    }\n    setVec2(i, x, y, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const sizeInBytes = this.componentSizeInBytes;\n        this.__dataViewSetter(this.__byteStride * index, x, endian);\n        this.__dataViewSetter(this.__byteStride * index + 1 * sizeInBytes, y, endian);\n    }\n    setVec3(i, x, y, z, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const sizeInBytes = this.componentSizeInBytes;\n        this.__dataViewSetter(this.__byteStride * index, x, endian);\n        this.__dataViewSetter(this.__byteStride * index + 1 * sizeInBytes, y, endian);\n        this.__dataViewSetter(this.__byteStride * index + 2 * sizeInBytes, z, endian);\n    }\n    setVec4(i, x, y, z, w, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const sizeInBytes = this.componentSizeInBytes;\n        this.__dataViewSetter(this.__byteStride * index, x, endian);\n        this.__dataViewSetter(this.__byteStride * index + 1 * sizeInBytes, y, endian);\n        this.__dataViewSetter(this.__byteStride * index + 2 * sizeInBytes, z, endian);\n        this.__dataViewSetter(this.__byteStride * index + 3 * sizeInBytes, w, endian);\n    }\n    setVec2AsVector(i, vec, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const sizeInBytes = this.componentSizeInBytes;\n        this.__dataViewSetter(this.__byteStride * index, vec.x, endian);\n        this.__dataViewSetter(this.__byteStride * index + 1 * sizeInBytes, vec.y, endian);\n    }\n    setVec3AsVector(i, vec, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const sizeInBytes = this.componentSizeInBytes;\n        this.__dataViewSetter(this.__byteStride * index, vec.x, endian);\n        this.__dataViewSetter(this.__byteStride * index + 1 * sizeInBytes, vec.y, endian);\n        this.__dataViewSetter(this.__byteStride * index + 2 * sizeInBytes, vec.z, endian);\n    }\n    setVec4AsVector(i, vec, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        const sizeInBytes = this.componentSizeInBytes;\n        this.__dataViewSetter(this.__byteStride * index, vec.x, endian);\n        this.__dataViewSetter(this.__byteStride * index + 1 * sizeInBytes, vec.y, endian);\n        this.__dataViewSetter(this.__byteStride * index + 2 * sizeInBytes, vec.z, endian);\n        this.__dataViewSetter(this.__byteStride * index + 3 * sizeInBytes, vec.w, endian);\n    }\n    copyFromTypedArray(typedArray) {\n        const componentN = this.numberOfComponents;\n        const setter = this['setVec' + componentN];\n        for (let j = 0; j < (typedArray.byteLength / this.componentSizeInBytes); j++) {\n            const idx = Math.floor(j / componentN);\n            const idxN = idx * componentN;\n            switch (componentN) {\n                case 1:\n                    setter.call(this, idx, typedArray[idxN + 0], {});\n                    break;\n                case 2:\n                    setter.call(this, idx, typedArray[idxN + 0], typedArray[idxN + 1], {});\n                    break;\n                case 3:\n                    setter.call(this, idx, typedArray[idxN + 0], typedArray[idxN + 1], typedArray[idxN + 2], {});\n                    break;\n                case 4:\n                    setter.call(this, idx, typedArray[idxN + 0], typedArray[idxN + 1], typedArray[idxN + 2], typedArray[idxN + 3], {});\n                    break;\n                default: throw new Error('Other than vectors are currently not supported.');\n            }\n        }\n    }\n    setScalarAt(i, conpositionOffset, value, { indicesAccessor, endian = true }) {\n        let index = i;\n        if (indicesAccessor) {\n            index = indicesAccessor.getScalar(i, {});\n        }\n        this.__dataViewSetter(this.__byteStride * index + conpositionOffset, value, endian);\n    }\n    setElementFromSameCompositionAccessor(i, accessor, secondIdx) {\n        const j = (secondIdx != null) ? secondIdx : i;\n        if (this.compositionType.getNumberOfComponents() === 1) {\n            this.setScalar(i, accessor.getScalar(j, {}), {});\n        }\n        else if (this.compositionType.getNumberOfComponents() === 2) {\n            this.setVec2AsVector(i, accessor.getVec2(j, {}), {});\n        }\n        else if (this.compositionType.getNumberOfComponents() === 3) {\n            this.setVec3AsVector(i, accessor.getVec3(j, {}), {});\n        }\n        else if (this.compositionType.getNumberOfComponents() === 4) {\n            this.setVec4AsVector(i, accessor.getVec4(j, {}), {});\n        }\n    }\n    get arrayBufferOfBufferView() {\n        return this.__raw;\n    }\n    get dataViewOfBufferView() {\n        return this.__dataView;\n    }\n    get byteOffsetInBufferView() {\n        return this.__byteOffsetInBuffer - this.__bufferView.byteOffset;\n    }\n    get byteOffsetInBuffer() {\n        return this.__byteOffsetInBuffer;\n    }\n    get bufferView() {\n        return this.__bufferView;\n    }\n    get min() {\n        return this.__min;\n    }\n    get max() {\n        return this.__max;\n    }\n    calcMinMax() {\n        const componentN = this.compositionType.getNumberOfComponents();\n        if (componentN === 4) {\n            const minVec4 = [Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE];\n            const maxVec4 = [-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE];\n            for (let i = 0; i < this.elementCount; i++) {\n                const vec4array = this.getVec4AsArray(i, {});\n                for (let j = 0; j < 4; j++) {\n                    if (vec4array[j] < minVec4[j]) {\n                        minVec4[j] = vec4array[j];\n                    }\n                    if (maxVec4[j] < vec4array[j]) {\n                        maxVec4[j] = vec4array[j];\n                    }\n                }\n            }\n            this.__min = minVec4;\n            this.__max = maxVec4;\n        }\n        else if (componentN === 3) {\n            const minVec3 = [Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE];\n            const maxVec3 = [-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE];\n            for (let i = 0; i < this.elementCount; i++) {\n                const vec3array = this.getVec3AsArray(i, {});\n                for (let j = 0; j < 3; j++) {\n                    if (vec3array[j] < minVec3[j]) {\n                        minVec3[j] = vec3array[j];\n                    }\n                    if (maxVec3[j] < vec3array[j]) {\n                        maxVec3[j] = vec3array[j];\n                    }\n                }\n            }\n            this.__min = minVec3;\n            this.__max = maxVec3;\n        }\n        else if (componentN === 2) {\n            const minVec2 = [Number.MAX_VALUE, Number.MAX_VALUE];\n            const maxVec2 = [-Number.MAX_VALUE, -Number.MAX_VALUE];\n            for (let i = 0; i < this.elementCount; i++) {\n                const vec2array = this.getVec2AsArray(i, {});\n                for (let j = 0; j < 2; j++) {\n                    if (vec2array[j] < minVec2[j]) {\n                        minVec2[j] = vec2array[j];\n                    }\n                    if (maxVec2[j] < vec2array[j]) {\n                        maxVec2[j] = vec2array[j];\n                    }\n                }\n            }\n            this.__min = minVec2;\n            this.__max = maxVec2;\n        }\n        else if (componentN === 1) {\n            let min = Number.MAX_VALUE;\n            let max = -Number.MAX_VALUE;\n            for (let i = 0; i < this.elementCount; i++) {\n                const scalar = this.getScalar(i, {});\n                if (scalar < min) {\n                    min = scalar;\n                }\n                if (max < scalar) {\n                    max = scalar;\n                }\n            }\n            this.__min = min;\n            this.__max = max;\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/memory/AccessorBase.ts?");

/***/ }),

/***/ "./src/foundation/memory/Buffer.ts":
/*!*****************************************!*\
  !*** ./src/foundation/memory/Buffer.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Buffer; });\n/* harmony import */ var _core_Object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Object */ \"./src/foundation/core/Object.ts\");\n/* harmony import */ var _BufferView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BufferView */ \"./src/foundation/memory/BufferView.ts\");\n\n\nclass Buffer extends _core_Object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor({ byteLength, arrayBuffer, name }) {\n        super(true);\n        this.__byteLength = 0;\n        this.__name = '';\n        this.__takenBytesIndex = 0;\n        this.__bufferViews = [];\n        this.__name = name;\n        this.__byteLength = byteLength;\n        this.__raw = arrayBuffer;\n    }\n    set name(str) {\n        this.__name = str;\n    }\n    get name() {\n        return this.__name;\n    }\n    getArrayBuffer() {\n        return this.__raw;\n    }\n    takeBufferView({ byteLengthToNeed, byteStride, isAoS }) {\n        if (byteLengthToNeed % 4 !== 0) {\n            console.info('Padding bytes added because byteLengthToNeed must be a multiple of 4.');\n            byteLengthToNeed += 4 - (byteLengthToNeed % 4);\n        }\n        // if (byteStride % 4 !== 0) {\n        //   console.info('Padding bytes added, byteStride must be a multiple of 4.');\n        //   byteStride += 4 - (byteStride % 4);\n        // }\n        const array = new Uint8Array(this.__raw, this.__takenBytesIndex, byteLengthToNeed);\n        const bufferView = new _BufferView__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ buffer: this, byteOffset: this.__takenBytesIndex, byteLength: byteLengthToNeed, raw: array, isAoS: isAoS });\n        bufferView.byteStride = byteStride;\n        this.__takenBytesIndex += Uint8Array.BYTES_PER_ELEMENT * byteLengthToNeed;\n        this.__bufferViews.push(bufferView);\n        return bufferView;\n    }\n    takeBufferViewWithByteOffset({ byteLengthToNeed, byteStride, byteOffset, isAoS }) {\n        if (byteLengthToNeed % 4 !== 0) {\n            console.info('Padding bytes added because byteLengthToNeed must be a multiple of 4.');\n            byteLengthToNeed += 4 - (byteLengthToNeed % 4);\n        }\n        // if (byteStride % 4 !== 0) {\n        //   console.info('Padding bytes added, byteStride must be a multiple of 4.');\n        //   byteStride += 4 - (byteStride % 4);\n        // }\n        const array = new Uint8Array(this.__raw, byteOffset, byteLengthToNeed);\n        const bufferView = new _BufferView__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ buffer: this, byteOffset: byteOffset, byteLength: byteLengthToNeed, raw: array, isAoS: isAoS });\n        const takenBytesIndex = Uint8Array.BYTES_PER_ELEMENT * byteLengthToNeed + byteOffset;\n        if (this.__takenBytesIndex < takenBytesIndex) {\n            this.__takenBytesIndex = takenBytesIndex;\n        }\n        bufferView.byteStride = byteStride;\n        this.__bufferViews.push(bufferView);\n        return bufferView;\n    }\n    _addTakenByteIndex(value) {\n        this.__takenBytesIndex = value;\n    }\n    get byteSizeInUse() {\n        return this.__byteLength;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/memory/Buffer.ts?");

/***/ }),

/***/ "./src/foundation/memory/BufferView.ts":
/*!*********************************************!*\
  !*** ./src/foundation/memory/BufferView.ts ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BufferView; });\n/* harmony import */ var _core_Object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Object */ \"./src/foundation/core/Object.ts\");\n/* harmony import */ var _AccessorBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessorBase */ \"./src/foundation/memory/AccessorBase.ts\");\n/* harmony import */ var _FlexibleAccessor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FlexibleAccessor */ \"./src/foundation/memory/FlexibleAccessor.ts\");\n\n\n\nclass BufferView extends _core_Object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor({ buffer, byteOffset, byteLength, raw, isAoS }) {\n        super(true);\n        this.__byteStride = 0;\n        this.__target = 0;\n        this.__takenByteIndex = 0;\n        this.__takenByteOffsetOfFirstElement = 0;\n        this.__accessors = [];\n        this.__buffer = buffer;\n        this.__byteOffset = byteOffset;\n        this.__byteLength = byteLength;\n        this.__raw = raw;\n        this.__isAoS = isAoS;\n    }\n    set byteStride(stride) {\n        this.__byteStride = stride;\n    }\n    get byteStride() {\n        return this.__byteStride;\n    }\n    get byteLength() {\n        return this.__byteLength;\n    }\n    get byteOffset() {\n        return this.__byteOffset;\n    }\n    get buffer() {\n        return this.__buffer;\n    }\n    get isSoA() {\n        return !this.__isAoS;\n    }\n    recheckIsSoA() {\n        if (this.__accessors.length <= 1) {\n            return true;\n        }\n        let firstStrideBytes = this.__accessors[0].byteStride;\n        let secondStrideBytes = this.__accessors[1].byteStride;\n        let firstElementSizeInBytes = this.__accessors[0].elementSizeInBytes;\n        let secondElementSizeInBytes = this.__accessors[1].elementSizeInBytes;\n        if (firstStrideBytes === secondStrideBytes &&\n            (firstElementSizeInBytes + secondElementSizeInBytes) < firstElementSizeInBytes) {\n            return true;\n        }\n    }\n    get isAoS() {\n        return this.__isAoS;\n    }\n    getUint8Array() {\n        return this.__raw;\n    }\n    takeAccessor({ compositionType, componentType, count, max, min }) {\n        const byteStride = this.byteStride;\n        const accessor = this.__takeAccessorInner({ compositionType, componentType, count, byteStride, accessorClass: _AccessorBase__WEBPACK_IMPORTED_MODULE_1__[\"default\"], max: max, min: min });\n        return accessor;\n    }\n    takeFlexibleAccessor({ compositionType, componentType, count, byteStride, max, min }) {\n        const accessor = this.__takeAccessorInner({ compositionType, componentType, count, byteStride, accessorClass: _FlexibleAccessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"], max: max, min: min });\n        return accessor;\n    }\n    takeAccessorWithByteOffset({ compositionType, componentType, count, byteOffset, max, min }) {\n        const byteStride = this.byteStride;\n        const accessor = this.__takeAccessorInnerWithByteOffset({ compositionType, componentType, count, byteStride, byteOffset, accessorClass: _AccessorBase__WEBPACK_IMPORTED_MODULE_1__[\"default\"], max, min });\n        return accessor;\n    }\n    takeFlexibleAccessorWithByteOffset({ compositionType, componentType, count, byteStride, byteOffset, max, min }) {\n        const accessor = this.__takeAccessorInnerWithByteOffset({ compositionType, componentType, count, byteStride, byteOffset, accessorClass: _FlexibleAccessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"], max, min });\n        return accessor;\n    }\n    __takeAccessorInner({ compositionType, componentType, count, byteStride, accessorClass, max, min }) {\n        let byteOffset = 0;\n        if (this.isSoA) {\n            byteOffset = this.__takenByteIndex;\n            this.__takenByteIndex += compositionType.getNumberOfComponents() * componentType.getSizeInBytes() * count;\n        }\n        else {\n            byteOffset = this.__takenByteIndex;\n            this.__takenByteIndex += compositionType.getNumberOfComponents() * componentType.getSizeInBytes();\n        }\n        if (byteOffset % 4 !== 0) {\n            console.info('Padding bytes added because byteOffset is not 4byte aligned.');\n            byteOffset += 4 - byteOffset % 4;\n        }\n        if (this.__byteOffset % 4 !== 0) {\n            console.info('Padding bytes added because byteOffsetFromBuffer is not 4byte aligned.');\n            this.__byteOffset += 4 - this.__byteOffset % 4;\n            this.buffer._addTakenByteIndex(4 - this.__byteOffset % 4);\n        }\n        const accessor = new accessorClass({\n            bufferView: this, byteOffset: byteOffset, compositionType: compositionType, componentType: componentType, byteStride: byteStride, count: count, raw: this.__raw, max: max, min: min\n        });\n        this.__accessors.push(accessor);\n        return accessor;\n    }\n    __takeAccessorInnerWithByteOffset({ compositionType, componentType, count, byteStride, byteOffset, accessorClass, max, min }) {\n        // if (byteOffset % 4 !== 0) {\n        //   console.info('Padding bytes added because byteOffset is not 4byte aligned.');\n        //   byteOffset += 4 - byteOffset % 4;\n        // }\n        // if (this.__byteOffset % 4 !== 0) {\n        //   console.info('Padding bytes added because byteOffsetFromBuffer is not 4byte aligned.');\n        //   this.__byteOffset += 4 - this.__byteOffset % 4;\n        // this.buffer._addTakenByteIndex(4 - this.__byteOffset % 4);\n        // }\n        const accessor = new accessorClass({\n            bufferView: this, byteOffset: byteOffset, compositionType: compositionType, componentType: componentType, byteStride: byteStride, count: count, raw: this.__raw, max: max, min: min\n        });\n        this.__accessors.push(accessor);\n        return accessor;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/memory/BufferView.ts?");

/***/ }),

/***/ "./src/foundation/memory/FlexibleAccessor.ts":
/*!***************************************************!*\
  !*** ./src/foundation/memory/FlexibleAccessor.ts ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FlexibleAccessor; });\n/* harmony import */ var _AccessorBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AccessorBase */ \"./src/foundation/memory/AccessorBase.ts\");\n\nclass FlexibleAccessor extends _AccessorBase__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor({ bufferView, byteOffset, compositionType, componentType, byteStride, count, raw }) {\n        super({ bufferView, byteOffset, compositionType, componentType, byteStride, count, raw });\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/memory/FlexibleAccessor.ts?");

/***/ }),

/***/ "./src/foundation/misc/DataUtil.ts":
/*!*****************************************!*\
  !*** ./src/foundation/misc/DataUtil.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process, Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DataUtil; });\nclass DataUtil {\n    static isNode() {\n        let isNode = (window === void 0 && typeof process !== \"undefined\" && \"function\" !== \"undefined\");\n        return isNode;\n    }\n    static btoa(str) {\n        let isNode = DataUtil.isNode();\n        if (isNode) {\n            let buffer;\n            if (Buffer.isBuffer(str)) {\n                buffer = str;\n            }\n            else {\n                buffer = new Buffer(str.toString(), 'binary');\n            }\n            return buffer.toString('base64');\n        }\n        else {\n            return btoa(str);\n        }\n    }\n    static atob(str) {\n        let isNode = DataUtil.isNode();\n        if (isNode) {\n            return new Buffer(str, 'base64').toString('binary');\n        }\n        else {\n            return atob(str);\n        }\n    }\n    static base64ToArrayBuffer(dataUri) {\n        let splittedDataUri = dataUri.split(',');\n        let type = splittedDataUri[0].split(':')[1].split(';')[0];\n        let byteString = DataUtil.atob(splittedDataUri[1]);\n        let byteStringLength = byteString.length;\n        let arrayBuffer = new ArrayBuffer(byteStringLength);\n        let uint8Array = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < byteStringLength; i++) {\n            uint8Array[i] = byteString.charCodeAt(i);\n        }\n        return arrayBuffer;\n    }\n    static arrayBufferToString(arrayBuffer) {\n        if (typeof TextDecoder !== 'undefined') {\n            let textDecoder = new TextDecoder();\n            return textDecoder.decode(arrayBuffer);\n        }\n        else {\n            let bytes = new Uint8Array(arrayBuffer);\n            let result = \"\";\n            let length = bytes.length;\n            for (let i = 0; i < length; i++) {\n                result += String.fromCharCode(bytes[i]);\n            }\n            return result;\n        }\n    }\n    static stringToBase64(str) {\n        let b64 = null;\n        b64 = DataUtil.btoa(str);\n        return b64;\n    }\n    static UInt8ArrayToDataURL(uint8array, width, height) {\n        let canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        let ctx = canvas.getContext(\"2d\");\n        let imageData = ctx.createImageData(width, height);\n        for (let i = 0; i < imageData.data.length; i += 4) {\n            imageData.data[i + 0] = uint8array[(height - Math.floor(i / (4 * width))) * (4 * width) + i % (4 * width) + 0];\n            imageData.data[i + 1] = uint8array[(height - Math.floor(i / (4 * width))) * (4 * width) + i % (4 * width) + 1];\n            imageData.data[i + 2] = uint8array[(height - Math.floor(i / (4 * width))) * (4 * width) + i % (4 * width) + 2];\n            imageData.data[i + 3] = uint8array[(height - Math.floor(i / (4 * width))) * (4 * width) + i % (4 * width) + 3];\n        }\n        ctx.putImageData(imageData, 0, 0);\n        canvas.remove();\n        return canvas.toDataURL(\"image/png\");\n    }\n    static loadResourceAsync(resourceUri, isBinary, resolveCallback, rejectCallback) {\n        return new Promise((resolve, reject) => {\n            let isNode = DataUtil.isNode();\n            if (isNode) {\n                // let fs = require('fs');\n                // let args: any[] = [resourceUri];\n                // let func: Function = (err:any, response: any) => {\n                //   if (err) {\n                //     if (rejectCallback) {\n                //       rejectCallback(reject, err);\n                //     }\n                //     return;\n                //   }\n                //   if (isBinary) {\n                //     let buffer = new Buffer(response, 'binary');\n                //     let uint8Buffer = new Uint8Array(buffer);\n                //     response = uint8Buffer.buffer;\n                //   }\n                //   resolveCallback(resolve, response);\n                // };\n                // if (isBinary) {\n                //   args.push(func);\n                // } else {\n                //   args.push('utf8');\n                //   args.push(func);\n                // }\n                // fs.readFile.apply(fs, args);\n            }\n            else {\n                let xmlHttp = new XMLHttpRequest();\n                if (isBinary) {\n                    xmlHttp.onload = (oEvent) => {\n                        let response = null;\n                        if (isBinary) {\n                            response = xmlHttp.response;\n                        }\n                        else {\n                            response = xmlHttp.responseText;\n                        }\n                        resolveCallback(resolve, response);\n                    };\n                    xmlHttp.open(\"GET\", resourceUri, true);\n                    xmlHttp.responseType = \"arraybuffer\";\n                }\n                else {\n                    xmlHttp.onreadystatechange = () => {\n                        if (xmlHttp.readyState === 4 && (Math.floor(xmlHttp.status / 100) === 2 || xmlHttp.status === 0)) {\n                            let response = null;\n                            if (isBinary) {\n                                response = xmlHttp.response;\n                            }\n                            else {\n                                response = xmlHttp.responseText;\n                            }\n                            resolveCallback(resolve, response);\n                        }\n                        else {\n                            if (rejectCallback) {\n                                rejectCallback(reject, xmlHttp.status);\n                            }\n                        }\n                    };\n                    xmlHttp.open(\"GET\", resourceUri, true);\n                }\n                xmlHttp.send(null);\n            }\n        });\n    }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./src/foundation/misc/DataUtil.ts?");

/***/ }),

/***/ "./src/foundation/misc/EnumIO.ts":
/*!***************************************!*\
  !*** ./src/foundation/misc/EnumIO.ts ***!
  \***************************************/
/*! exports provided: EnumClass, _from, _fromString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EnumClass\", function() { return EnumClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_from\", function() { return _from; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_fromString\", function() { return _fromString; });\n// This code idea is from https://qiita.com/junkjunctions/items/5a6d8bed8df8eb3acceb\nclass EnumClass {\n    constructor({ index, str }) {\n        if (EnumClass.__indices.get(this.constructor) == null) {\n            EnumClass.__indices.set(this.constructor, []);\n        }\n        if (EnumClass.__strings.get(this.constructor) == null) {\n            EnumClass.__strings.set(this.constructor, []);\n        }\n        if (EnumClass.__indices.get(this.constructor).indexOf(index) !== -1) {\n            throw new Error('Dont use duplicate index.');\n        }\n        if (EnumClass.__strings.get(this.constructor).indexOf(str) !== -1) {\n            throw new Error('Dont use duplicate str.');\n        }\n        this.index = index;\n        this.str = str;\n        EnumClass.__indices.get(this.constructor).push(index);\n        EnumClass.__strings.get(this.constructor).push(str);\n    }\n    toString() {\n        return this.str;\n    }\n    toJSON() {\n        return this.index;\n    }\n}\nEnumClass.__indices = new Map();\nEnumClass.__strings = new Map();\nfunction _from({ typeList, index }) {\n    const match = typeList.find(type => type.index === index);\n    if (!match) {\n        throw new Error(`Invalid PrimitiveMode index: [${index}]`);\n    }\n    return match;\n}\nfunction _fromString({ typeList, str }) {\n    const match = typeList.find(type => type.str.toLowerCase() === str.toLowerCase());\n    if (!match) {\n        throw new Error(`Invalid PrimitiveMode index: [${str}]`);\n    }\n    return match;\n}\n\n\n//# sourceURL=webpack:///./src/foundation/misc/EnumIO.ts?");

/***/ }),

/***/ "./src/foundation/misc/IsUtil.ts":
/*!***************************************!*\
  !*** ./src/foundation/misc/IsUtil.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst IsUtil = {\n    not: {},\n    all: {},\n    any: {},\n    _not(fn) {\n        return function () {\n            return !fn.apply(null, [...arguments]);\n        };\n    },\n    _all(fn) {\n        return function () {\n            if (Array.isArray(arguments[0])) {\n                return arguments[0].every(fn);\n            }\n            return [...arguments].every(fn);\n        };\n    },\n    _any(fn) {\n        return function () {\n            if (Array.isArray(arguments[0])) {\n                return arguments[0].some(fn);\n            }\n            return [...arguments].some(fn);\n        };\n    },\n    defined(val) {\n        return val !== void 0;\n    },\n    undefined(val) {\n        return val === void 0;\n    },\n    null(val) {\n        return val === null;\n    },\n    // is NOT null or undefined\n    exist(val) {\n        return val != null;\n    },\n    function(val) {\n        return typeof val === 'function';\n    }\n};\nfor (let fn in IsUtil) {\n    if (IsUtil.hasOwnProperty(fn)) {\n        const interfaces = ['not', 'all', 'any'];\n        if (fn.indexOf('_') === -1 && !interfaces.includes(fn)) {\n            interfaces.forEach((itf) => {\n                const op = '_' + itf;\n                IsUtil[itf][fn] = IsUtil[op](IsUtil[fn]);\n            });\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (IsUtil);\n\n\n//# sourceURL=webpack:///./src/foundation/misc/IsUtil.ts?");

/***/ }),

/***/ "./src/foundation/misc/MiscUtil.ts":
/*!*****************************************!*\
  !*** ./src/foundation/misc/MiscUtil.ts ***!
  \*****************************************/
/*! exports provided: MiscUtil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MiscUtil\", function() { return MiscUtil; });\nconst isMobile = function () {\n    const ua = [\n        'iPod',\n        'iPad',\n        'iPhone',\n        'Android'\n    ];\n    for (var i = 0; i < ua.length; i++) {\n        if (navigator.userAgent.indexOf(ua[i]) > 0) {\n            return true;\n        }\n    }\n    return false;\n};\nconst preventDefaultForDesktopOnly = function (e) {\n    if (!isMobile()) {\n        e.preventDefault();\n    }\n};\nconst MiscUtil = Object.freeze({ isMobile, preventDefaultForDesktopOnly });\n\n\n//# sourceURL=webpack:///./src/foundation/misc/MiscUtil.ts?");

/***/ }),

/***/ "./src/foundation/renderer/CGAPIResourceRepository.ts":
/*!************************************************************!*\
  !*** ./src/foundation/renderer/CGAPIResourceRepository.ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CGAPIResourceRepository; });\nclass CGAPIResourceRepository {\n}\nCGAPIResourceRepository.InvalidCGAPIResourceUid = -1;\n\n\n//# sourceURL=webpack:///./src/foundation/renderer/CGAPIResourceRepository.ts?");

/***/ }),

/***/ "./src/foundation/system/InitialSetting.ts":
/*!*************************************************!*\
  !*** ./src/foundation/system/InitialSetting.ts ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InitialSetting; });\nclass InitialSetting {\n}\nInitialSetting.maxEntityNumber = 10000;\n\n\n//# sourceURL=webpack:///./src/foundation/system/InitialSetting.ts?");

/***/ }),

/***/ "./src/foundation/system/ModuleManager.ts":
/*!************************************************!*\
  !*** ./src/foundation/system/ModuleManager.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ModuleManager; });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass ModuleManager {\n    constructor() {\n        this.__modules = new Map();\n    }\n    loadModule(moduleName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let module;\n            if (moduleName.toLowerCase() === 'webgl') {\n                module = yield __webpack_require__.e(/*! import() | webgl */ \"webgl\").then(__webpack_require__.bind(null, /*! ../../webgl/main */ \"./src/webgl/main.ts\"));\n            }\n            else if (moduleName.toLowerCase() === 'effekseer') {\n                module = yield __webpack_require__.e(/*! import() | effekseer */ \"effekseer\").then(__webpack_require__.bind(null, /*! ../../effekseer/main */ \"./src/effekseer/main.ts\"));\n            }\n            else if (moduleName.toLowerCase() === 'sparkgear') {\n                module = yield __webpack_require__.e(/*! import() | sparkgear */ \"sparkgear\").then(__webpack_require__.bind(null, /*! ../../sparkgear/main */ \"./src/sparkgear/main.ts\"));\n            }\n            else if (moduleName.toLowerCase() === 'pbr') {\n                module = yield __webpack_require__.e(/*! import() | pbr */ \"pbr\").then(__webpack_require__.bind(null, /*! ../../pbr/main */ \"./src/pbr/main.ts\"));\n            }\n            this.__modules.set(moduleName, module);\n            console.log('Module Loaded:', module);\n            return module.default;\n        });\n    }\n    getModule(moduleName) {\n        return this.__modules.get(moduleName).default;\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new ModuleManager();\n        }\n        return this.__instance;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/system/ModuleManager.ts?");

/***/ }),

/***/ "./src/foundation/system/System.ts":
/*!*****************************************!*\
  !*** ./src/foundation/system/System.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return System; });\n/* harmony import */ var _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions/ProcessStage */ \"./src/foundation/definitions/ProcessStage.ts\");\n/* harmony import */ var _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/ComponentRepository */ \"./src/foundation/core/ComponentRepository.ts\");\n/* harmony import */ var _definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../definitions/ProcessApproach */ \"./src/foundation/definitions/ProcessApproach.ts\");\n/* harmony import */ var _ModuleManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ModuleManager */ \"./src/foundation/system/ModuleManager.ts\");\n\n\n\n\nclass System {\n    constructor() {\n        this.__processStages = [\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_0__[\"ProcessStage\"].Create,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_0__[\"ProcessStage\"].Load,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_0__[\"ProcessStage\"].Mount,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_0__[\"ProcessStage\"].Logic,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_0__[\"ProcessStage\"].PreRender,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_0__[\"ProcessStage\"].Render,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_0__[\"ProcessStage\"].Unmount,\n            _definitions_ProcessStage__WEBPACK_IMPORTED_MODULE_0__[\"ProcessStage\"].Discard\n        ];\n        this.__componentRepository = _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n        this.__processApproach = _definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_2__[\"ProcessApproach\"].None;\n    }\n    process() {\n        if (this.__processApproach === _definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_2__[\"ProcessApproach\"].None) {\n            throw new Error('Choose a process approach first.');\n        }\n        this.__processStages.forEach(stage => {\n            const methodName = stage.getMethodName();\n            const componentTids = this.__componentRepository.getComponentTIDs();\n            componentTids.forEach(componentTid => {\n                const componentClass = _core_ComponentRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getComponentClass(componentTid);\n                const componentClass_commonMethod = componentClass['common_' + methodName];\n                if (componentClass_commonMethod) {\n                    componentClass_commonMethod(this.__processApproach);\n                }\n                componentClass.updateComponentsOfEachProcessStage(componentClass, stage, this.__componentRepository);\n                componentClass.process({\n                    componentType: componentClass,\n                    processStage: stage,\n                    processApproach: this.__processApproach,\n                    componentRepository: this.__componentRepository,\n                    strategy: this.__webglStrategy\n                });\n            });\n        });\n    }\n    setProcessApproachAndCanvas(approach, canvas) {\n        const moduleManager = _ModuleManager__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n        const moduleName = 'webgl';\n        const webglModule = moduleManager.getModule(moduleName);\n        this.__webglStrategy = webglModule.getRenderingStrategy(approach);\n        const repo = webglModule.WebGLResourceRepository.getInstance();\n        let gl;\n        if (approach === _definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_2__[\"ProcessApproach\"].DataTextureWebGL2 ||\n            approach === _definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_2__[\"ProcessApproach\"].UBOWebGL2 ||\n            approach === _definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_2__[\"ProcessApproach\"].TransformFeedbackWebGL2) {\n            gl = canvas.getContext('webgl2');\n        }\n        else {\n            gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n        }\n        repo.addWebGLContext(gl, canvas.width, canvas.height, true);\n        this.__processApproach = approach;\n        return gl;\n    }\n    get processApproach() {\n        return this.__processApproach;\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new System();\n        }\n        return this.__instance;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/system/System.ts?");

/***/ }),

/***/ "./src/foundation/textures/AbstractTexture.ts":
/*!****************************************************!*\
  !*** ./src/foundation/textures/AbstractTexture.ts ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AbstractTexture; });\n/* harmony import */ var _core_Object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Object */ \"./src/foundation/core/Object.ts\");\n/* harmony import */ var _definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../definitions/PixelFormat */ \"./src/foundation/definitions/PixelFormat.ts\");\n/* harmony import */ var _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../definitions/TextureParameter */ \"./src/foundation/definitions/TextureParameter.ts\");\n/* harmony import */ var _system_ModuleManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system/ModuleManager */ \"./src/foundation/system/ModuleManager.ts\");\n\n\n\n\n\nclass AbstractTexture extends _core_Object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(true);\n        this.__width = 0;\n        this.__height = 0;\n        this.texture3DAPIResourseUid = -1;\n        this.__isTextureReady = false;\n        this.__startedToLoad = false;\n        this.__name = 'untitled';\n        this.__textureUid = ++AbstractTexture.__textureUidCount;\n    }\n    get textureUID() {\n        return this.__textureUid;\n    }\n    get width() {\n        return this.__width;\n    }\n    get height() {\n        return this.__height;\n    }\n    get isTextureReady() {\n        return this.__isTextureReady;\n    }\n    get startedToLoad() {\n        return this.__startedToLoad;\n    }\n    /**\n     * get a value nearest power of two.\n     *\n     * @param x texture size.\n     * @returns a value nearest power of two.\n     */\n    _getNearestPowerOfTwo(x) {\n        return Math.pow(2, Math.round(Math.log(x) / Math.LN2));\n    }\n    _getResizedCanvas(image) {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = this._getNearestPowerOfTwo(image.width);\n        canvas.height = this._getNearestPowerOfTwo(image.height);\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n        return canvas;\n    }\n    generateTextureFromImage(image) {\n        this.__startedToLoad = true;\n        this.__htmlImageElement = image;\n        let imgCanvas = this._getResizedCanvas(image);\n        this.__htmlCanvasElement = imgCanvas;\n        this.__width = imgCanvas.width;\n        this.__height = imgCanvas.height;\n        const moduleManager = _system_ModuleManager__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getInstance();\n        const moduleName = 'webgl';\n        const webglModule = moduleManager.getModule(moduleName);\n        let texture = webglModule.WebGLResourceRepository.getInstance().createTexture(imgCanvas, {\n            level: 0, internalFormat: _definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_1__[\"PixelFormat\"].RGBA, width: this.__width, height: this.__height,\n            border: 0, format: _definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_1__[\"PixelFormat\"].RGBA, type: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_2__[\"ComponentType\"].Float, magFilter: _definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_3__[\"TextureParameter\"].Linear, minFilter: _definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_3__[\"TextureParameter\"].Linear,\n            wrapS: _definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_3__[\"TextureParameter\"].Repeat, wrapT: _definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_3__[\"TextureParameter\"].Repeat, generateMipmap: true, anisotropy: true\n        });\n        this.texture3DAPIResourseUid = texture;\n        this.__isTextureReady = true;\n        this.__uri = image.src;\n        AbstractTexture.__textureMap.set(texture, this);\n    }\n    generateTextureFromUri(imageUri) {\n        this.__uri = imageUri;\n        this.__startedToLoad = true;\n        return new Promise((resolve, reject) => {\n            this.__img = new Image();\n            if (!imageUri.match(/^data:/)) {\n                this.__img.crossOrigin = 'Anonymous';\n            }\n            this.__img.onload = () => {\n                this.__htmlImageElement = this.__img;\n                let imgCanvas = this._getResizedCanvas(this.__img);\n                this.__htmlCanvasElement = imgCanvas;\n                this.__width = imgCanvas.width;\n                this.__height = imgCanvas.height;\n                const moduleManager = _system_ModuleManager__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getInstance();\n                const moduleName = 'webgl';\n                const webglModule = moduleManager.getModule(moduleName);\n                let texture = webglModule.WebGLResourceRepository.getInstance().createTexture(imgCanvas, {\n                    level: 0, internalFormat: _definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_1__[\"PixelFormat\"].RGBA, width: this.__width, height: this.__height,\n                    border: 0, format: _definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_1__[\"PixelFormat\"].RGBA, type: _definitions_ComponentType__WEBPACK_IMPORTED_MODULE_2__[\"ComponentType\"].Float, magFilter: _definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_3__[\"TextureParameter\"].Linear, minFilter: _definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_3__[\"TextureParameter\"].Linear,\n                    wrapS: _definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_3__[\"TextureParameter\"].Repeat, wrapT: _definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_3__[\"TextureParameter\"].Repeat, generateMipmap: true, anisotropy: true\n                });\n                this.texture3DAPIResourseUid = texture;\n                this.__isTextureReady = true;\n                AbstractTexture.__textureMap.set(texture, this);\n                resolve();\n            };\n            this.__img.src = imageUri;\n        });\n    }\n    get htmlImageElement() {\n        return this.__htmlImageElement;\n    }\n    get htmlCanvasElement() {\n        return this.__htmlCanvasElement;\n    }\n    get uri() {\n        return this.__uri;\n    }\n    static getRhodoniteTexture(textureUid) {\n        return this.__textureMap.get(textureUid);\n    }\n    set name(name) {\n        this.__name = name;\n    }\n    get name() {\n        return this.__name;\n    }\n}\nAbstractTexture.InvalidTextureUid = -1;\nAbstractTexture.__textureUidCount = AbstractTexture.InvalidTextureUid;\nAbstractTexture.__textureMap = new Map();\n\n\n//# sourceURL=webpack:///./src/foundation/textures/AbstractTexture.ts?");

/***/ }),

/***/ "./src/foundation/textures/CubeTexture.ts":
/*!************************************************!*\
  !*** ./src/foundation/textures/CubeTexture.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CubeTexture; });\n/* harmony import */ var _AbstractTexture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractTexture */ \"./src/foundation/textures/AbstractTexture.ts\");\n/* harmony import */ var _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../webgl/WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass CubeTexture extends _AbstractTexture__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.mipmapLevelNumber = 1;\n    }\n    loadTextureImages() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.__startedToLoad = true;\n            this.cubeTextureUid = yield _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance().createCubeTextureFromFiles(this.baseUriToLoad, this.mipmapLevelNumber);\n            this.__isTextureReady = true;\n        });\n    }\n    loadTextureImagesAsync() {\n        this.__startedToLoad = true;\n        _webgl_WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance().createCubeTextureFromFiles(this.baseUriToLoad, this.mipmapLevelNumber).then((cubeTextureUid) => {\n            this.cubeTextureUid = cubeTextureUid;\n        }).then(() => {\n            this.__isTextureReady = true;\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/textures/CubeTexture.ts?");

/***/ }),

/***/ "./src/foundation/textures/Texture.ts":
/*!********************************************!*\
  !*** ./src/foundation/textures/Texture.ts ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Texture; });\n/* harmony import */ var _AbstractTexture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractTexture */ \"./src/foundation/textures/AbstractTexture.ts\");\n\nclass Texture extends _AbstractTexture__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n    }\n}\n\n\n//# sourceURL=webpack:///./src/foundation/textures/Texture.ts?");

/***/ }),

/***/ "./src/webgl/ClassicShader.ts":
/*!************************************!*\
  !*** ./src/webgl/ClassicShader.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ClassicShader; });\n/* harmony import */ var _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../foundation/definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _GLSLShader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GLSLShader */ \"./src/webgl/GLSLShader.ts\");\n/* harmony import */ var _foundation_core_Config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/core/Config */ \"./src/foundation/core/Config.ts\");\n/* harmony import */ var _foundation_definitions_ShaderNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/definitions/ShaderNode */ \"./src/foundation/definitions/ShaderNode.ts\");\n\n\n\n\nclass ClassicShader extends _GLSLShader__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super();\n        this.vertexShaderBody = `\n\nvoid main ()\n{\n  mat4 worldMatrix = getMatrix(a_instanceID);\n  mat4 viewMatrix = getViewMatrix(a_instanceID);\n  mat4 projectionMatrix = getProjectionMatrix(a_instanceID);\n  mat3 normalMatrix = getNormalMatrix(a_instanceID);\n\n  v_position_inWorld = worldMatrix * vec4(a_position, 1.0);\n\n  gl_Position = projectionMatrix * viewMatrix * v_position_inWorld;\n  v_color = a_color;\n  v_normal_inWorld = normalMatrix * a_normal;\n  v_texcoord = a_texcoord;\n\n  // Skeletal\n  ${this.processSkinningIfNeed}\n\n//  v_color = vec3(u_boneMatrices[int(a_joint.x)][1].xyz);\n}\n  `;\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new ClassicShader();\n        }\n        return this.__instance;\n    }\n    get vertexShaderVariableDefinitions() {\n        const _version = this.glsl_versionText;\n        const _in = this.glsl_vertex_in;\n        const _out = this.glsl_vertex_out;\n        return `${_version}\nprecision highp float;\n${_in} vec3 a_position;\n${_in} vec3 a_color;\n${_in} vec3 a_normal;\n${_in} float a_instanceID;\n${_in} vec2 a_texcoord;\n${_in} vec4 a_joint;\n${_in} vec4 a_weight;\n${_out} vec3 v_color;\n${_out} vec3 v_normal_inWorld;\n${_out} vec4 v_position_inWorld;\n${_out} vec2 v_texcoord;\nuniform mat4 u_boneMatrices[100];\n\n${this.toNormalMatrix}\n\n${this.getSkinMatrix}\n\n`;\n    }\n    ;\n    get fragmentShaderSimple() {\n        const _version = this.glsl_versionText;\n        const _in = this.glsl_fragment_in;\n        const _def_rt0 = this.glsl_rt0;\n        const _def_fragColor = this.glsl_fragColor;\n        const _texture = this.glsl_texture;\n        return `${_version}\nprecision highp float;\n\nstruct Material {\n  vec4 diffuseColorFactor;\n};\nuniform sampler2D u_baseColorTexture;\nuniform Material u_material;\n\nstruct Light {\n  vec4 lightPosition;\n  vec4 lightDirection;\n  vec4 lightIntensity;\n};\nuniform Light u_lights[${_foundation_core_Config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].maxLightNumberInShader}];\nuniform int u_lightNumber;\n\n${_in} vec3 v_color;\n${_in} vec3 v_normal_inWorld;\n${_in} vec4 v_position_inWorld;\n${_in} vec2 v_texcoord;\n${_def_rt0}\nvoid main ()\n{\n\n  // Normal\n  vec3 normal_inWorld = normalize(v_normal_inWorld);\n\n  // baseColor\n  vec3 color = vec3(0.0, 0.0, 0.0);\n  if (v_color != color && u_material.diffuseColorFactor.rgb != color) {\n    color = v_color * u_material.diffuseColorFactor.rgb;\n  } else if (v_color == color) {\n    color = u_material.diffuseColorFactor.rgb;\n  } else if (u_material.diffuseColorFactor.rgb == color) {\n    color = v_color;\n  } else {\n    color = vec3(1.0, 1.0, 1.0);\n  }\n  //color = v_color;\n\n  // baseColorTexture\n  vec4 textureColor = ${_texture}(u_baseColorTexture, v_texcoord);\n  if (textureColor.r > 0.05) {\n    color *= textureColor.rgb;\n  }\n\n  // Lighting\n  if (length(v_normal_inWorld) > 0.02) {\n    vec3 diffuse = vec3(0.0, 0.0, 0.0);\n    for (int i = 0; i < ${_foundation_core_Config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].maxLightNumberInShader}; i++) {\n      if (i >= u_lightNumber) {\n        break;\n      }\n\n      vec3 lightDirection = u_lights[i].lightDirection.xyz;\n      float lightType = u_lights[i].lightPosition.w;\n      float spotCosCutoff = u_lights[i].lightDirection.w;\n      float spotExponent = u_lights[i].lightIntensity.w;\n\n      if (0.75 < lightType) { // is pointlight or spotlight\n        lightDirection = normalize(u_lights[i].lightPosition.xyz - v_position_inWorld.xyz);\n      }\n      float spotEffect = 1.0;\n      if (lightType > 1.75) { // is spotlight\n        spotEffect = dot(u_lights[i].lightDirection.xyz, lightDirection);\n        if (spotEffect > spotCosCutoff) {\n          spotEffect = pow(spotEffect, spotExponent);\n        } else {\n          spotEffect = 0.0;\n        }\n      }\n\n      vec3 incidentLight = spotEffect * u_lights[i].lightIntensity.xyz;\n//      incidentLight *= M_PI;\n\n      diffuse += 1.0 * max(0.0, dot(normal_inWorld, lightDirection)) * incidentLight;\n    }\n\n    color *= diffuse;\n  }\n\n  rt0 = vec4(color, 1.0);\n  //rt0 = vec4(u_lightNumber, 0.0, 0.0, 1.0);\n\n\n  ${_def_fragColor}\n}\n`;\n    }\n    get fragmentShader() {\n        return this.fragmentShaderSimple;\n    }\n}\nClassicShader.materialElement = _foundation_definitions_ShaderNode__WEBPACK_IMPORTED_MODULE_3__[\"ShaderNode\"].ClassicShading;\nClassicShader.attributeNames = ['a_position', 'a_color', 'a_normal', 'a_texcoord', 'a_joint', 'a_weight', 'a_instanceID'];\nClassicShader.attributeSemantics = [_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Position, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Color0,\n    _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Normal, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Texcoord0, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Joints0, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Weights0, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Instance];\n\n\n//# sourceURL=webpack:///./src/webgl/ClassicShader.ts?");

/***/ }),

/***/ "./src/webgl/GLSLShader.ts":
/*!*********************************!*\
  !*** ./src/webgl/GLSLShader.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GLSLShader; });\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n\nclass GLSLShader {\n    constructor() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n    }\n    get glsl_rt0() {\n        const repo = this.__webglResourceRepository;\n        if (repo.currentWebGLContextWrapper.isWebGL2) {\n            return 'layout(location = 0) out vec4 rt0;\\n';\n        }\n        else {\n            return 'vec4 rt0;\\n';\n        }\n    }\n    get glsl_fragColor() {\n        const repo = this.__webglResourceRepository;\n        if (repo.currentWebGLContextWrapper.isWebGL2) {\n            return '';\n        }\n        else {\n            return 'gl_FragColor = rt0;\\n';\n        }\n    }\n    get glsl_vertex_in() {\n        const repo = this.__webglResourceRepository;\n        if (repo.currentWebGLContextWrapper.isWebGL2) {\n            return 'in';\n        }\n        else {\n            return 'attribute';\n        }\n    }\n    get glsl_fragment_in() {\n        const repo = this.__webglResourceRepository;\n        if (repo.currentWebGLContextWrapper.isWebGL2) {\n            return 'in';\n        }\n        else {\n            return 'varying';\n        }\n    }\n    get glsl_vertex_out() {\n        const repo = this.__webglResourceRepository;\n        if (repo.currentWebGLContextWrapper.isWebGL2) {\n            return 'out';\n        }\n        else {\n            return 'varying';\n        }\n    }\n    get glsl_texture() {\n        const repo = this.__webglResourceRepository;\n        if (repo.currentWebGLContextWrapper.isWebGL2) {\n            return 'texture';\n        }\n        else {\n            return 'texture2D';\n        }\n    }\n    get glsl_versionText() {\n        const repo = this.__webglResourceRepository;\n        if (repo.currentWebGLContextWrapper.isWebGL2) {\n            return '#version 300 es\\n';\n        }\n        else {\n            return '';\n        }\n    }\n    get glsl1ShaderTextureLodExt() {\n        const ext = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance().currentWebGLContextWrapper.webgl1ExtSTL;\n        return (ext != null) ? '#extension GL_EXT_shader_texture_lod : require' : '';\n    }\n    get glsl1ShaderDerivativeExt() {\n        const ext = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance().currentWebGLContextWrapper.webgl1ExtDRV;\n        return (ext != null) ? '#extension GL_OES_standard_derivatives : require' : '';\n    }\n    get toNormalMatrix() {\n        return `\n    mat3 toNormalMatrix(mat4 m) {\n      float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\n      a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\n      a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\n      a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3];\n\n      float b00 = a00 * a11 - a01 * a10,\n      b01 = a00 * a12 - a02 * a10,\n      b02 = a00 * a13 - a03 * a10,\n      b03 = a01 * a12 - a02 * a11,\n      b04 = a01 * a13 - a03 * a11,\n      b05 = a02 * a13 - a03 * a12,\n      b06 = a20 * a31 - a21 * a30,\n      b07 = a20 * a32 - a22 * a30,\n      b08 = a20 * a33 - a23 * a30,\n      b09 = a21 * a32 - a22 * a31,\n      b10 = a21 * a33 - a23 * a31,\n      b11 = a22 * a33 - a23 * a32;\n\n      float determinantVal = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n      return mat3(\n        a11 * b11 - a12 * b10 + a13 * b09, a12 * b08 - a10 * b11 - a13 * b07, a10 * b10 - a11 * b08 + a13 * b06,\n        a02 * b10 - a01 * b11 - a03 * b09, a00 * b11 - a02 * b08 + a03 * b07, a01 * b08 - a00 * b10 - a03 * b06,\n        a31 * b05 - a32 * b04 + a33 * b03, a32 * b02 - a30 * b05 - a33 * b01, a30 * b04 - a31 * b02 + a33 * b00) / determinantVal;\n    }\n    `;\n    }\n    get getSkinMatrix() {\n        return `\n\n    mat4 getSkinMatrix() {\n      mat4 skinMat = a_weight.x * u_boneMatrices[int(a_joint.x)];\n      skinMat += a_weight.y * u_boneMatrices[int(a_joint.y)];\n      skinMat += a_weight.z * u_boneMatrices[int(a_joint.z)];\n      skinMat += a_weight.w * u_boneMatrices[int(a_joint.w)];\n\n      return skinMat;\n    }\n    `;\n    }\n    get processSkinningIfNeed() {\n        return `\n    bool isSkinning = false;\n    if (length(a_weight.xyz) > 0.01) {\n      mat4 skinMat = getSkinMatrix();\n      v_position_inWorld = skinMat * vec4(a_position, 1.0);\n      normalMatrix = toNormalMatrix(skinMat);\n      v_normal_inWorld = normalize(normalMatrix * a_normal);\n      gl_Position = projectionMatrix * viewMatrix * v_position_inWorld;\n      isSkinning = true;\n    }\n    `;\n    }\n    get pbrUniformDefinition() {\n        let shaderText = '';\n        shaderText += 'uniform vec2 uMetallicRoughnessFactors;\\n';\n        shaderText += 'uniform vec3 uBaseColorFactor;\\n';\n        shaderText += 'uniform vec2 uOcclusionFactors;';\n        shaderText += 'uniform vec3 uEmissiveFactor;';\n        shaderText += 'uniform sampler2D uMetallicRoughnessTexture;\\n';\n        const occlusionTexture = true; //material.getTextureFromPurpose(GLBoost.TEXTURE_PURPOSE_OCCLUSION);\n        if (occlusionTexture) {\n            shaderText += 'uniform sampler2D uOcclusionTexture;\\n';\n        }\n        const emissiveTexture = true; //material.getTextureFromPurpose(GLBoost.TEXTURE_PURPOSE_EMISSIVE);\n        if (emissiveTexture) {\n            shaderText += 'uniform sampler2D uEmissiveTexture;\\n';\n        }\n        const diffuseEnvCubeTexture = true; //material.getTextureFromPurpose(GLBoost.TEXTURE_PURPOSE_IBL_DIFFUSE_ENV_CUBE);\n        if (diffuseEnvCubeTexture) {\n            shaderText += 'uniform sampler2D u_brdfLutTexture;\\n';\n            shaderText += 'uniform samplerCube uDiffuseEnvTexture;\\n';\n            shaderText += 'uniform samplerCube uSpecularEnvTexture;\\n';\n            shaderText += 'uniform vec3 uIBLParameters;\\n'; // Ka * amount of ambient lights\n        }\n        shaderText += 'uniform vec4 ambient;\\n'; // Ka * amount of ambient lights\n        return shaderText;\n    }\n    get pbrMethodDefinition() {\n        let accessSpecularIBLTexture;\n        const repo = this.__webglResourceRepository;\n        if (repo.currentWebGLContextWrapper.webgl1ExtSTL) {\n            accessSpecularIBLTexture = `vec3 specularLight = srgbToLinear(textureCubeLodEXT(u_specularEnvTexture, reflection, lod).rgb);`;\n        }\n        else {\n            accessSpecularIBLTexture = `vec3 specularLight = srgbToLinear(textureCube(u_specularEnvTexture, reflection).rgb);`;\n        }\n        return `\n    const float M_PI = 3.141592653589793;\n    const float c_MinRoughness = 0.04;\n\n    float angular_n_h(float NH) {\n      return acos(NH);\n    }\n\n    float sqr(float x) {\n      return x*x;\n    }\n\n    float d_phong(float NH, float c1) {\n      return pow(\n        cos(acos(NH))\n        , c1\n      );\n    }\n\n    // GGX NDF\n    float d_ggx(float NH, float alphaRoughness) {\n      float roughnessSqr = alphaRoughness * alphaRoughness;\n      float f = (roughnessSqr - 1.0) * NH * NH + 1.0;\n      return roughnessSqr / (M_PI * f * f);\n    }\n\n    float d_torrance_reiz(float NH, float c3) {\n      float CosSquared = NH*NH;\n      float TanSquared = (1.0 - CosSquared)/CosSquared;\n      //return (1.0/M_PI) * sqr(c3/(CosSquared * (c3*c3 + TanSquared)));  // gamma = 2, aka GGX\n      return (1.0/sqrt(M_PI)) * (sqr(c3)/(CosSquared * (c3*c3 + TanSquared))); // gamma = 1, D_Berry\n    }\n\n    float d_beckmann(float NH, float m) {\n      float co = 1.0 / (4.0 * m * m * NH * NH * NH * NH);\n      float expx = exp((NH * NH - 1.0) / (m * m * NH * NH));\n      return co * expx;\n    }\n\n    // the same as glTF WebGL sample\n    // https://github.com/KhronosGroup/glTF-WebGL-PBR/blob/88eda8c5358efe03128b72b6c5f5f6e5b6d023e1/shaders/pbr-frag.glsl#L188\n    // That is, Unreal Engine based approach, but modified to use alphaRoughness (squared artist's roughness parameter),\n    // and based on 'Separable Masking and Shadowing' approximation (propesed by Christophe Schlick)\n    // https://www.cs.virginia.edu/~jdl/bib/appearance/analytic%20models/schlick94b.pdf\n    float g_shielding(float NL, float NV, float alphaRoughness) {\n      float r = alphaRoughness;\n\n      // Local Shadowing using \"Schlick-Smith\" Masking Function\n      float localShadowing = 2.0 * NL / (NL + sqrt(r * r + (1.0 - r * r) * (NL * NL)));\n\n      // Local Masking using \"Schlick-Smith\" Masking Function\n      float localMasking = 2.0 * NV / (NV + sqrt(r * r + (1.0 - r * r) * (NV * NV)));\n\n      return localShadowing * localMasking;\n    }\n\n    // The Schlick Approximation to Fresnel\n    vec3 fresnel(vec3 f0, float LH) {\n      return vec3(f0) + (vec3(1.0) - f0) * pow(1.0 - LH, 5.0);\n    }\n\n    vec3 cook_torrance_specular_brdf(float NH, float NL, float NV, vec3 F, float alphaRoughness) {\n      float D = d_ggx(NH, alphaRoughness);\n      float G = g_shielding(NL, NV, alphaRoughness);\n      return vec3(D)*vec3(G)*F/vec3(4.0*NL*NV);\n    }\n\n    vec3 diffuse_brdf(vec3 albedo)\n    {\n      return albedo / M_PI;\n    }\n\n    vec3 srgbToLinear(vec3 srgbColor) {\n      return pow(srgbColor, vec3(2.2));\n    }\n\n    float srgbToLinear(float value) {\n      return pow(value, 2.2);\n    }\n\n    vec3 linearToSrgb(vec3 linearColor) {\n      return pow(linearColor, vec3(1.0/2.2));\n    }\n\n    float linearToSrgb(float value) {\n      return pow(value, 1.0/2.2);\n    }\n\n    vec3 IBLContribution(vec3 n, float NV, vec3 reflection, vec3 albedo, vec3 F0, float userRoughness)\n    {\n      float mipCount = u_iblParameter.x;\n      float lod = (userRoughness * mipCount);\n\n      vec3 brdf = srgbToLinear(texture2D(u_brdfLutTexture, vec2(NV, 1.0 - userRoughness)).rgb);\n      vec3 diffuseLight = srgbToLinear(textureCube(u_diffuseEnvTexture, n).rgb);\n      ${accessSpecularIBLTexture}\n\n      vec3 diffuse = diffuseLight * albedo;\n      vec3 specular = specularLight * (F0 * brdf.x + brdf.y);\n\n      float IBLDiffuseContribution = u_iblParameter.y;\n      float IBLSpecularContribution = u_iblParameter.z;\n      diffuse *= IBLDiffuseContribution;\n      specular *= IBLSpecularContribution;\n      return diffuse + specular;\n    }\n    `;\n    }\n}\n\n\n//# sourceURL=webpack:///./src/webgl/GLSLShader.ts?");

/***/ }),

/***/ "./src/webgl/PBRShader.ts":
/*!********************************!*\
  !*** ./src/webgl/PBRShader.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PBRShader; });\n/* harmony import */ var _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../foundation/definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _GLSLShader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GLSLShader */ \"./src/webgl/GLSLShader.ts\");\n/* harmony import */ var _foundation_core_Config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/core/Config */ \"./src/foundation/core/Config.ts\");\n/* harmony import */ var _foundation_definitions_ShaderNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/definitions/ShaderNode */ \"./src/foundation/definitions/ShaderNode.ts\");\n\n\n\n\nclass PBRShader extends _GLSLShader__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super();\n        this.vertexShaderBody = `\n\nvoid main ()\n{\n  mat4 worldMatrix = getMatrix(a_instanceID);\n  mat4 viewMatrix = getViewMatrix(a_instanceID);\n  mat4 projectionMatrix = getProjectionMatrix(a_instanceID);\n  mat3 normalMatrix = getNormalMatrix(a_instanceID);\n\n  v_position_inWorld = worldMatrix * vec4(a_position, 1.0);\n\n  gl_Position = projectionMatrix * viewMatrix * v_position_inWorld;\n  v_color = a_color;\n\n  v_normal_inWorld = normalMatrix * a_normal;\n  v_faceNormal_inWorld = normalMatrix * a_faceNormal;\n  v_texcoord = a_texcoord;\n\n  // Skeletal\n  ${this.processSkinningIfNeed}\n\n  if (length(a_normal) > 0.01) {\n    // if normal exist\n    vec3 tangent_inWorld;\n    if (!isSkinning) {\n      tangent_inWorld = normalMatrix * a_tangent;\n    }\n\n    v_binormal_inWorld = cross(v_normal_inWorld, tangent_inWorld);\n    v_tangent_inWorld = cross(v_binormal_inWorld, v_normal_inWorld);\n  }\n\n  v_baryCentricCoord = a_baryCentricCoord;\n\n\n//  v_color = vec3(u_boneMatrices[int(a_joint.x)][1].xyz);\n}\n  `;\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new PBRShader();\n        }\n        return this.__instance;\n    }\n    get vertexShaderVariableDefinitions() {\n        const _version = this.glsl_versionText;\n        const _in = this.glsl_vertex_in;\n        const _out = this.glsl_vertex_out;\n        return `${_version}\nprecision highp float;\n${_in} vec3 a_position;\n${_in} vec3 a_color;\n${_in} vec3 a_normal;\n${_in} vec3 a_faceNormal;\n${_in} vec3 a_tangent;\n${_in} float a_instanceID;\n${_in} vec2 a_texcoord;\n${_in} vec4 a_joint;\n${_in} vec4 a_weight;\n${_in} vec3 a_baryCentricCoord;\n${_out} vec3 v_color;\n${_out} vec3 v_normal_inWorld;\n${_out} vec3 v_faceNormal_inWorld;\n${_out} vec3 v_tangent_inWorld;\n${_out} vec3 v_binormal_inWorld;\n${_out} vec4 v_position_inWorld;\n${_out} vec2 v_texcoord;\n${_out} vec3 v_baryCentricCoord;\nuniform mat4 u_boneMatrices[100];\n\n${this.toNormalMatrix}\n\n${this.getSkinMatrix}\n\n`;\n    }\n    ;\n    get fragmentShaderSimple() {\n        const _version = this.glsl_versionText;\n        const _in = this.glsl_fragment_in;\n        const _def_rt0 = this.glsl_rt0;\n        const _def_fragColor = this.glsl_fragColor;\n        const _texture = this.glsl_texture;\n        return `${_version}\n${this.glsl1ShaderTextureLodExt}\n${this.glsl1ShaderDerivativeExt}\nprecision highp float;\n\nstruct Material {\n  vec4 baseColorFactor;\n  vec2 metallicRoughnessFactor;\n};\n\n\nuniform sampler2D u_baseColorTexture;\nuniform sampler2D u_normalTexture;\nuniform sampler2D u_occlusionTexture;\nuniform sampler2D u_emissiveTexture;\nuniform sampler2D u_metallicRoughnessTexture;\n\nuniform Material u_material;\n\nstruct Light {\n  vec4 lightPosition;\n  vec4 lightDirection;\n  vec4 lightIntensity;\n};\nuniform Light u_lights[${_foundation_core_Config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].maxLightNumberInShader}];\nuniform int u_lightNumber;\n\nuniform vec3 u_viewPosition;\n\nuniform samplerCube u_diffuseEnvTexture;\nuniform samplerCube u_specularEnvTexture;\nuniform vec3 u_iblParameter;\n\nuniform vec3 u_wireframe;\n\n${_in} vec3 v_color;\n${_in} vec3 v_normal_inWorld;\n${_in} vec3 v_faceNormal_inWorld;\n${_in} vec3 v_tangent_inWorld;\n${_in} vec3 v_binormal_inWorld;\n${_in} vec4 v_position_inWorld;\n${_in} vec2 v_texcoord;\n${_in} vec3 v_baryCentricCoord;\n${_def_rt0}\n\n${this.pbrUniformDefinition}\n\n${this.pbrMethodDefinition}\n\nfloat edge_ratio(vec3 bary3, float wireframeWidthInner, float wireframeWidthRelativeScale) {\n  vec3 d = fwidth(bary3);\n  vec3 x = bary3+vec3(1.0 - wireframeWidthInner)*d;\n  vec3 a3 = smoothstep(vec3(0.0), d, x);\n  float factor = min(min(a3.x, a3.y), a3.z);\n\n  return clamp((1.0 - factor), 0.0, 1.0);\n}\n\nvoid main ()\n{\n\n  // Normal\n  vec3 normal_inWorld = normalize(v_normal_inWorld);\n\n  if (length(v_tangent_inWorld) > 0.01) {\n    vec3 normal = ${_texture}(u_normalTexture, v_texcoord).xyz*2.0 - 1.0;\n    if (length(normal) > 0.01) {\n      vec3 tangent_inWorld = normalize(v_tangent_inWorld);\n      vec3 binormal_inWorld = normalize(v_binormal_inWorld);\n      normal_inWorld = normalize(v_normal_inWorld);\n\n      mat3 tbnMat_tangent_to_world = mat3(\n        tangent_inWorld.x, tangent_inWorld.y, tangent_inWorld.z,\n        binormal_inWorld.x, binormal_inWorld.y, binormal_inWorld.z,\n        normal_inWorld.x, normal_inWorld.y, normal_inWorld.z\n      );\n\n      normal = normalize(tbnMat_tangent_to_world * normal);\n      normal_inWorld = normal;\n    }\n  }\n\n\n\n  // BaseColorFactor\n  vec3 baseColor = vec3(0.0, 0.0, 0.0);\n  float alpha = 1.0;\n  if (v_color != baseColor && u_material.baseColorFactor.rgb != baseColor) {\n    baseColor = v_color * u_material.baseColorFactor.rgb;\n    alpha = u_material.baseColorFactor.a;\n  } else if (v_color == baseColor) {\n    baseColor = u_material.baseColorFactor.rgb;\n    alpha = u_material.baseColorFactor.a;\n  } else if (u_material.baseColorFactor.rgb == baseColor) {\n    baseColor = v_color;\n  } else {\n    baseColor = vec3(1.0, 1.0, 1.0);\n  }\n\n\n  // BaseColor (take account for BaseColorTexture)\n  vec4 textureColor = ${_texture}(u_baseColorTexture, v_texcoord);\n  if (length(textureColor) > 0.01) {\n    baseColor *= srgbToLinear(textureColor.rgb);\n    alpha *= textureColor.a;\n  }\n\n  // Metallic & Roughness\n  float userRoughness = u_material.metallicRoughnessFactor.y;\n  float metallic = u_material.metallicRoughnessFactor.x;\n\n  vec4 ormTexel = texture2D(u_metallicRoughnessTexture, v_texcoord);\n  userRoughness = ormTexel.g * userRoughness;\n  metallic = ormTexel.b * metallic;\n\n  userRoughness = clamp(userRoughness, c_MinRoughness, 1.0);\n  metallic = clamp(metallic, 0.0, 1.0);\n  float alphaRoughness = userRoughness * userRoughness;\n\n  // F0\n  vec3 diffuseMatAverageF0 = vec3(0.04);\n  vec3 F0 = mix(diffuseMatAverageF0, baseColor.rgb, metallic);\n\n  // Albedo\n  vec3 albedo = baseColor.rgb * (vec3(1.0) - diffuseMatAverageF0);\n  albedo.rgb *= (1.0 - metallic);\n\n  // ViewDirection\n  vec3 viewDirection = normalize(u_viewPosition - v_position_inWorld.xyz);\n\n  // NV\n  float NV = clamp(dot(normal_inWorld, viewDirection), 0.001, 1.0);\n\n  rt0 = vec4(0.0, 0.0, 0.0, alpha);\n\n  // Lighting\n  if (length(v_normal_inWorld) > 0.02) {\n    vec3 diffuse = vec3(0.0, 0.0, 0.0);\n    for (int i = 0; i < ${_foundation_core_Config__WEBPACK_IMPORTED_MODULE_2__[\"default\"].maxLightNumberInShader}; i++) {\n      if (i >= u_lightNumber) {\n        break;\n      }\n\n      // Light\n      vec3 lightDirection = u_lights[i].lightDirection.xyz;\n      float lightType = u_lights[i].lightPosition.w;\n      float spotCosCutoff = u_lights[i].lightDirection.w;\n      float spotExponent = u_lights[i].lightIntensity.w;\n\n      if (0.75 < lightType) { // is pointlight or spotlight\n        lightDirection = normalize(u_lights[i].lightPosition.xyz - v_position_inWorld.xyz);\n      }\n      float spotEffect = 1.0;\n      if (lightType > 1.75) { // is spotlight\n        spotEffect = dot(u_lights[i].lightDirection.xyz, lightDirection);\n        if (spotEffect > spotCosCutoff) {\n          spotEffect = pow(spotEffect, spotExponent);\n        } else {\n          spotEffect = 0.0;\n        }\n      }\n      //diffuse += 1.0 * max(0.0, dot(normal_inWorld, lightDirection)) * spotEffect * u_lights[i].lightIntensity.xyz;\n\n      // IncidentLight\n      vec3 incidentLight = spotEffect * u_lights[i].lightIntensity.xyz;\n      incidentLight *= M_PI;\n\n      // Fresnel\n      vec3 halfVector = normalize(lightDirection + viewDirection);\n      float LH = clamp(dot(lightDirection, halfVector), 0.0, 1.0);\n      vec3 F = fresnel(F0, LH);\n\n      // Diffuse\n      vec3 diffuseContrib = (vec3(1.0) - F) * diffuse_brdf(albedo);\n\n      // Specular\n      float NL = clamp(dot(normal_inWorld, lightDirection), 0.001, 1.0);\n      float NH = clamp(dot(normal_inWorld, halfVector), 0.0, 1.0);\n      float VH = clamp(dot(viewDirection, halfVector), 0.0, 1.0);\n      vec3 specularContrib = cook_torrance_specular_brdf(NH, NL, NV, F, alphaRoughness);\n      vec3 diffuseAndSpecular = (diffuseContrib + specularContrib) * vec3(NL) * incidentLight.rgb;\n\n      rt0.xyz += diffuseAndSpecular;\n//      rt0.xyz += specularContrib * vec3(NL) * incidentLight.rgb;\n  //    rt0.xyz += diffuseContrib * vec3(NL) * incidentLight.rgb;\n  //    rt0.xyz += (vec3(1.0) - F) * diffuse_brdf(albedo);//diffuseContrib;//vec3(NL) * incidentLight.rgb;\n    }\n\n    vec3 reflection = reflect(-viewDirection, normal_inWorld);\n    vec3 ibl = IBLContribution(normal_inWorld, NV, reflection, albedo, F0, userRoughness);\n\n    float occlusion = texture2D(u_occlusionTexture, v_texcoord).r;\n\n    // Occlution to Indirect Lights\n    rt0.xyz += ibl * occlusion;\n\n  } else {\n    rt0 = vec4(baseColor, alpha);\n  }\n\n  // Emissive\n  vec3 emissive = srgbToLinear(texture2D(u_emissiveTexture, v_texcoord).xyz);\n\n  rt0.xyz += emissive;\n\n  rt0.xyz = linearToSrgb(rt0.xyz);\n\n\n  // Wireframe\n  float threshold = 0.001;\n  float wireframeWidthInner = u_wireframe.z;\n  float wireframeWidthRelativeScale = 1.0;\n  if (u_wireframe.x > 0.5 && u_wireframe.y < 0.5) {\n    rt0.a = 0.0;\n  }\n  vec4 wireframeResult = rt0;\n  vec4 wireframeColor = vec4(0.2, 0.75, 0.0, 1.0);\n  float edgeRatio = edge_ratio(v_baryCentricCoord, wireframeWidthInner, wireframeWidthRelativeScale);\n  float edgeRatioModified = mix(step(threshold, edgeRatio), clamp(edgeRatio*4.0, 0.0, 1.0), wireframeWidthInner / wireframeWidthRelativeScale/4.0);\n  // if r0.a is 0.0, it is wireframe not on shaded\n  wireframeResult.rgb = wireframeColor.rgb * edgeRatioModified + rt0.rgb * (1.0 - edgeRatioModified);\n  wireframeResult.a = max(rt0.a, wireframeColor.a * mix(edgeRatioModified, pow(edgeRatioModified, 100.0), wireframeWidthInner / wireframeWidthRelativeScale/1.0));\n\n  if (u_wireframe.x > 0.5) {\n    rt0 = wireframeResult;\n    if (u_wireframe.y < 0.5 && rt0.a == 0.0) {\n      discard;\n    }\n  }\n\n  ${_def_fragColor}\n}\n`;\n    }\n    get fragmentShader() {\n        return this.fragmentShaderSimple;\n    }\n}\nPBRShader.materialElement = _foundation_definitions_ShaderNode__WEBPACK_IMPORTED_MODULE_3__[\"ShaderNode\"].PBRShading;\nPBRShader.attributeNames = ['a_position', 'a_color', 'a_normal', 'a_faceNormal', 'a_texcoord', 'a_tangent', 'a_joint', 'a_weight', 'a_baryCentricCoord', 'a_instanceID'];\nPBRShader.attributeSemantics = [_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Position, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Color0,\n    _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Normal, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].FaceNormal, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Texcoord0, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Tangent, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Joints0, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Weights0, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].BaryCentricCoord, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Instance];\n\n\n//# sourceURL=webpack:///./src/webgl/PBRShader.ts?");

/***/ }),

/***/ "./src/webgl/WebGLContextWrapper.ts":
/*!******************************************!*\
  !*** ./src/webgl/WebGLContextWrapper.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return WebGLContextWrapper; });\n/* harmony import */ var _WebGLExtension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLExtension */ \"./src/webgl/WebGLExtension.ts\");\n\nclass WebGLContextWrapper {\n    constructor(gl, width, height) {\n        this.__webglVersion = 1;\n        this.width = 0;\n        this.height = 0;\n        this.__extensions = new Map();\n        this.__gl = gl;\n        this.width = width;\n        this.height = height;\n        if (this.__gl.constructor.name === 'WebGL2RenderingContext') {\n            this.__webglVersion = 2;\n        }\n        else {\n            this.webgl1ExtVAO = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].VertexArrayObject);\n            this.webgl1ExtIA = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].InstancedArrays);\n            this.webgl1ExtTF = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureFloat);\n            this.webgl1ExtTHF = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureHalfFloat);\n            this.webgl1ExtTFL = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureFloatLinear);\n            this.webgl1ExtTHFL = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureHalfFloatLinear);\n            this.webgl1ExtTFA = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureFilterAnisotropic);\n            this.webgl1ExtEIUI = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].ElementIndexUint);\n            this.webgl1ExtSTL = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].ShaderTextureLod);\n            this.webgl1ExtDRV = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].ShaderDerivatives);\n        }\n    }\n    getRawContext() {\n        return this.__gl;\n    }\n    isSupportWebGL1Extension(webGLExtension) {\n        if (this.__getExtension(webGLExtension)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get isWebGL2() {\n        if (this.__webglVersion === 2) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    createVertexArray() {\n        if (this.isWebGL2) {\n            return this.__gl.createVertexArray();\n        }\n        else {\n            if (this.webgl1ExtVAO != null) {\n                return this.webgl1ExtVAO.createVertexArrayOES();\n            }\n        }\n    }\n    bindVertexArray(vao) {\n        if (this.isWebGL2) {\n            this.__gl.bindVertexArray(vao);\n        }\n        else {\n            if (this.webgl1ExtVAO != null) {\n                this.webgl1ExtVAO.bindVertexArrayOES(vao);\n            }\n        }\n    }\n    vertexAttribDivisor(index, divisor) {\n        if (this.isWebGL2) {\n            this.__gl.vertexAttribDivisor(index, divisor);\n        }\n        else {\n            this.webgl1ExtIA.vertexAttribDivisorANGLE(index, divisor);\n        }\n    }\n    drawElementsInstanced(primitiveMode, indexCount, type, offset, instanceCount) {\n        if (this.isWebGL2) {\n            this.__gl.drawElementsInstanced(primitiveMode, indexCount, type, offset, instanceCount);\n        }\n        else {\n            this.webgl1ExtIA.drawElementsInstancedANGLE(primitiveMode, indexCount, type, offset, instanceCount);\n        }\n    }\n    __getExtension(extension) {\n        const gl = this.__gl;\n        if (!this.__extensions.has(extension)) {\n            const extObj = gl.getExtension(extension.toString());\n            if (extObj == null) {\n                const text = `The library does not support this environment because the ${extension.toString()} is not available`;\n                if (console.error != null) {\n                    console.error(text);\n                }\n                else {\n                    console.log(text);\n                }\n            }\n            this.__extensions.set(extension, extObj);\n            return extObj;\n        }\n        return this.__extensions.get(extension);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLContextWrapper.ts?");

/***/ }),

/***/ "./src/webgl/WebGLExtension.ts":
/*!*************************************!*\
  !*** ./src/webgl/WebGLExtension.ts ***!
  \*************************************/
/*! exports provided: WebGLExtension */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WebGLExtension\", function() { return WebGLExtension; });\n/* harmony import */ var _foundation_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../foundation/misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\n\nclass WebGLExtensionClass extends _foundation_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"] {\n    constructor({ index, str }) {\n        super({ index, str });\n    }\n}\nconst VertexArrayObject = new WebGLExtensionClass({ index: 1, str: 'OES_vertex_array_object' });\nconst TextureFloat = new WebGLExtensionClass({ index: 2, str: 'OES_texture_float' });\nconst TextureHalfFloat = new WebGLExtensionClass({ index: 3, str: 'OES_texture_half_float' });\nconst TextureFloatLinear = new WebGLExtensionClass({ index: 4, str: 'OES_texture_float_linear' });\nconst TextureHalfFloatLinear = new WebGLExtensionClass({ index: 5, str: 'OES_texture_half_float_linear' });\nconst InstancedArrays = new WebGLExtensionClass({ index: 6, str: 'ANGLE_instanced_arrays' });\nconst TextureFilterAnisotropic = new WebGLExtensionClass({ index: 7, str: 'EXT_texture_filter_anisotropic' });\nconst ElementIndexUint = new WebGLExtensionClass({ index: 8, str: 'OES_element_index_uint' });\nconst ShaderTextureLod = new WebGLExtensionClass({ index: 9, str: 'EXT_shader_texture_lod' });\nconst ShaderDerivatives = new WebGLExtensionClass({ index: 10, str: 'OES_standard_derivatives' });\nconst typeList = [VertexArrayObject, TextureFloat, TextureHalfFloat, TextureFloatLinear,\n    TextureHalfFloatLinear, InstancedArrays, TextureFilterAnisotropic, ElementIndexUint, ShaderTextureLod, ShaderDerivatives];\nfunction from({ index }) {\n    return Object(_foundation_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList, index });\n}\nconst WebGLExtension = Object.freeze({\n    VertexArrayObject, TextureFloat, TextureHalfFloat, TextureFloatLinear, TextureHalfFloatLinear,\n    InstancedArrays, TextureFilterAnisotropic, ElementIndexUint, ShaderTextureLod, ShaderDerivatives\n});\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLExtension.ts?");

/***/ }),

/***/ "./src/webgl/WebGLResourceRepository.ts":
/*!**********************************************!*\
  !*** ./src/webgl/WebGLResourceRepository.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return WebGLResourceRepository; });\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../foundation/definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/definitions/TextureParameter */ \"./src/foundation/definitions/TextureParameter.ts\");\n/* harmony import */ var _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/definitions/PixelFormat */ \"./src/foundation/definitions/PixelFormat.ts\");\n/* harmony import */ var _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../foundation/definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../foundation/definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _WebGLContextWrapper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WebGLContextWrapper */ \"./src/webgl/WebGLContextWrapper.ts\");\n/* harmony import */ var _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../foundation/math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\nclass WebGLResourceRepository extends _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.__webglContexts = new Map();\n        this.__resourceCounter = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InvalidCGAPIResourceUid;\n        this.__webglResources = new Map();\n    }\n    static getInstance() {\n        if (!this.__instance) {\n            this.__instance = new (WebGLResourceRepository)();\n        }\n        return this.__instance;\n    }\n    addWebGLContext(gl, width, height, asCurrent) {\n        const glw = new _WebGLContextWrapper__WEBPACK_IMPORTED_MODULE_6__[\"default\"](gl, width, height);\n        this.__webglContexts.set('default', glw);\n        if (asCurrent) {\n            this.__glw = glw;\n        }\n    }\n    get currentWebGLContextWrapper() {\n        return this.__glw;\n    }\n    getResourceNumber() {\n        return ++this.__resourceCounter;\n    }\n    getWebGLResource(WebGLResourceHandle) {\n        return this.__webglResources.get(WebGLResourceHandle);\n    }\n    createIndexBuffer(accsessor) {\n        const gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        const ibo = gl.createBuffer();\n        const resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, ibo);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        //    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, accsessor.bufferView.buffer.getArrayBuffer(), gl.STATIC_DRAW);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, accsessor.getTypedArray(), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        return resourceHandle;\n    }\n    createVertexBuffer(accessor) {\n        const gl = this.__glw.getRawContext();\n        ;\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        const vbo = gl.createBuffer();\n        const resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, vbo);\n        gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n        gl.bufferData(gl.ARRAY_BUFFER, accessor.bufferView.getUint8Array(), gl.STATIC_DRAW);\n        //    gl.bufferData(gl.ARRAY_BUFFER, accessor.getTypedArray(), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        return resourceHandle;\n    }\n    createVertexArray() {\n        const gl = this.__glw;\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        const vao = this.__glw.createVertexArray();\n        const resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, vao);\n        return resourceHandle;\n    }\n    bindTexture2D(textureSlotIndex, textureUid) {\n        const gl = this.__glw.getRawContext();\n        gl.activeTexture(gl['TEXTURE' + textureSlotIndex]);\n        const texture = this.getWebGLResource(textureUid);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n    }\n    bindTextureCube(textureSlotIndex, textureUid) {\n        const gl = this.__glw.getRawContext();\n        gl.activeTexture(gl['TEXTURE' + textureSlotIndex]);\n        const texture = this.getWebGLResource(textureUid);\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n    }\n    createVertexDataResources(primitive) {\n        const gl = this.__glw.getRawContext();\n        const vaoHandle = this.createVertexArray();\n        let iboHandle;\n        if (primitive.hasIndices()) {\n            iboHandle = this.createIndexBuffer(primitive.indicesAccessor);\n        }\n        const vboHandles = [];\n        primitive.attributeAccessors.forEach(accessor => {\n            const vboHandle = this.createVertexBuffer(accessor);\n            vboHandles.push(vboHandle);\n        });\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        return { vaoHandle: vaoHandle, iboHandle: iboHandle, vboHandles: vboHandles, setComplete: false };\n    }\n    createShaderProgram({ vertexShaderStr, fragmentShaderStr, attributeNames, attributeSemantics }) {\n        const gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertexShaderStr);\n        gl.compileShader(vertexShader);\n        this.__checkShaderCompileStatus(vertexShader, vertexShaderStr);\n        const shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        let fragmentShader;\n        if (fragmentShaderStr != null) {\n            fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n            gl.shaderSource(fragmentShader, fragmentShaderStr);\n            gl.compileShader(fragmentShader);\n            this.__checkShaderCompileStatus(fragmentShader, fragmentShaderStr);\n            gl.attachShader(shaderProgram, fragmentShader);\n        }\n        attributeNames.forEach((attributeName, i) => {\n            gl.bindAttribLocation(shaderProgram, attributeSemantics[i].getAttributeSlot(), attributeName);\n        });\n        gl.linkProgram(shaderProgram);\n        const resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, shaderProgram);\n        this.__checkShaderProgramLinkStatus(shaderProgram);\n        gl.deleteShader(vertexShader);\n        if (fragmentShaderStr != null) {\n            gl.deleteShader(fragmentShader);\n        }\n        return resourceHandle;\n    }\n    __addLineNumber(shaderString) {\n        let shaderTextLines = shaderString.split(/\\r\\n|\\r|\\n/);\n        let shaderTextWithLineNumber = '';\n        for (let i = 0; i < shaderTextLines.length; i++) {\n            let lineIndex = i + 1;\n            let splitter = ' : ';\n            if (lineIndex < 10) {\n                splitter = '  : ';\n            }\n            else if (lineIndex >= 100) {\n                splitter = ': ';\n            }\n            shaderTextWithLineNumber += lineIndex + splitter + shaderTextLines[i] + '\\n';\n        }\n        return shaderTextWithLineNumber;\n    }\n    __checkShaderCompileStatus(shader, shaderText) {\n        const gl = this.__glw.getRawContext();\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            console.log(this.__addLineNumber(shaderText));\n            throw new Error('An error occurred compiling the shaders:' + gl.getShaderInfoLog(shader));\n        }\n    }\n    __checkShaderProgramLinkStatus(shaderProgram) {\n        const gl = this.__glw.getRawContext();\n        // If creating the shader program failed, alert\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            throw new Error('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\n        }\n    }\n    setupUniformLocations(shaderProgramUid, dataArray) {\n        const gl = this.__glw.getRawContext();\n        const shaderProgram = this.getWebGLResource(shaderProgramUid);\n        for (let data of dataArray) {\n            let prefix = '';\n            if (data.prefix != null) {\n                prefix = data.prefix;\n            }\n            let semanticSingular;\n            let semanticPlural;\n            if (data.semantic) {\n                semanticSingular = data.semantic.singularStr;\n                semanticPlural = data.semantic.pluralStr;\n            }\n            else {\n                semanticSingular = data.semanticStr;\n                semanticPlural = data.semanticStr;\n            }\n            let identifier = semanticSingular;\n            if (data.index != null) {\n                identifier += '_' + data.index;\n            }\n            if (data.isPlural) {\n                shaderProgram[identifier] = gl.getUniformLocation(shaderProgram, 'u_' + prefix + semanticPlural);\n            }\n            else {\n                shaderProgram[identifier] = gl.getUniformLocation(shaderProgram, 'u_' + prefix + semanticSingular);\n            }\n        }\n    }\n    setUniformValue(shaderProgramUid, uniformSemantic, isMatrix, componentNumber, componentType, isVector, { x, y, z, w }, index) {\n        const gl = this.__glw.getRawContext();\n        const shaderProgram = this.getWebGLResource(shaderProgramUid);\n        let funcName = 'uniform';\n        if (isMatrix) {\n            funcName = 'uniformMatrix';\n        }\n        funcName += componentNumber;\n        funcName += componentType;\n        if (isVector) {\n            funcName += 'v';\n        }\n        const args = [];\n        let identifier = (typeof uniformSemantic === 'string') ? uniformSemantic : uniformSemantic.str;\n        if (index != null) {\n            identifier += '_' + index;\n        }\n        args.push(shaderProgram[identifier]);\n        if (isMatrix) {\n            args.push(false);\n        }\n        args.push(x);\n        if (y != null) {\n            args.push(y);\n        }\n        if (z != null) {\n            args.push(z);\n        }\n        if (w != null) {\n            args.push(w);\n        }\n        gl[funcName].apply(gl, args);\n    }\n    setVertexDataToPipeline({ vaoHandle, iboHandle, vboHandles }, primitive, instanceIDBufferUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InvalidCGAPIResourceUid) {\n        const gl = this.__glw.getRawContext();\n        const vao = this.getWebGLResource(vaoHandle);\n        // VAO bind\n        this.__glw.bindVertexArray(vao);\n        // IBO bind\n        if (iboHandle != null) {\n            const ibo = this.getWebGLResource(iboHandle);\n            if (ibo != null) {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n            }\n            else {\n                throw new Error('Nothing Element Array Buffer!');\n            }\n        }\n        // bind vertex attributes to VBO's\n        vboHandles.forEach((vboHandle, i) => {\n            const vbo = this.getWebGLResource(vboHandle);\n            if (vbo != null) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n            }\n            else {\n                throw new Error('Nothing Element Array Buffer at index ' + i);\n            }\n            gl.enableVertexAttribArray(primitive.attributeSemantics[i].getAttributeSlot());\n            gl.vertexAttribPointer(primitive.attributeSemantics[i].getAttributeSlot(), primitive.attributeCompositionTypes[i].getNumberOfComponents(), primitive.attributeComponentTypes[i].index, false, primitive.attributeAccessors[i].byteStride, primitive.attributeAccessors[i].byteOffsetInBufferView);\n        });\n        /// for InstanceIDBuffer\n        if (instanceIDBufferUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InvalidCGAPIResourceUid) {\n            const instanceIDBuffer = this.getWebGLResource(instanceIDBufferUid);\n            if (instanceIDBuffer != null) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, instanceIDBuffer);\n            }\n            else {\n                throw new Error('Nothing Element Array Buffer at index');\n            }\n            gl.enableVertexAttribArray(_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__[\"VertexAttribute\"].Instance.getAttributeSlot());\n            gl.vertexAttribPointer(_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__[\"VertexAttribute\"].Instance.getAttributeSlot(), _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_4__[\"CompositionType\"].Scalar.getNumberOfComponents(), _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float.index, false, 0, 0);\n            this.__glw.vertexAttribDivisor(_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__[\"VertexAttribute\"].Instance.getAttributeSlot(), 1);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        this.__glw.bindVertexArray(null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    createTexture(data, { level, internalFormat, width, height, border, format, type, magFilter, minFilter, wrapS, wrapT, generateMipmap, anisotropy }) {\n        const gl = this.__glw.getRawContext();\n        ;\n        const texture = gl.createTexture();\n        const resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, texture);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        if (data instanceof HTMLImageElement || data instanceof HTMLCanvasElement) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat.index, format.index, type.index, data);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat.index, width, height, border, format.index, type.index, data);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS.index);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT.index);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter.index);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter.index);\n        if (_foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_7__[\"MathUtil\"].isPowerOfTwoTexture(width, height)) {\n            if (anisotropy && this.__glw.webgl1ExtTFA) {\n                gl.texParameteri(gl.TEXTURE_2D, this.__glw.webgl1ExtTFA.TEXTURE_MAX_ANISOTROPY_EXT, 4);\n            }\n            if (generateMipmap) {\n                gl.generateMipmap(gl.TEXTURE_2D);\n            }\n        }\n        return resourceHandle;\n    }\n    createCubeTexture(mipLevelCount, images, width, height) {\n        const gl = this.__glw.getRawContext();\n        const texture = gl.createTexture();\n        const resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, texture);\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        if (mipLevelCount >= 2) {\n            gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n            gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        }\n        else {\n            gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        }\n        const loadImageToGPU = (image, cubemapSide, i) => {\n            if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement) {\n                gl.texImage2D(cubemapSide, i, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n            }\n            else {\n                gl.texImage2D(cubemapSide, i, gl.RGBA, width / (i + 1), height / (i + 1), 0, gl.RGBA, gl.UNSIGNED_BYTE, image);\n            }\n        };\n        for (let i = 0; i < images.length; i++) {\n            const image = images[i];\n            loadImageToGPU(image.posX, gl.TEXTURE_CUBE_MAP_POSITIVE_X, i);\n            loadImageToGPU(image.negX, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, i);\n            loadImageToGPU(image.posY, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, i);\n            loadImageToGPU(image.negY, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, i);\n            loadImageToGPU(image.posZ, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, i);\n            loadImageToGPU(image.negZ, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, i);\n        }\n        return resourceHandle;\n    }\n    /**\n     * Create Cube Texture from image files.\n     * @param baseUri the base uri to load images;\n     * @param mipLevelCount the number of mip levels (include root level). if no mipmap, the value should be 1;\n     * @returns the WebGLResourceHandle for the generated Cube Texture\n     */\n    createCubeTextureFromFiles(baseUri, mipLevelCount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const gl = this.__glw.getRawContext();\n            const imageArgs = [];\n            let width = 0;\n            let height = 0;\n            for (let i = 0; i < mipLevelCount; i++) {\n                const loadOneLevel = () => {\n                    return new Promise((resolve, reject) => {\n                        let loadedCount = 0;\n                        const images = [];\n                        let faces = [\n                            [baseUri + \"_right_\" + i + \".jpg\", gl.TEXTURE_CUBE_MAP_POSITIVE_X],\n                            [baseUri + \"_left_\" + i + \".jpg\", gl.TEXTURE_CUBE_MAP_NEGATIVE_X],\n                            [baseUri + \"_top_\" + i + \".jpg\", gl.TEXTURE_CUBE_MAP_POSITIVE_Y],\n                            [baseUri + \"_bottom_\" + i + \".jpg\", gl.TEXTURE_CUBE_MAP_NEGATIVE_Y],\n                            [baseUri + \"_front_\" + i + \".jpg\", gl.TEXTURE_CUBE_MAP_POSITIVE_Z],\n                            [baseUri + \"_back_\" + i + \".jpg\", gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n                        ];\n                        for (var j = 0; j < faces.length; j++) {\n                            const face = faces[j][1];\n                            const image = new Image();\n                            image.side = face;\n                            image.uri = faces[j][0];\n                            image.crossOrigin = \"Anonymous\";\n                            image.onload = () => {\n                                loadedCount++;\n                                images.push(image);\n                                if (loadedCount === 6) {\n                                    resolve(images);\n                                }\n                            };\n                            image.onerror = () => {\n                                reject(image.uri);\n                            };\n                            image.src = faces[j][0];\n                        }\n                    });\n                };\n                let images;\n                try {\n                    images = yield loadOneLevel();\n                }\n                catch (e) {\n                    // Try again once\n                    try {\n                        images = yield loadOneLevel();\n                    }\n                    catch (uri) {\n                        // Give up\n                        console.error(`failed to load ${uri}`);\n                    }\n                }\n                const imageObj = {};\n                for (let image of images) {\n                    switch (image.side) {\n                        case gl.TEXTURE_CUBE_MAP_POSITIVE_X:\n                            imageObj.posX = image;\n                            break;\n                        case gl.TEXTURE_CUBE_MAP_POSITIVE_Y:\n                            imageObj.posY = image;\n                            break;\n                        case gl.TEXTURE_CUBE_MAP_POSITIVE_Z:\n                            imageObj.posZ = image;\n                            break;\n                        case gl.TEXTURE_CUBE_MAP_NEGATIVE_X:\n                            imageObj.negX = image;\n                            break;\n                        case gl.TEXTURE_CUBE_MAP_NEGATIVE_Y:\n                            imageObj.negY = image;\n                            break;\n                        case gl.TEXTURE_CUBE_MAP_NEGATIVE_Z:\n                            imageObj.negZ = image;\n                            break;\n                    }\n                    if (i === 0) {\n                        width = image.width;\n                        height = image.height;\n                    }\n                }\n                imageArgs.push(imageObj);\n            }\n            return this.createCubeTexture(mipLevelCount, imageArgs, width, height);\n        });\n    }\n    createDummyCubeTexture(rgbaStr = 'rgba(0,0,0,1)') {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = 1;\n        canvas.height = 1;\n        const ctx = canvas.getContext('2d');\n        ctx.fillStyle = rgbaStr;\n        ctx.fillRect(0, 0, 1, 1);\n        return this.createCubeTexture(1, [{ posX: canvas, negX: canvas, posY: canvas, negY: canvas, posZ: canvas, negZ: canvas }], 1, 1);\n    }\n    createTextureFromDataUri(dataUri, { level, internalFormat, border, format, type, magFilter, minFilter, wrapS, wrapT, generateMipmap, anisotropy }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                const img = new Image();\n                if (!dataUri.match(/^data:/)) {\n                    img.crossOrigin = 'Anonymous';\n                }\n                img.onload = () => {\n                    const width = img.width;\n                    const height = img.height;\n                    let texture = this.createTexture(img, { level, internalFormat, width, height, border, format, type, magFilter, minFilter, wrapS, wrapT, generateMipmap, anisotropy });\n                    resolve(texture);\n                };\n                img.src = dataUri;\n            });\n        });\n    }\n    updateTexture(textureUid, typedArray, { level, width, height, format, type }) {\n        const gl = this.__glw.getRawContext();\n        ;\n        const texture = this.getWebGLResource(textureUid);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, level, 0, 0, width, height, format.index, type.index, typedArray);\n    }\n    deleteTexture(textureHandle) {\n        const texture = this.getWebGLResource(textureHandle);\n        const gl = this.__glw.getRawContext();\n        if (texture != null) {\n            gl.deleteTexture(texture);\n            this.__webglResources.delete(textureHandle);\n        }\n    }\n    createDummyTexture(rgbaStr = \"rgba(255,255,255,1)\") {\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = 1;\n        canvas.height = 1;\n        const ctx = canvas.getContext('2d');\n        ctx.fillStyle = rgbaStr;\n        ctx.fillRect(0, 0, 1, 1);\n        return this.createTexture(canvas, {\n            level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_3__[\"PixelFormat\"].RGBA, width: 1, height: 1,\n            border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_3__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_2__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_2__[\"TextureParameter\"].Nearest,\n            wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_2__[\"TextureParameter\"].ClampToEdge, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_2__[\"TextureParameter\"].ClampToEdge, generateMipmap: false, anisotropy: false\n        });\n    }\n    createUniformBuffer(bufferView) {\n        const gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        const ubo = gl.createBuffer();\n        const resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, ubo);\n        gl.bindBuffer(gl.UNIFORM_BUFFER, ubo);\n        gl.bufferData(gl.UNIFORM_BUFFER, bufferView, gl.DYNAMIC_DRAW);\n        gl.bindBuffer(gl.UNIFORM_BUFFER, null);\n        return resourceHandle;\n    }\n    updateUniformBuffer(uboUid, bufferView) {\n        const gl = this.__glw.getRawContext();\n        const ubo = this.getWebGLResource(uboUid);\n        gl.bindBuffer(gl.UNIFORM_BUFFER, ubo);\n        void gl.bufferSubData(gl.UNIFORM_BUFFER, 0, bufferView, 0);\n        gl.bindBuffer(gl.UNIFORM_BUFFER, null);\n    }\n    bindUniformBlock(shaderProgramUid, blockName, blockIndex) {\n        const gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        const shaderProgram = this.getWebGLResource(shaderProgramUid);\n        const block = gl.getUniformBlockIndex(shaderProgram, blockName);\n        gl.uniformBlockBinding(shaderProgram, block, blockIndex);\n    }\n    bindUniformBufferBase(blockIndex, uboUid) {\n        const gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        const ubo = this.getWebGLResource(uboUid);\n        gl.bindBufferBase(gl.UNIFORM_BUFFER, blockIndex, ubo);\n    }\n    deleteUniformBuffer(uboUid) {\n        const gl = this.__glw.getRawContext();\n        if (gl == null) {\n            new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        const ubo = this.getWebGLResource(uboUid);\n        gl.deleteBuffer(ubo);\n    }\n    createTransformFeedback() {\n        const gl = this.__glw.getRawContext();\n        var transformFeedback = gl.createTransformFeedback();\n        const resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, transformFeedback);\n        gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, transformFeedback);\n        return resourceHandle;\n    }\n    deleteTransformFeedback(transformFeedbackUid) {\n        const gl = this.__glw.getRawContext();\n        const transformFeedback = this.getWebGLResource(transformFeedbackUid);\n        gl.deleteTransformFeedback(transformFeedback);\n    }\n}\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLResourceRepository.ts?");

/***/ })

/******/ });
(0,eval)('this').Rn.VERSION='version: 0.1.1-229-g0588-mod branch: feature/gltf1-material';
