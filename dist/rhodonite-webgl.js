(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["webgl"],{

/***/ "./src/webgl/GLSLShader.ts":
/*!*********************************!*\
  !*** ./src/webgl/GLSLShader.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../foundation/definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n\n\nvar GLSLShader = /** @class */ (function () {\n    function GLSLShader() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n        this.vertexShaderBody = \"\\n\\nvoid main ()\\n{\\n  mat4 worldMatrix = getMatrix(a_instanceID);\\n  mat4 viewMatrix = getViewMatrix(a_instanceID);\\n  mat4 projectionMatrix = getProjectionMatrix(a_instanceID);\\n  mat3 normalMatrix = getNormalMatrix(a_instanceID);\\n\\n  v_position_inWorld = worldMatrix * vec4(a_position, 1.0);\\n\\n  gl_Position = projectionMatrix * viewMatrix * v_position_inWorld;\\n  v_color = a_color;\\n  v_normal_inWorld = normalMatrix * a_normal;\\n  v_texcoord = a_texcoord;\\n\\n  // Light\\n  vec3 lightPosition = vec3(10000.0, 100000.0, 100000.0);\\n  v_lightDirection = normalize(lightPosition - v_position_inWorld.xyz);\\n\\n  // Skeletal\\n\\n  if (length(a_weight.xyz) > 0.01) {\\n    mat4 skinMat = a_weight.x * u_skinMatrices[int(a_joint.x)];\\n    skinMat += a_weight.y * u_skinMatrices[int(a_joint.y)];\\n    skinMat += a_weight.z * u_skinMatrices[int(a_joint.z)];\\n    skinMat += a_weight.w * u_skinMatrices[int(a_joint.w)];\\n    v_position_inWorld = skinMat * vec4(a_position, 1.0);\\n    normalMatrix = toNormalMatrix(skinMat);\\n    v_normal_inWorld = normalize(normalMatrix * a_normal);\\n    gl_Position = projectionMatrix * viewMatrix * v_position_inWorld;\\n  }\\n\\n//  v_color = vec3(u_skinMatrices[int(a_joint.x)][1].xyz);\\n}\\n  \";\n    }\n    GLSLShader.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new GLSLShader();\n        }\n        return this.__instance;\n    };\n    Object.defineProperty(GLSLShader.prototype, \"glsl_rt0\", {\n        get: function () {\n            var repo = this.__webglResourceRepository;\n            if (repo.currentWebGLContextWrapper.isWebGL2) {\n                return 'layout(location = 0) out vec4 rt0;\\n';\n            }\n            else {\n                return 'vec4 rt0;\\n';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GLSLShader.prototype, \"glsl_fragColor\", {\n        get: function () {\n            var repo = this.__webglResourceRepository;\n            if (repo.currentWebGLContextWrapper.isWebGL2) {\n                return '';\n            }\n            else {\n                return 'gl_FragColor = rt0;\\n';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GLSLShader.prototype, \"glsl_vertex_in\", {\n        get: function () {\n            var repo = this.__webglResourceRepository;\n            if (repo.currentWebGLContextWrapper.isWebGL2) {\n                return 'in';\n            }\n            else {\n                return 'attribute';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GLSLShader.prototype, \"glsl_fragment_in\", {\n        get: function () {\n            var repo = this.__webglResourceRepository;\n            if (repo.currentWebGLContextWrapper.isWebGL2) {\n                return 'in';\n            }\n            else {\n                return 'varying';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GLSLShader.prototype, \"glsl_vertex_out\", {\n        get: function () {\n            var repo = this.__webglResourceRepository;\n            if (repo.currentWebGLContextWrapper.isWebGL2) {\n                return 'out';\n            }\n            else {\n                return 'varying';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GLSLShader.prototype, \"glsl_texture\", {\n        get: function () {\n            var repo = this.__webglResourceRepository;\n            if (repo.currentWebGLContextWrapper.isWebGL2) {\n                return 'texture';\n            }\n            else {\n                return 'texture2D';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GLSLShader.prototype, \"glsl_versionText\", {\n        get: function () {\n            var repo = this.__webglResourceRepository;\n            if (repo.currentWebGLContextWrapper.isWebGL2) {\n                return '#version 300 es\\n';\n            }\n            else {\n                return '';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GLSLShader.prototype, \"vertexShaderVariableDefinitions\", {\n        get: function () {\n            var _version = this.glsl_versionText;\n            var _in = this.glsl_vertex_in;\n            var _out = this.glsl_vertex_out;\n            return _version + \"\\nprecision highp float;\\n\" + _in + \" vec3 a_position;\\n\" + _in + \" vec3 a_color;\\n\" + _in + \" vec3 a_normal;\\n\" + _in + \" float a_instanceID;\\n\" + _in + \" vec2 a_texcoord;\\n\" + _in + \" vec4 a_joint;\\n\" + _in + \" vec4 a_weight;\\n\" + _out + \" vec3 v_color;\\n\" + _out + \" vec3 v_normal_inWorld;\\n\" + _out + \" vec4 v_position_inWorld;\\n\" + _out + \" vec3 v_lightDirection;\\n\" + _out + \" vec2 v_texcoord;\\nuniform mat4 u_skinMatrices[100];\\n\\nmat3 toNormalMatrix(mat4 m) {\\n  float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\\n  a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\\n  a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\\n  a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3];\\n\\n  float b00 = a00 * a11 - a01 * a10,\\n  b01 = a00 * a12 - a02 * a10,\\n  b02 = a00 * a13 - a03 * a10,\\n  b03 = a01 * a12 - a02 * a11,\\n  b04 = a01 * a13 - a03 * a11,\\n  b05 = a02 * a13 - a03 * a12,\\n  b06 = a20 * a31 - a21 * a30,\\n  b07 = a20 * a32 - a22 * a30,\\n  b08 = a20 * a33 - a23 * a30,\\n  b09 = a21 * a32 - a22 * a31,\\n  b10 = a21 * a33 - a23 * a31,\\n  b11 = a22 * a33 - a23 * a32;\\n\\n  float determinantVal = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\\n\\n  return mat3(\\n    a11 * b11 - a12 * b10 + a13 * b09, a12 * b08 - a10 * b11 - a13 * b07, a10 * b10 - a11 * b08 + a13 * b06,\\n    a02 * b10 - a01 * b11 - a03 * b09, a00 * b11 - a02 * b08 + a03 * b07, a01 * b08 - a00 * b10 - a03 * b06,\\n    a31 * b05 - a32 * b04 + a33 * b03, a32 * b02 - a30 * b05 - a33 * b01, a30 * b04 - a31 * b02 + a33 * b00) / determinantVal;\\n}\\n\\n\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(GLSLShader.prototype, \"fragmentShaderSimple\", {\n        get: function () {\n            var _version = this.glsl_versionText;\n            var _in = this.glsl_fragment_in;\n            var _def_rt0 = this.glsl_rt0;\n            var _def_fragColor = this.glsl_fragColor;\n            var _texture = this.glsl_texture;\n            return _version + \"\\nprecision highp float;\\n\\nstruct Material {\\n  vec4 baseColor;\\n  sampler2D baseColorTexture;\\n};\\n\\nuniform Material u_material;\\n\\n\" + _in + \" vec3 v_color;\\n\" + _in + \" vec3 v_normal_inWorld;\\n\" + _in + \" vec4 v_position_inWorld;\\n\" + _in + \" vec3 v_lightDirection;\\n\" + _in + \" vec2 v_texcoord;\\n\" + _def_rt0 + \"\\nvoid main ()\\n{\\n  // Light\\n  //vec3 lightPosition = vec3(0.0, 0.0, 50000.0);\\n\\n  // Normal\\n  vec3 normal_inWorld = normalize(v_normal_inWorld);\\n\\n  // baseColor\\n  vec3 color = vec3(0.0, 0.0, 0.0);\\n  if (v_color != color && u_material.baseColor.rgb != color) {\\n    color = v_color * u_material.baseColor.rgb;\\n  } else if (v_color == color) {\\n    color = u_material.baseColor.rgb;\\n  } else if (u_material.baseColor.rgb == color) {\\n    color = v_color;\\n  } else {\\n    color = vec3(1.0, 1.0, 1.0);\\n  }\\n  //color = v_color;\\n\\n  // baseColorTexture\\n  vec4 textureColor = \" + _texture + \"(u_material.baseColorTexture, v_texcoord);\\n  if (textureColor.r > 0.05) {\\n    color *= textureColor.rgb;\\n  }\\n\\n  // Lighting\\n  if (length(v_normal_inWorld) > 0.02) {\\n    vec3 lightDirection = normalize(v_lightDirection);\\n    float diffuse = 1.0 * max(0.0, dot(normal_inWorld, lightDirection));\\n    color *= diffuse;\\n  }\\n\\n  rt0 = vec4(color, 1.0);\\n\\n\\n  \" + _def_fragColor + \"\\n}\\n\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GLSLShader.prototype, \"fragmentShader\", {\n        get: function () {\n            return this.fragmentShaderSimple;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GLSLShader.attributeNames = ['a_position', 'a_color', 'a_normal', 'a_texcoord', 'a_joint', 'a_weight', 'a_instanceID'];\n    GLSLShader.attributeSemantics = [_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Position, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Color0,\n        _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Normal, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Texcoord0, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Joints0, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Weights0, _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_0__[\"VertexAttribute\"].Instance];\n    return GLSLShader;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (GLSLShader);\n\n\n//# sourceURL=webpack:///./src/webgl/GLSLShader.ts?");

/***/ }),

/***/ "./src/webgl/WebGLContextWrapper.ts":
/*!******************************************!*\
  !*** ./src/webgl/WebGLContextWrapper.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WebGLExtension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLExtension */ \"./src/webgl/WebGLExtension.ts\");\n\nvar WebGLContextWrapper = /** @class */ (function () {\n    function WebGLContextWrapper(gl, width, height) {\n        this.__webglVersion = 1;\n        this.width = 0;\n        this.height = 0;\n        this.__extensions = new Map();\n        this.__gl = gl;\n        this.width = width;\n        this.height = height;\n        if (this.__gl.constructor.name === 'WebGL2RenderingContext') {\n            this.__webglVersion = 2;\n        }\n        else {\n            this.webgl1ExtVAO = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].VertexArrayObject);\n            this.webgl1ExtIA = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].InstancedArrays);\n            this.webgl1ExtTF = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureFloat);\n            this.webgl1ExtTHF = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureHalfFloat);\n            this.webgl1ExtTFL = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureFloatLinear);\n            this.webgl1ExtTHFL = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureHalfFloatLinear);\n            this.webgl1ExtTFA = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].TextureFilterAnisotropic);\n            this.webgl1ExtEIUI = this.__getExtension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_0__[\"WebGLExtension\"].ElementIndexUint);\n        }\n    }\n    WebGLContextWrapper.prototype.getRawContext = function () {\n        return this.__gl;\n    };\n    WebGLContextWrapper.prototype.isSupportWebGL1Extension = function (webGLExtension) {\n        if (this.__getExtension(webGLExtension)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Object.defineProperty(WebGLContextWrapper.prototype, \"isWebGL2\", {\n        get: function () {\n            if (this.__webglVersion === 2) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebGLContextWrapper.prototype.createVertexArray = function () {\n        if (this.isWebGL2) {\n            return this.__gl.createVertexArray();\n        }\n        else {\n            if (this.webgl1ExtVAO != null) {\n                return this.webgl1ExtVAO.createVertexArrayOES();\n            }\n        }\n    };\n    WebGLContextWrapper.prototype.bindVertexArray = function (vao) {\n        if (this.isWebGL2) {\n            this.__gl.bindVertexArray(vao);\n        }\n        else {\n            if (this.webgl1ExtVAO != null) {\n                this.webgl1ExtVAO.bindVertexArrayOES(vao);\n            }\n        }\n    };\n    WebGLContextWrapper.prototype.vertexAttribDivisor = function (index, divisor) {\n        if (this.isWebGL2) {\n            this.__gl.vertexAttribDivisor(index, divisor);\n        }\n        else {\n            this.webgl1ExtIA.vertexAttribDivisorANGLE(index, divisor);\n        }\n    };\n    WebGLContextWrapper.prototype.drawElementsInstanced = function (primitiveMode, indexCount, type, offset, instanceCount) {\n        if (this.isWebGL2) {\n            this.__gl.drawElementsInstanced(primitiveMode, indexCount, type, offset, instanceCount);\n        }\n        else {\n            this.webgl1ExtIA.drawElementsInstancedANGLE(primitiveMode, indexCount, type, offset, instanceCount);\n        }\n    };\n    WebGLContextWrapper.prototype.__getExtension = function (extension) {\n        var gl = this.__gl;\n        if (!this.__extensions.has(extension)) {\n            var extObj = gl.getExtension(extension.toString());\n            if (extObj == null) {\n                var text = \"The library does not support this environment because the \" + extension.toString() + \" is not available\";\n                if (console.error != null) {\n                    console.error(text);\n                }\n                else {\n                    console.log(text);\n                }\n            }\n            this.__extensions.set(extension, extObj);\n            return extObj;\n        }\n        return this.__extensions.get(extension);\n    };\n    return WebGLContextWrapper;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLContextWrapper);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLContextWrapper.ts?");

/***/ }),

/***/ "./src/webgl/WebGLExtension.ts":
/*!*************************************!*\
  !*** ./src/webgl/WebGLExtension.ts ***!
  \*************************************/
/*! exports provided: WebGLExtension */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WebGLExtension\", function() { return WebGLExtension; });\n/* harmony import */ var _foundation_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../foundation/misc/EnumIO */ \"./src/foundation/misc/EnumIO.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar WebGLExtensionClass = /** @class */ (function (_super) {\n    __extends(WebGLExtensionClass, _super);\n    function WebGLExtensionClass(_a) {\n        var index = _a.index, str = _a.str;\n        return _super.call(this, { index: index, str: str }) || this;\n    }\n    return WebGLExtensionClass;\n}(_foundation_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"EnumClass\"]));\nvar VertexArrayObject = new WebGLExtensionClass({ index: 1, str: 'OES_vertex_array_object' });\nvar TextureFloat = new WebGLExtensionClass({ index: 2, str: 'OES_texture_float' });\nvar TextureHalfFloat = new WebGLExtensionClass({ index: 3, str: 'OES_texture_half_float' });\nvar TextureFloatLinear = new WebGLExtensionClass({ index: 4, str: 'OES_texture_float_linear' });\nvar TextureHalfFloatLinear = new WebGLExtensionClass({ index: 5, str: 'OES_texture_half_float_linear' });\nvar InstancedArrays = new WebGLExtensionClass({ index: 6, str: 'ANGLE_instanced_arrays' });\nvar TextureFilterAnisotropic = new WebGLExtensionClass({ index: 7, str: 'EXT_texture_filter_anisotropic' });\nvar ElementIndexUint = new WebGLExtensionClass({ index: 8, str: 'OES_element_index_uint' });\nvar typeList = [VertexArrayObject, TextureFloat, TextureHalfFloat, TextureFloatLinear, TextureHalfFloatLinear, InstancedArrays, TextureFilterAnisotropic, ElementIndexUint];\nfunction from(_a) {\n    var index = _a.index;\n    return Object(_foundation_misc_EnumIO__WEBPACK_IMPORTED_MODULE_0__[\"_from\"])({ typeList: typeList, index: index });\n}\nvar WebGLExtension = Object.freeze({ VertexArrayObject: VertexArrayObject, TextureFloat: TextureFloat, TextureHalfFloat: TextureHalfFloat, TextureFloatLinear: TextureFloatLinear, TextureHalfFloatLinear: TextureHalfFloatLinear, InstancedArrays: InstancedArrays, TextureFilterAnisotropic: TextureFilterAnisotropic, ElementIndexUint: ElementIndexUint });\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLExtension.ts?");

/***/ }),

/***/ "./src/webgl/WebGLResourceRepository.ts":
/*!**********************************************!*\
  !*** ./src/webgl/WebGLResourceRepository.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../foundation/definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _WebGLContextWrapper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WebGLContextWrapper */ \"./src/webgl/WebGLContextWrapper.ts\");\n/* harmony import */ var _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../foundation/math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar WebGLResourceRepository = /** @class */ (function (_super) {\n    __extends(WebGLResourceRepository, _super);\n    function WebGLResourceRepository() {\n        var _this = _super.call(this) || this;\n        _this.__webglContexts = new Map();\n        _this.__resourceCounter = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InvalidCGAPIResourceUid;\n        _this.__webglResources = new Map();\n        return _this;\n    }\n    WebGLResourceRepository.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new (WebGLResourceRepository)();\n        }\n        return this.__instance;\n    };\n    WebGLResourceRepository.prototype.addWebGLContext = function (gl, width, height, asCurrent) {\n        var glw = new _WebGLContextWrapper__WEBPACK_IMPORTED_MODULE_4__[\"default\"](gl, width, height);\n        this.__webglContexts.set('default', glw);\n        if (asCurrent) {\n            this.__glw = glw;\n        }\n    };\n    Object.defineProperty(WebGLResourceRepository.prototype, \"currentWebGLContextWrapper\", {\n        get: function () {\n            return this.__glw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebGLResourceRepository.prototype.getResourceNumber = function () {\n        return ++this.__resourceCounter;\n    };\n    WebGLResourceRepository.prototype.getWebGLResource = function (WebGLResourceHandle) {\n        return this.__webglResources.get(WebGLResourceHandle);\n    };\n    WebGLResourceRepository.prototype.createIndexBuffer = function (accsessor) {\n        var gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        var ibo = gl.createBuffer();\n        var resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, ibo);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        //    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, accsessor.bufferView.buffer.getArrayBuffer(), gl.STATIC_DRAW);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, accsessor.getTypedArray(), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        return resourceHandle;\n    };\n    WebGLResourceRepository.prototype.createVertexBuffer = function (accessor) {\n        var gl = this.__glw.getRawContext();\n        ;\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        var vbo = gl.createBuffer();\n        var resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, vbo);\n        gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n        gl.bufferData(gl.ARRAY_BUFFER, accessor.bufferView.getUint8Array(), gl.STATIC_DRAW);\n        //    gl.bufferData(gl.ARRAY_BUFFER, accessor.getTypedArray(), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        return resourceHandle;\n    };\n    WebGLResourceRepository.prototype.createVertexArray = function () {\n        var gl = this.__glw;\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        var vao = this.__glw.createVertexArray();\n        var resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, vao);\n        return resourceHandle;\n    };\n    WebGLResourceRepository.prototype.createVertexDataResources = function (primitive) {\n        var _this = this;\n        var gl = this.__glw.getRawContext();\n        var vaoHandle = this.createVertexArray();\n        var iboHandle;\n        if (primitive.hasIndices()) {\n            iboHandle = this.createIndexBuffer(primitive.indicesAccessor);\n        }\n        var vboHandles = [];\n        primitive.attributeAccessors.forEach(function (accessor) {\n            var vboHandle = _this.createVertexBuffer(accessor);\n            vboHandles.push(vboHandle);\n        });\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        return { vaoHandle: vaoHandle, iboHandle: iboHandle, vboHandles: vboHandles, setComplete: false };\n    };\n    WebGLResourceRepository.prototype.createShaderProgram = function (_a) {\n        var vertexShaderStr = _a.vertexShaderStr, fragmentShaderStr = _a.fragmentShaderStr, attributeNames = _a.attributeNames, attributeSemantics = _a.attributeSemantics;\n        var gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertexShaderStr);\n        gl.compileShader(vertexShader);\n        this.__checkShaderCompileStatus(vertexShader, vertexShaderStr);\n        var shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        var fragmentShader;\n        if (fragmentShaderStr != null) {\n            fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n            gl.shaderSource(fragmentShader, fragmentShaderStr);\n            gl.compileShader(fragmentShader);\n            this.__checkShaderCompileStatus(fragmentShader, fragmentShaderStr);\n            gl.attachShader(shaderProgram, fragmentShader);\n        }\n        attributeNames.forEach(function (attributeName, i) {\n            gl.bindAttribLocation(shaderProgram, attributeSemantics[i].getAttributeSlot(), attributeName);\n        });\n        gl.linkProgram(shaderProgram);\n        var resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, shaderProgram);\n        this.__checkShaderProgramLinkStatus(shaderProgram);\n        gl.deleteShader(vertexShader);\n        if (fragmentShaderStr != null) {\n            gl.deleteShader(fragmentShader);\n        }\n        return resourceHandle;\n    };\n    WebGLResourceRepository.prototype.__addLineNumber = function (shaderString) {\n        var shaderTextLines = shaderString.split(/\\r\\n|\\r|\\n/);\n        var shaderTextWithLineNumber = '';\n        for (var i = 0; i < shaderTextLines.length; i++) {\n            var lineIndex = i + 1;\n            var splitter = ' : ';\n            if (lineIndex < 10) {\n                splitter = '  : ';\n            }\n            else if (lineIndex >= 100) {\n                splitter = ': ';\n            }\n            shaderTextWithLineNumber += lineIndex + splitter + shaderTextLines[i] + '\\n';\n        }\n        return shaderTextWithLineNumber;\n    };\n    WebGLResourceRepository.prototype.__checkShaderCompileStatus = function (shader, shaderText) {\n        var gl = this.__glw.getRawContext();\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            console.log(this.__addLineNumber(shaderText));\n            throw new Error('An error occurred compiling the shaders:' + gl.getShaderInfoLog(shader));\n        }\n    };\n    WebGLResourceRepository.prototype.__checkShaderProgramLinkStatus = function (shaderProgram) {\n        var gl = this.__glw.getRawContext();\n        ;\n        // If creating the shader program failed, alert\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            throw new Error('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\n        }\n    };\n    WebGLResourceRepository.prototype.setVertexDataToPipeline = function (_a, primitive, instanceIDBufferUid) {\n        var _this = this;\n        var vaoHandle = _a.vaoHandle, iboHandle = _a.iboHandle, vboHandles = _a.vboHandles;\n        if (instanceIDBufferUid === void 0) { instanceIDBufferUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InvalidCGAPIResourceUid; }\n        var gl = this.__glw.getRawContext();\n        ;\n        var vao = this.getWebGLResource(vaoHandle);\n        // VAO bind\n        this.__glw.bindVertexArray(vao);\n        // IBO bind\n        if (iboHandle != null) {\n            var ibo = this.getWebGLResource(iboHandle);\n            if (ibo != null) {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n            }\n            else {\n                throw new Error('Nothing Element Array Buffer!');\n            }\n        }\n        // bind vertex attributes to VBO's\n        vboHandles.forEach(function (vboHandle, i) {\n            var vbo = _this.getWebGLResource(vboHandle);\n            if (vbo != null) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n            }\n            else {\n                throw new Error('Nothing Element Array Buffer at index ' + i);\n            }\n            gl.enableVertexAttribArray(primitive.attributeSemantics[i].getAttributeSlot());\n            gl.vertexAttribPointer(primitive.attributeSemantics[i].getAttributeSlot(), primitive.attributeCompositionTypes[i].getNumberOfComponents(), primitive.attributeComponentTypes[i].index, false, primitive.attributeAccessors[i].byteStride, primitive.attributeAccessors[i].byteOffsetInBufferView);\n        });\n        /// for InstanceIDBuffer\n        if (instanceIDBufferUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InvalidCGAPIResourceUid) {\n            var instanceIDBuffer = this.getWebGLResource(instanceIDBufferUid);\n            if (instanceIDBuffer != null) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, instanceIDBuffer);\n            }\n            else {\n                throw new Error('Nothing Element Array Buffer at index');\n            }\n            gl.enableVertexAttribArray(_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__[\"VertexAttribute\"].Instance.getAttributeSlot());\n            gl.vertexAttribPointer(_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__[\"VertexAttribute\"].Instance.getAttributeSlot(), _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_2__[\"CompositionType\"].Scalar.getNumberOfComponents(), _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_3__[\"ComponentType\"].Float.index, false, 0, 0);\n            this.__glw.vertexAttribDivisor(_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_1__[\"VertexAttribute\"].Instance.getAttributeSlot(), 1);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        this.__glw.bindVertexArray(null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    };\n    WebGLResourceRepository.prototype.createTexture = function (data, _a) {\n        var level = _a.level, internalFormat = _a.internalFormat, width = _a.width, height = _a.height, border = _a.border, format = _a.format, type = _a.type, magFilter = _a.magFilter, minFilter = _a.minFilter, wrapS = _a.wrapS, wrapT = _a.wrapT, generateMipmap = _a.generateMipmap, anisotropy = _a.anisotropy;\n        var gl = this.__glw.getRawContext();\n        ;\n        var dataTexture = gl.createTexture();\n        var resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, dataTexture);\n        gl.bindTexture(gl.TEXTURE_2D, dataTexture);\n        if (data instanceof HTMLImageElement || data instanceof HTMLCanvasElement) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat.index, format.index, type.index, data);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat.index, width, height, border, format.index, type.index, data);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS.index);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT.index);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter.index);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter.index);\n        if (_foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_5__[\"MathUtil\"].isPowerOfTwoTexture(width, height)) {\n            if (anisotropy && this.__glw.webgl1ExtTFA) {\n                gl.texParameteri(gl.TEXTURE_2D, this.__glw.webgl1ExtTFA.TEXTURE_MAX_ANISOTROPY_EXT, 4);\n            }\n            if (generateMipmap) {\n                gl.generateMipmap(gl.TEXTURE_2D);\n            }\n        }\n        return resourceHandle;\n    };\n    WebGLResourceRepository.prototype.updateTexture = function (textureUid, typedArray, _a) {\n        var level = _a.level, width = _a.width, height = _a.height, format = _a.format, type = _a.type;\n        var gl = this.__glw.getRawContext();\n        ;\n        var texture = this.getWebGLResource(textureUid);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texSubImage2D(gl.TEXTURE_2D, level, 0, 0, width, height, format.index, type.index, typedArray);\n    };\n    WebGLResourceRepository.prototype.deleteTexture = function (textureHandle) {\n        var texture = this.getWebGLResource(textureHandle);\n        var gl = this.__glw.getRawContext();\n        if (texture != null) {\n            gl.deleteTexture(texture);\n            this.__webglResources.delete(textureHandle);\n        }\n    };\n    WebGLResourceRepository.prototype.createUniformBuffer = function (bufferView) {\n        var gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        var ubo = gl.createBuffer();\n        var resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, ubo);\n        gl.bindBuffer(gl.UNIFORM_BUFFER, ubo);\n        gl.bufferData(gl.UNIFORM_BUFFER, bufferView, gl.DYNAMIC_DRAW);\n        gl.bindBuffer(gl.UNIFORM_BUFFER, null);\n        return resourceHandle;\n    };\n    WebGLResourceRepository.prototype.updateUniformBuffer = function (uboUid, bufferView) {\n        var gl = this.__glw.getRawContext();\n        var ubo = this.getWebGLResource(uboUid);\n        gl.bindBuffer(gl.UNIFORM_BUFFER, ubo);\n        void gl.bufferSubData(gl.UNIFORM_BUFFER, 0, bufferView, 0);\n        gl.bindBuffer(gl.UNIFORM_BUFFER, null);\n    };\n    WebGLResourceRepository.prototype.bindUniformBlock = function (shaderProgramUid, blockName, blockIndex) {\n        var gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        var shaderProgram = this.getWebGLResource(shaderProgramUid);\n        var block = gl.getUniformBlockIndex(shaderProgram, blockName);\n        gl.uniformBlockBinding(shaderProgram, block, blockIndex);\n    };\n    WebGLResourceRepository.prototype.bindUniformBufferBase = function (blockIndex, uboUid) {\n        var gl = this.__glw.getRawContext();\n        if (gl == null) {\n            throw new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        var ubo = this.getWebGLResource(uboUid);\n        gl.bindBufferBase(gl.UNIFORM_BUFFER, blockIndex, ubo);\n    };\n    WebGLResourceRepository.prototype.deleteUniformBuffer = function (uboUid) {\n        var gl = this.__glw.getRawContext();\n        if (gl == null) {\n            new Error(\"No WebGLRenderingContext set as Default.\");\n        }\n        var ubo = this.getWebGLResource(uboUid);\n        gl.deleteBuffer(ubo);\n    };\n    WebGLResourceRepository.prototype.createTransformFeedback = function () {\n        var gl = this.__glw.getRawContext();\n        var transformFeedback = gl.createTransformFeedback();\n        var resourceHandle = this.getResourceNumber();\n        this.__webglResources.set(resourceHandle, transformFeedback);\n        gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, transformFeedback);\n        return resourceHandle;\n    };\n    WebGLResourceRepository.prototype.deleteTransformFeedback = function (transformFeedbackUid) {\n        var gl = this.__glw.getRawContext();\n        var transformFeedback = this.getWebGLResource(transformFeedbackUid);\n        gl.deleteTransformFeedback(transformFeedback);\n    };\n    return WebGLResourceRepository;\n}(_foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"]));\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLResourceRepository);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLResourceRepository.ts?");

/***/ }),

/***/ "./src/webgl/WebGLStrategyDataTexture.ts":
/*!***********************************************!*\
  !*** ./src/webgl/WebGLStrategyDataTexture.ts ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _WebGLExtension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WebGLExtension */ \"./src/webgl/WebGLExtension.ts\");\n/* harmony import */ var _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\n/* harmony import */ var _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../foundation/definitions/PixelFormat */ \"./src/foundation/definitions/PixelFormat.ts\");\n/* harmony import */ var _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../foundation/definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../foundation/definitions/TextureParameter */ \"./src/foundation/definitions/TextureParameter.ts\");\n/* harmony import */ var _GLSLShader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./GLSLShader */ \"./src/webgl/GLSLShader.ts\");\n/* harmony import */ var _foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../foundation/definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n\n\n\n\n\n\n\n\n\n\nvar WebGLStrategyDataTexture = /** @class */ (function () {\n    function WebGLStrategyDataTexture() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        this.__dataTextureUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_9__[\"default\"].InvalidCGAPIResourceUid;\n        this.__shaderProgramUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_9__[\"default\"].InvalidCGAPIResourceUid;\n        this.__vertexHandles = [];\n        this.__isVAOSet = false;\n    }\n    Object.defineProperty(WebGLStrategyDataTexture.prototype, \"vertexShaderMethodDefinitions_dataTexture\", {\n        get: function () {\n            var _texture = _GLSLShader__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getInstance().glsl_texture;\n            return \"\\n  uniform sampler2D u_dataTexture;\\n  uniform mat4 u_viewMatrix;\\n  uniform mat4 u_projectionMatrix;\\n  uniform mat3 u_normalMatrix;\\n\\n  /*\\n   * This idea from https://qiita.com/YVT/items/c695ab4b3cf7faa93885\\n   * arg = vec2(1. / size.x, 1. / size.x / size.y);\\n   */\\n  // vec4 fetchElement(sampler2D tex, float index, vec2 arg)\\n  // {\\n  //   return \" + _texture + \"( tex, arg * (index + 0.5) );\\n  // }\\n\\n  vec4 fetchElement(sampler2D tex, float index, vec2 invSize)\\n  {\\n    float t = (index + 0.5) * invSize.x;\\n    float x = fract(t);\\n    float y = (floor(t) + 0.5) * invSize.y;\\n    return \" + _texture + \"( tex, vec2(x, y) );\\n  }\\n\\n  mat4 getMatrix(float instanceId)\\n  {\\n    float index = instanceId;\\n    float powWidthVal = \" + _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength + \".0;\\n    float powHeightVal = \" + _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength + \".0;\\n    vec2 arg = vec2(1.0/powWidthVal, 1.0/powHeightVal);\\n  //  vec2 arg = vec2(1.0/powWidthVal, 1.0/powWidthVal/powHeightVal);\\n\\n    vec4 col0 = fetchElement(u_dataTexture, index * 4.0 + 0.0, arg);\\n   vec4 col1 = fetchElement(u_dataTexture, index * 4.0 + 1.0, arg);\\n   vec4 col2 = fetchElement(u_dataTexture, index * 4.0 + 2.0, arg);\\n\\n    mat4 matrix = mat4(\\n      col0.x, col1.x, col2.x, 0.0,\\n      col0.y, col1.y, col2.y, 0.0,\\n      col0.z, col1.z, col2.z, 0.0,\\n      col0.w, col1.w, col2.w, 1.0\\n      );\\n\\n    return matrix;\\n  }\\n\\n  mat4 getViewMatrix(float instanceId) {\\n    return u_viewMatrix;\\n  }\\n\\n  mat4 getProjectionMatrix(float instanceId) {\\n    return u_projectionMatrix;\\n  }\\n\\n  mat3 getNormalMatrix(float instanceId) {\\n    return u_normalMatrix;\\n  }\\n\\n  \";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebGLStrategyDataTexture.prototype.setupShaderProgram = function () {\n        if (this.__shaderProgramUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_9__[\"default\"].InvalidCGAPIResourceUid) {\n            return;\n        }\n        // Shader Setup\n        var glslShader = _GLSLShader__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getInstance();\n        var vertexShader = glslShader.vertexShaderVariableDefinitions +\n            this.vertexShaderMethodDefinitions_dataTexture +\n            glslShader.vertexShaderBody;\n        var fragmentShader = glslShader.fragmentShader;\n        this.__shaderProgramUid = this.__webglResourceRepository.createShaderProgram({\n            vertexShaderStr: vertexShader,\n            fragmentShaderStr: fragmentShader,\n            attributeNames: _GLSLShader__WEBPACK_IMPORTED_MODULE_7__[\"default\"].attributeNames,\n            attributeSemantics: _GLSLShader__WEBPACK_IMPORTED_MODULE_7__[\"default\"].attributeSemantics\n        });\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        this.__uniformLocation_viewMatrix = gl.getUniformLocation(shaderProgram, 'u_viewMatrix');\n        this.__uniformLocation_projectionMatrix = gl.getUniformLocation(shaderProgram, 'u_projectionMatrix');\n    };\n    WebGLStrategyDataTexture.prototype.__isLoaded = function (index) {\n        if (this.__vertexHandles[index] != null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    WebGLStrategyDataTexture.prototype.$load = function (meshComponent) {\n        if (this.__isLoaded(0)) {\n            return;\n        }\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            var vertexHandles = this.__webglResourceRepository.createVertexDataResources(primitive);\n            this.__vertexHandles[i] = vertexHandles;\n            WebGLStrategyDataTexture.__vertexHandleOfPrimitiveObjectUids.set(primitive.objectUid, vertexHandles);\n        }\n    };\n    WebGLStrategyDataTexture.prototype.$prerender = function (meshComponent, instanceIDBufferUid) {\n        if (this.__isVAOSet) {\n            return;\n        }\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            // if (this.__isLoaded(i) && this.__isVAOSet) {\n            this.__vertexHandles[i] = WebGLStrategyDataTexture.__vertexHandleOfPrimitiveObjectUids.get(primitive.objectUid);\n            //this.__vertexShaderProgramHandles[i] = MeshRendererComponent.__shaderProgramHandleOfPrimitiveObjectUids.get(primitive.objectUid)!;\n            //  continue;\n            // }\n            this.__webglResourceRepository.setVertexDataToPipeline(this.__vertexHandles[i], primitive, instanceIDBufferUid);\n        }\n        this.__isVAOSet = true;\n    };\n    WebGLStrategyDataTexture.prototype.common_$prerender = function () {\n        var isHalfFloatMode = false;\n        if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2 ||\n            this.__webglResourceRepository.currentWebGLContextWrapper.isSupportWebGL1Extension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_1__[\"WebGLExtension\"].TextureHalfFloat)) {\n            isHalfFloatMode = true;\n        }\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_8__[\"BufferUse\"].GPUInstanceData);\n        var floatDataTextureBuffer = new Float32Array(buffer.getArrayBuffer());\n        var halfFloatDataTextureBuffer;\n        if (isHalfFloatMode) {\n            halfFloatDataTextureBuffer = new Uint16Array(floatDataTextureBuffer.length);\n            var convertLength = buffer.byteSizeInUse / 4; //components\n            convertLength /= 2; // bytes\n            for (var i = 0; i < convertLength; i++) {\n                halfFloatDataTextureBuffer[i] = _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_3__[\"MathUtil\"].toHalfFloat(floatDataTextureBuffer[i]);\n            }\n        }\n        if (this.__dataTextureUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_9__[\"default\"].InvalidCGAPIResourceUid) {\n            if (isHalfFloatMode) {\n                if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                    this.__webglResourceRepository.updateTexture(this.__dataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n                else {\n                    this.__webglResourceRepository.updateTexture(this.__dataTextureUid, halfFloatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].HalfFloat\n                    });\n                }\n            }\n            else {\n                if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                    this.__webglResourceRepository.updateTexture(this.__dataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n                else {\n                    this.__webglResourceRepository.updateTexture(this.__dataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n            }\n            return;\n        }\n        if (isHalfFloatMode) {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                this.__dataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA16F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n            else {\n                this.__dataTextureUid = this.__webglResourceRepository.createTexture(halfFloatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].HalfFloat, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n        }\n        else {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                this.__dataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA32F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n            else {\n                this.__dataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n        }\n    };\n    ;\n    WebGLStrategyDataTexture.prototype.attachGPUData = function () {\n        var gl = this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext();\n        var dataTexture = this.__webglResourceRepository.getWebGLResource(this.__dataTextureUid);\n        gl.bindTexture(gl.TEXTURE_2D, dataTexture);\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);\n        var uniform_dataTexture = gl.getUniformLocation(shaderProgram, 'u_dataTexture');\n        gl.uniform1i(uniform_dataTexture, 0);\n    };\n    ;\n    WebGLStrategyDataTexture.prototype.attatchShaderProgram = function () {\n        var shaderProgramUid = this.__shaderProgramUid;\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(shaderProgramUid);\n        gl.useProgram(shaderProgram);\n    };\n    WebGLStrategyDataTexture.prototype.attachVertexData = function (i, primitive, glw, instanceIDBufferUid) {\n        var vaoHandles = this.__vertexHandles[i];\n        var vao = this.__webglResourceRepository.getWebGLResource(vaoHandles.vaoHandle);\n        var gl = glw.getRawContext();\n        if (vao != null) {\n            glw.bindVertexArray(vao);\n        }\n        else {\n            this.__webglResourceRepository.setVertexDataToPipeline(vaoHandles, primitive, instanceIDBufferUid);\n            var ibo = this.__webglResourceRepository.getWebGLResource(vaoHandles.iboHandle);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        }\n    };\n    WebGLStrategyDataTexture.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new (WebGLStrategyDataTexture)();\n        }\n        return this.__instance;\n    };\n    WebGLStrategyDataTexture.prototype.common_$render = function (viewMatrix, projectionMatrix) {\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        this.attatchShaderProgram();\n        var gl = glw.getRawContext();\n        gl.uniformMatrix4fv(this.__uniformLocation_viewMatrix, false, viewMatrix.v);\n        gl.uniformMatrix4fv(this.__uniformLocation_projectionMatrix, false, projectionMatrix.v);\n        return true;\n    };\n    WebGLStrategyDataTexture.__vertexHandleOfPrimitiveObjectUids = new Map();\n    return WebGLStrategyDataTexture;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLStrategyDataTexture);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLStrategyDataTexture.ts?");

/***/ }),

/***/ "./src/webgl/WebGLStrategyTransformFeedback.ts":
/*!*****************************************************!*\
  !*** ./src/webgl/WebGLStrategyTransformFeedback.ts ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _WebGLExtension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WebGLExtension */ \"./src/webgl/WebGLExtension.ts\");\n/* harmony import */ var _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\n/* harmony import */ var _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../foundation/definitions/PixelFormat */ \"./src/foundation/definitions/PixelFormat.ts\");\n/* harmony import */ var _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../foundation/definitions/ComponentType */ \"./src/foundation/definitions/ComponentType.ts\");\n/* harmony import */ var _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../foundation/definitions/TextureParameter */ \"./src/foundation/definitions/TextureParameter.ts\");\n/* harmony import */ var _GLSLShader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./GLSLShader */ \"./src/webgl/GLSLShader.ts\");\n/* harmony import */ var _foundation_core_EntityRepository__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../foundation/core/EntityRepository */ \"./src/foundation/core/EntityRepository.ts\");\n/* harmony import */ var _foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../foundation/definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _foundation_components_MeshComponent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../foundation/components/MeshComponent */ \"./src/foundation/components/MeshComponent.ts\");\n/* harmony import */ var _foundation_geometry_Primitive__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../foundation/geometry/Primitive */ \"./src/foundation/geometry/Primitive.ts\");\n/* harmony import */ var _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../foundation/definitions/CompositionType */ \"./src/foundation/definitions/CompositionType.ts\");\n/* harmony import */ var _foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../foundation/definitions/VertexAttribute */ \"./src/foundation/definitions/VertexAttribute.ts\");\n/* harmony import */ var _foundation_definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../foundation/definitions/PrimitiveMode */ \"./src/foundation/definitions/PrimitiveMode.ts\");\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar WebGLStrategyTransformFeedback = /** @class */ (function () {\n    function WebGLStrategyTransformFeedback() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        this.__instanceDataTextureUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid;\n        this.__vertexDataTextureUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid;\n        this.__shaderProgramUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid;\n        this.__primitiveHeaderUboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid;\n        this.__indexCountToSubtractUboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid;\n        this.__entitiesUidUboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid;\n        this.__primitiveUidUboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid;\n        this.__isVertexReady = false;\n    }\n    Object.defineProperty(WebGLStrategyTransformFeedback.prototype, \"__transformFeedbackShaderText\", {\n        get: function () {\n            var _in = _GLSLShader__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getInstance().glsl_vertex_in;\n            var _texture = _GLSLShader__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getInstance().glsl_texture;\n            return \"#version 300 es\\n\\n    layout (std140) uniform indexCountsToSubtract {\\n      ivec4 counts[256];\\n    } u_indexCountsToSubtract;\\n    layout (std140) uniform entityUids {\\n      ivec4 ids[256];\\n    } u_entityData;\\n    layout (std140) uniform primitiveUids {\\n      ivec4 ids[256];\\n    } u_primitiveData;\\n    layout (std140) uniform primitiveHeader {\\n      ivec4 data[256];\\n    } u_primitiveHeader;\\n\\n    out vec4 position;\\n    //out vec3 colors;\\n\\n    uniform sampler2D u_instanceDataTexture;\\n    uniform sampler2D u_vertexDataTexture;\\n\\n    void main(){\\n      int indexOfVertices = gl_VertexID + 3*gl_InstanceID;\\n\\n      int entityUidMinusOne = 0;\\n      int primitiveUid = 0;\\n      for (int i=0; i<=indexOfVertices; i++) {\\n        for (int j=0; j<1024; j++) {\\n          int value = u_indexCountsToSubtract.counts[j/4][j%4];\\n          int result = int(step(float(value), float(i)));\\n          if (result > 0) {\\n            entityUidMinusOne = result * int(u_entityData.ids[j/4][j%4]) - 1;\\n            primitiveUid = result * u_primitiveData.ids[j/4][j%4];\\n          } else {\\n            break;\\n          }\\n        }\\n      }\\n\\n      ivec4 indicesMeta = u_primitiveHeader.data[9*primitiveUid + 0];\\n      int primIndicesByteOffset = indicesMeta.x;\\n      int primIndicesComponentSizeInByte = indicesMeta.y;\\n      int primIndicesLength = indicesMeta.z;\\n\\n      int idx = gl_VertexID - primIndicesByteOffset / 4 /*byte*/;\\n\\n      // get Indices\\n      int texelLength = \" + _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength + \";\\n      vec4 indexVec4 = texelFetch(u_vertexDataTexture, ivec2(idx%texelLength, idx/texelLength), 0);\\n      int index = int(indexVec4[idx%4]);\\n\\n      // get Positions\\n      ivec4 indicesData = u_primitiveHeader.data[9*primitiveUid + 1];\\n      int primPositionsByteOffset = indicesData.x;\\n      idx = primPositionsByteOffset/4 + index;\\n      vec4 posVec4 = texelFetch(u_vertexDataTexture, ivec2(idx%texelLength, idx/texelLength), 0);\\n\\n      position = posVec4;\\n    }\\n\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebGLStrategyTransformFeedback.prototype, \"__transformFeedbackFragmentShaderText\", {\n        get: function () {\n            return \"#version 300 es\\nprecision highp float;\\n\\nout vec4 outColor;\\n\\nvoid main(){\\n    outColor = vec4(1.0);\\n}\\n    \";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebGLStrategyTransformFeedback.prototype.setupShaderProgram = function () {\n        if (this.__shaderProgramUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid) {\n            return;\n        }\n        // Shader Setup\n        var vertexShader = this.__transformFeedbackShaderText;\n        var fragmentShader = this.__transformFeedbackFragmentShaderText;\n        this.__shaderProgramUid = this.__webglResourceRepository.createShaderProgram({\n            vertexShaderStr: vertexShader,\n            fragmentShaderStr: fragmentShader,\n            attributeNames: _GLSLShader__WEBPACK_IMPORTED_MODULE_7__[\"default\"].attributeNames,\n            attributeSemantics: _GLSLShader__WEBPACK_IMPORTED_MODULE_7__[\"default\"].attributeSemantics\n        });\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        this.__uniformLocation_viewMatrix = gl.getUniformLocation(shaderProgram, 'u_viewMatrix');\n        this.__uniformLocation_projectionMatrix = gl.getUniformLocation(shaderProgram, 'u_projectionMatrix');\n    };\n    WebGLStrategyTransformFeedback.prototype.$load = function (meshComponent) {\n        if (this.__isVertexReady) {\n            return;\n        }\n        var buffer = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance().getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_9__[\"BufferUse\"].CPUGeneric);\n        var indicesBufferView = buffer.takeBufferView({ byteLengthToNeed: 4 * 3, byteStride: 4, isAoS: false });\n        var indicesAccessor = indicesBufferView.takeAccessor({ compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_12__[\"CompositionType\"].Scalar, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].UnsingedInt, count: 3 });\n        var attributeBufferView = buffer.takeBufferView({ byteLengthToNeed: 16 * 3, byteStride: 16, isAoS: false });\n        var attributeAccessor = attributeBufferView.takeAccessor({ compositionType: _foundation_definitions_CompositionType__WEBPACK_IMPORTED_MODULE_12__[\"CompositionType\"].Vec4, componentType: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, count: 3 });\n        var indicesUint16Array = indicesAccessor.getTypedArray();\n        indicesUint16Array[0] = 0;\n        indicesUint16Array[1] = 1;\n        indicesUint16Array[2] = 2;\n        var primitive = _foundation_geometry_Primitive__WEBPACK_IMPORTED_MODULE_11__[\"default\"].createPrimitive({\n            indices: indicesUint16Array,\n            attributeCompositionTypes: [attributeAccessor.compositionType],\n            attributeSemantics: [_foundation_definitions_VertexAttribute__WEBPACK_IMPORTED_MODULE_13__[\"VertexAttribute\"].Position],\n            attributes: [attributeAccessor.getTypedArray()],\n            primitiveMode: _foundation_definitions_PrimitiveMode__WEBPACK_IMPORTED_MODULE_14__[\"PrimitiveMode\"].Triangles,\n            material: void 0\n        });\n        this.__vertexHandle = this.__webglResourceRepository.createVertexDataResources(primitive);\n        this.__isVertexReady = true;\n    };\n    WebGLStrategyTransformFeedback.prototype.$prerender = function (meshComponent, instanceIDBufferUid) {\n    };\n    WebGLStrategyTransformFeedback.prototype.__setupUBOPrimitiveHeaderData = function () {\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_9__[\"BufferUse\"].UBOGeneric);\n        var floatDataTextureBuffer = new Int32Array(buffer.getArrayBuffer());\n        if (this.__primitiveHeaderUboUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid) {\n            //      this.__webglResourceRepository.updateUniformBuffer(this.__primitiveHeaderUboUid, floatDataTextureBuffer);\n            return;\n        }\n        this.__primitiveHeaderUboUid = this.__webglResourceRepository.createUniformBuffer(floatDataTextureBuffer);\n        this.__webglResourceRepository.bindUniformBufferBase(3, this.__primitiveHeaderUboUid);\n    };\n    WebGLStrategyTransformFeedback.prototype.__setupGPUInstanceMetaData = function () {\n        if (this.__primitiveUidUboUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid) {\n            return;\n        }\n        var entities = _foundation_core_EntityRepository__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getInstance()._getEntities();\n        var entityIds = new Int32Array(entities.length);\n        var primitiveIds = new Int32Array(entities.length);\n        var indexCountToSubtract = new Int32Array(entities.length);\n        var tmpSumIndexCount = 0;\n        entities.forEach(function (entity, i) {\n            var meshComponent = entity.getComponent(_foundation_components_MeshComponent__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n            if (meshComponent) {\n                primitiveIds[i] = meshComponent.getPrimitiveAt(0).primitiveUid;\n                entityIds[i] = entity.entityUID;\n                var indexCountOfPrimitive = meshComponent.getPrimitiveAt(0).indicesAccessor.elementCount;\n                indexCountToSubtract[i] = tmpSumIndexCount + indexCountOfPrimitive;\n                tmpSumIndexCount += indexCountOfPrimitive;\n            }\n        });\n        this.__indexCountToSubtractUboUid = this.__webglResourceRepository.createUniformBuffer(indexCountToSubtract);\n        this.__webglResourceRepository.bindUniformBufferBase(0, this.__indexCountToSubtractUboUid);\n        this.__entitiesUidUboUid = this.__webglResourceRepository.createUniformBuffer(entityIds);\n        this.__webglResourceRepository.bindUniformBufferBase(1, this.__entitiesUidUboUid);\n        this.__primitiveUidUboUid = this.__webglResourceRepository.createUniformBuffer(primitiveIds);\n        this.__webglResourceRepository.bindUniformBufferBase(2, this.__primitiveUidUboUid);\n    };\n    WebGLStrategyTransformFeedback.prototype.__setupGPUInstanceData = function () {\n        var isHalfFloatMode = false;\n        if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2 ||\n            this.__webglResourceRepository.currentWebGLContextWrapper.isSupportWebGL1Extension(_WebGLExtension__WEBPACK_IMPORTED_MODULE_1__[\"WebGLExtension\"].TextureHalfFloat)) {\n            isHalfFloatMode = true;\n        }\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_9__[\"BufferUse\"].GPUInstanceData);\n        var floatDataTextureBuffer = new Float32Array(buffer.getArrayBuffer());\n        var halfFloatDataTextureBuffer;\n        if (isHalfFloatMode) {\n            halfFloatDataTextureBuffer = new Uint16Array(floatDataTextureBuffer.length);\n            var convertLength = buffer.byteSizeInUse / 4; //components\n            convertLength /= 2; // bytes\n            for (var i = 0; i < convertLength; i++) {\n                halfFloatDataTextureBuffer[i] = _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_3__[\"MathUtil\"].toHalfFloat(floatDataTextureBuffer[i]);\n            }\n        }\n        if (this.__instanceDataTextureUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid) {\n            if (isHalfFloatMode) {\n                if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                    this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n                else {\n                    this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid, halfFloatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].HalfFloat\n                    });\n                }\n            }\n            else {\n                if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                    this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n                else {\n                    this.__webglResourceRepository.updateTexture(this.__instanceDataTextureUid, floatDataTextureBuffer, {\n                        level: 0, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                        format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float\n                    });\n                }\n            }\n            return;\n        }\n        if (isHalfFloatMode) {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                this.__instanceDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA16F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n            else {\n                this.__instanceDataTextureUid = this.__webglResourceRepository.createTexture(halfFloatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].HalfFloat, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n        }\n        else {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                this.__instanceDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA32F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n            else {\n                this.__instanceDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                    level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                    border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                    wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n                });\n            }\n        }\n    };\n    WebGLStrategyTransformFeedback.prototype.__setupGPUVertexData = function () {\n        if (this.__vertexDataTextureUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_15__[\"default\"].InvalidCGAPIResourceUid) {\n            return;\n        }\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_9__[\"BufferUse\"].GPUVertexData);\n        var floatDataTextureBuffer = new Float32Array(buffer.getArrayBuffer());\n        if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n            this.__vertexDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                level: 0, internalFormat: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].RGBA32F, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n            });\n        }\n        else {\n            this.__vertexDataTextureUid = this.__webglResourceRepository.createTexture(floatDataTextureBuffer, {\n                level: 0, internalFormat: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, width: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferWidthLength, height: _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bufferHeightLength,\n                border: 0, format: _foundation_definitions_PixelFormat__WEBPACK_IMPORTED_MODULE_4__[\"PixelFormat\"].RGBA, type: _foundation_definitions_ComponentType__WEBPACK_IMPORTED_MODULE_5__[\"ComponentType\"].Float, magFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest, minFilter: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Nearest,\n                wrapS: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, wrapT: _foundation_definitions_TextureParameter__WEBPACK_IMPORTED_MODULE_6__[\"TextureParameter\"].Repeat, generateMipmap: false, anisotropy: false\n            });\n        }\n    };\n    WebGLStrategyTransformFeedback.prototype.common_$prerender = function () {\n        this.__setupUBOPrimitiveHeaderData();\n        this.__setupGPUInstanceMetaData();\n        this.__setupGPUInstanceData();\n        this.__setupGPUVertexData();\n    };\n    ;\n    WebGLStrategyTransformFeedback.prototype.attachGPUData = function () {\n        {\n            var gl = this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext();\n            var dataTexture = this.__webglResourceRepository.getWebGLResource(this.__instanceDataTextureUid);\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, dataTexture);\n            var shaderProgram = this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);\n            var uniform_instanceDataTexture = gl.getUniformLocation(shaderProgram, 'u_instanceDataTexture');\n            gl.uniform1i(uniform_instanceDataTexture, 0);\n        }\n        {\n            var gl = this.__webglResourceRepository.currentWebGLContextWrapper.getRawContext();\n            var dataTexture = this.__webglResourceRepository.getWebGLResource(this.__vertexDataTextureUid);\n            gl.activeTexture(gl.TEXTURE1);\n            gl.bindTexture(gl.TEXTURE_2D, dataTexture);\n            var shaderProgram = this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);\n            var uniform_vertexDataTexture = gl.getUniformLocation(shaderProgram, 'u_vertexDataTexture');\n            gl.uniform1i(uniform_vertexDataTexture, 1);\n        }\n        this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid, 'indexCountsToSubtract', 0);\n        this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid, 'entityUids', 1);\n        this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid, 'primitiveUids', 2);\n        this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid, 'primitiveHeader', 3);\n    };\n    ;\n    WebGLStrategyTransformFeedback.prototype.attatchShaderProgram = function () {\n        var shaderProgramUid = this.__shaderProgramUid;\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(shaderProgramUid);\n        gl.useProgram(shaderProgram);\n    };\n    WebGLStrategyTransformFeedback.prototype.attachVertexData = function (i, primitive, glw, instanceIDBufferUid) {\n    };\n    WebGLStrategyTransformFeedback.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new WebGLStrategyTransformFeedback();\n        }\n        return this.__instance;\n    };\n    WebGLStrategyTransformFeedback.prototype.common_$render = function (viewMatrix, projectionMatrix) {\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        this.attatchShaderProgram();\n        var gl = glw.getRawContext();\n        gl.uniformMatrix4fv(this.__uniformLocation_viewMatrix, false, viewMatrix.v);\n        gl.uniformMatrix4fv(this.__uniformLocation_projectionMatrix, false, projectionMatrix.v);\n        return true;\n    };\n    return WebGLStrategyTransformFeedback;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLStrategyTransformFeedback);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLStrategyTransformFeedback.ts?");

/***/ }),

/***/ "./src/webgl/WebGLStrategyUBO.ts":
/*!***************************************!*\
  !*** ./src/webgl/WebGLStrategyUBO.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../foundation/core/MemoryManager */ \"./src/foundation/core/MemoryManager.ts\");\n/* harmony import */ var _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/math/MathUtil */ \"./src/foundation/math/MathUtil.ts\");\n/* harmony import */ var _foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/components/SceneGraphComponent */ \"./src/foundation/components/SceneGraphComponent.ts\");\n/* harmony import */ var _GLSLShader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GLSLShader */ \"./src/webgl/GLSLShader.ts\");\n/* harmony import */ var _foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../foundation/definitions/BufferUse */ \"./src/foundation/definitions/BufferUse.ts\");\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n\n\n\n\n\n\n\nvar WebGLStrategyUBO = /** @class */ (function () {\n    function WebGLStrategyUBO() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        this.__uboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\n        this.__shaderProgramUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid;\n        this.__vertexHandles = [];\n        this.__isVAOSet = false;\n        this.vertexShaderMethodDefinitions_UBO = \"layout (std140) uniform matrix {\\n    mat4 world[1024];\\n  } u_matrix;\\n\\n  uniform mat4 u_viewMatrix;\\n  uniform mat4 u_projectionMatrix;\\n  uniform mat3 u_normalMatrix;\\n\\n  mat4 getMatrix(float instanceId) {\\n    float index = instanceId;\\n    return transpose(u_matrix.world[int(index)]);\\n  }\\n\\n  mat4 getViewMatrix(float instanceId) {\\n    return u_viewMatrix;\\n  }\\n\\n  mat4 getProjectionMatrix(float instanceId) {\\n    return u_projectionMatrix;\\n  }\\n\\n  mat3 getNormalMatrix(float instanceId) {\\n    return u_normalMatrix;\\n  }\\n\\n  \";\n    }\n    WebGLStrategyUBO.prototype.setupShaderProgram = function () {\n        if (this.__shaderProgramUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid) {\n            return;\n        }\n        // Shader Setup\n        var glslShader = _GLSLShader__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getInstance();\n        var vertexShader = glslShader.vertexShaderVariableDefinitions +\n            this.vertexShaderMethodDefinitions_UBO +\n            glslShader.vertexShaderBody;\n        var fragmentShader = glslShader.fragmentShader;\n        this.__shaderProgramUid = this.__webglResourceRepository.createShaderProgram({\n            vertexShaderStr: vertexShader,\n            fragmentShaderStr: fragmentShader,\n            attributeNames: _GLSLShader__WEBPACK_IMPORTED_MODULE_4__[\"default\"].attributeNames,\n            attributeSemantics: _GLSLShader__WEBPACK_IMPORTED_MODULE_4__[\"default\"].attributeSemantics\n        });\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        this.__uniformLocation_viewMatrix = gl.getUniformLocation(shaderProgram, 'u_viewMatrix');\n        this.__uniformLocation_projectionMatrix = gl.getUniformLocation(shaderProgram, 'u_projectionMatrix');\n    };\n    WebGLStrategyUBO.prototype.__isLoaded = function (index) {\n        if (this.__vertexHandles[index] != null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    WebGLStrategyUBO.prototype.$load = function (meshComponent) {\n        if (this.__isLoaded(0)) {\n            return;\n        }\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            var vertexHandles = this.__webglResourceRepository.createVertexDataResources(primitive);\n            this.__vertexHandles[i] = vertexHandles;\n            WebGLStrategyUBO.__vertexHandleOfPrimitiveObjectUids.set(primitive.objectUid, vertexHandles);\n        }\n    };\n    WebGLStrategyUBO.prototype.$prerender = function (meshComponent, instanceIDBufferUid) {\n        if (this.__isVAOSet) {\n            return;\n        }\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            // if (this.__isLoaded(i) && this.__isVAOSet) {\n            this.__vertexHandles[i] = WebGLStrategyUBO.__vertexHandleOfPrimitiveObjectUids.get(primitive.objectUid);\n            //this.__vertexShaderProgramHandles[i] = MeshRendererComponent.__shaderProgramHandleOfPrimitiveObjectUids.get(primitive.objectUid)!;\n            //  continue;\n            // }\n            this.__webglResourceRepository.setVertexDataToPipeline(this.__vertexHandles[i], primitive, instanceIDBufferUid);\n        }\n        this.__isVAOSet = true;\n    };\n    WebGLStrategyUBO.prototype.common_$prerender = function () {\n        var isHalfFloatMode = false;\n        var memoryManager = _foundation_core_MemoryManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n        var buffer = memoryManager.getBuffer(_foundation_definitions_BufferUse__WEBPACK_IMPORTED_MODULE_5__[\"BufferUse\"].GPUInstanceData);\n        var floatDataTextureBuffer = new Float32Array(buffer.getArrayBuffer());\n        var halfFloatDataTextureBuffer;\n        if (isHalfFloatMode) {\n            if (this.__webglResourceRepository.currentWebGLContextWrapper.isWebGL2) {\n                halfFloatDataTextureBuffer = new Uint16Array(floatDataTextureBuffer.length);\n                var convertLength = buffer.byteSizeInUse / 4; //components\n                convertLength /= 2; // bytes\n                for (var i = 0; i < convertLength; i++) {\n                    halfFloatDataTextureBuffer[i] = _foundation_math_MathUtil__WEBPACK_IMPORTED_MODULE_2__[\"MathUtil\"].toHalfFloat(floatDataTextureBuffer[i]);\n                }\n            }\n            if (this.__uboUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid) {\n                this.__webglResourceRepository.updateUniformBuffer(this.__uboUid, halfFloatDataTextureBuffer);\n                return;\n            }\n            this.__uboUid = this.__webglResourceRepository.createUniformBuffer(halfFloatDataTextureBuffer);\n        }\n        else {\n            if (this.__uboUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_6__[\"default\"].InvalidCGAPIResourceUid) {\n                this.__webglResourceRepository.updateUniformBuffer(this.__uboUid, _foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAccessor('worldMatrix', _foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"]).dataViewOfBufferView);\n                return;\n            }\n            this.__uboUid = this.__webglResourceRepository.createUniformBuffer(_foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAccessor('worldMatrix', _foundation_components_SceneGraphComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"]).dataViewOfBufferView);\n        }\n        this.__webglResourceRepository.bindUniformBufferBase(0, this.__uboUid);\n    };\n    ;\n    WebGLStrategyUBO.prototype.attachGPUData = function () {\n        this.__webglResourceRepository.bindUniformBlock(this.__shaderProgramUid, 'matrix', 0);\n    };\n    ;\n    WebGLStrategyUBO.prototype.attatchShaderProgram = function () {\n        var shaderProgramUid = this.__shaderProgramUid;\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        var shaderProgram = this.__webglResourceRepository.getWebGLResource(shaderProgramUid);\n        gl.useProgram(shaderProgram);\n    };\n    WebGLStrategyUBO.prototype.attachVertexData = function (i, primitive, glw, instanceIDBufferUid) {\n        var vaoHandles = this.__vertexHandles[i];\n        var vao = this.__webglResourceRepository.getWebGLResource(vaoHandles.vaoHandle);\n        var gl = glw.getRawContext();\n        if (vao != null) {\n            glw.bindVertexArray(vao);\n        }\n        else {\n            this.__webglResourceRepository.setVertexDataToPipeline(vaoHandles, primitive, instanceIDBufferUid);\n            var ibo = this.__webglResourceRepository.getWebGLResource(vaoHandles.iboHandle);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        }\n    };\n    WebGLStrategyUBO.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new WebGLStrategyUBO();\n        }\n        return this.__instance;\n    };\n    WebGLStrategyUBO.prototype.common_$render = function (viewMatrix, projectionMatrix) {\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        this.attatchShaderProgram();\n        var gl = glw.getRawContext();\n        gl.uniformMatrix4fv(this.__uniformLocation_viewMatrix, false, viewMatrix.v);\n        gl.uniformMatrix4fv(this.__uniformLocation_projectionMatrix, false, projectionMatrix.v);\n        return true;\n    };\n    WebGLStrategyUBO.__vertexHandleOfPrimitiveObjectUids = new Map();\n    return WebGLStrategyUBO;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLStrategyUBO);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLStrategyUBO.ts?");

/***/ }),

/***/ "./src/webgl/WebGLStrategyUniform.ts":
/*!*******************************************!*\
  !*** ./src/webgl/WebGLStrategyUniform.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _GLSLShader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GLSLShader */ \"./src/webgl/GLSLShader.ts\");\n/* harmony import */ var _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../foundation/renderer/CGAPIResourceRepository */ \"./src/foundation/renderer/CGAPIResourceRepository.ts\");\n/* harmony import */ var _foundation_math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../foundation/math/RowMajarMatrix44 */ \"./src/foundation/math/RowMajarMatrix44.ts\");\n/* harmony import */ var _foundation_components_SkeletalComponent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../foundation/components/SkeletalComponent */ \"./src/foundation/components/SkeletalComponent.ts\");\n\n\n\n\n\nvar WebGLStrategyUniform = /** @class */ (function () {\n    function WebGLStrategyUniform() {\n        this.__webglResourceRepository = _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n        this.__uboUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_2__[\"default\"].InvalidCGAPIResourceUid;\n        this.__shaderProgramUid = _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_2__[\"default\"].InvalidCGAPIResourceUid;\n        this.__isVAOSet = false;\n        this.vertexShaderMethodDefinitions_uniform = \"\\n  uniform mat4 u_worldMatrix;\\n  uniform mat4 u_viewMatrix;\\n  uniform mat4 u_projectionMatrix;\\n  uniform mat3 u_normalMatrix;\\n\\n  mat4 getMatrix(float instanceId) {\\n    return u_worldMatrix;\\n  }\\n\\n  mat4 getViewMatrix(float instanceId) {\\n    return u_viewMatrix;\\n  }\\n\\n  mat4 getProjectionMatrix(float instanceId) {\\n    return u_projectionMatrix;\\n  }\\n\\n  mat3 getNormalMatrix(float instanceId) {\\n    return u_normalMatrix;\\n  }\\n\\n  \";\n    }\n    WebGLStrategyUniform.prototype.setupShaderProgram = function () {\n        if (this.__shaderProgramUid !== _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_2__[\"default\"].InvalidCGAPIResourceUid) {\n            return;\n        }\n        // Shader Setup\n        var glslShader = _GLSLShader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n        var vertexShader = glslShader.vertexShaderVariableDefinitions +\n            this.vertexShaderMethodDefinitions_uniform +\n            glslShader.vertexShaderBody;\n        var fragmentShader = glslShader.fragmentShader;\n        this.__shaderProgramUid = this.__webglResourceRepository.createShaderProgram({\n            vertexShaderStr: vertexShader,\n            fragmentShaderStr: fragmentShader,\n            attributeNames: _GLSLShader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].attributeNames,\n            attributeSemantics: _GLSLShader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].attributeSemantics\n        });\n        this.__shaderProgram = this.__webglResourceRepository.getWebGLResource(this.__shaderProgramUid);\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        this.__uniformLocation_worldMatrix = gl.getUniformLocation(this.__shaderProgram, 'u_worldMatrix');\n        this.__uniformLocation_material = gl.getUniformLocation(this.__shaderProgram, 'u_material.baseColor');\n        this.__uniformLocation_viewMatrix = gl.getUniformLocation(this.__shaderProgram, 'u_viewMatrix');\n        this.__uniformLocation_projectionMatrix = gl.getUniformLocation(this.__shaderProgram, 'u_projectionMatrix');\n        this.__uniformLocation_normalMatrix = gl.getUniformLocation(this.__shaderProgram, 'u_normalMatrix');\n        this.__uniformLocation_baseColorTexture = gl.getUniformLocation(this.__shaderProgram, 'u_material.baseColorTexture');\n        this.__uniformLocation_skinMatrices = gl.getUniformLocation(this.__shaderProgram, 'u_skinMatrices');\n    };\n    // private __isLoaded(index: Index) {\n    //   if (this.__vertexHandles[index] != null) {\n    //     return true;\n    //   } else {\n    //     return false\n    //   }\n    // }\n    WebGLStrategyUniform.prototype.$load = function (meshComponent) {\n        // if (this.__isLoaded(0)) {\n        //   return;\n        // }\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            var vertexHandles = this.__webglResourceRepository.createVertexDataResources(primitive);\n            //this.__vertexHandles[i] = vertexHandles;\n            WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids.set(primitive.primitiveUid, vertexHandles);\n            //      this.__webglResourceRepository.setVertexDataToPipeline(vertexHandles, primitive, void 0);\n        }\n    };\n    WebGLStrategyUniform.prototype.$prerender = function (meshComponent, instanceIDBufferUid) {\n        var vertexHandles = [];\n        var primitiveNum = meshComponent.getPrimitiveNumber();\n        for (var i = 0; i < primitiveNum; i++) {\n            var primitive = meshComponent.getPrimitiveAt(i);\n            vertexHandles[i] = WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids.get(primitive.primitiveUid);\n            if (!vertexHandles[i].setComplete) {\n                //continue;\n            }\n            this.__webglResourceRepository.setVertexDataToPipeline(vertexHandles[i], primitive, instanceIDBufferUid);\n            vertexHandles[i].setComplete = true;\n        }\n    };\n    WebGLStrategyUniform.prototype.common_$prerender = function () {\n    };\n    ;\n    WebGLStrategyUniform.prototype.attachGPUData = function () {\n    };\n    ;\n    WebGLStrategyUniform.prototype.attatchShaderProgram = function () {\n        var shaderProgramUid = this.__shaderProgramUid;\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        var gl = glw.getRawContext();\n        gl.useProgram(this.__shaderProgram);\n    };\n    WebGLStrategyUniform.prototype.attachVertexData = function (i, primitive, glw, instanceIDBufferUid) {\n        var vertexHandle = WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids.get(primitive.primitiveUid);\n        var vaoHandles = vertexHandle;\n        var vao = this.__webglResourceRepository.getWebGLResource(vaoHandles.vaoHandle);\n        var gl = glw.getRawContext();\n        if (vao != null) {\n            glw.bindVertexArray(vao);\n        }\n        else {\n            this.__webglResourceRepository.setVertexDataToPipeline(vaoHandles, primitive, instanceIDBufferUid);\n            var ibo = this.__webglResourceRepository.getWebGLResource(vaoHandles.iboHandle);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n        }\n    };\n    WebGLStrategyUniform.prototype.dettachVertexData = function (glw) {\n        var gl = glw.getRawContext();\n        if (glw.bindVertexArray) {\n            glw.bindVertexArray(null);\n        }\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    };\n    WebGLStrategyUniform.getInstance = function () {\n        if (!this.__instance) {\n            this.__instance = new WebGLStrategyUniform();\n        }\n        return this.__instance;\n    };\n    WebGLStrategyUniform.prototype.common_$render = function (viewMatrix, projectionMatrix) {\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        this.attatchShaderProgram();\n        var gl = glw.getRawContext();\n        gl.uniformMatrix4fv(this.__uniformLocation_viewMatrix, false, viewMatrix.v);\n        gl.uniformMatrix4fv(this.__uniformLocation_projectionMatrix, false, projectionMatrix.v);\n        return false;\n    };\n    WebGLStrategyUniform.prototype.$render = function (primitive_i, primitive, worldMatrix, normalMatrix, entity) {\n        var glw = this.__webglResourceRepository.currentWebGLContextWrapper;\n        this.attatchShaderProgram();\n        var gl = glw.getRawContext();\n        this.attachVertexData(primitive_i, primitive, glw, _foundation_renderer_CGAPIResourceRepository__WEBPACK_IMPORTED_MODULE_2__[\"default\"].InvalidCGAPIResourceUid);\n        gl.uniformMatrix4fv(this.__uniformLocation_worldMatrix, false, _foundation_math_RowMajarMatrix44__WEBPACK_IMPORTED_MODULE_3__[\"default\"].transpose(worldMatrix).v);\n        gl.uniformMatrix3fv(this.__uniformLocation_normalMatrix, false, normalMatrix.v);\n        var material = primitive.material;\n        var baseColor = [];\n        if (material) {\n            baseColor[0] = material.baseColor.r;\n            baseColor[1] = material.baseColor.g;\n            baseColor[2] = material.baseColor.b;\n            baseColor[3] = material.alpha;\n        }\n        else {\n            baseColor[0] = 1;\n            baseColor[1] = 1;\n            baseColor[2] = 1;\n            baseColor[3] = 1;\n        }\n        gl.uniform4fv(this.__uniformLocation_material, baseColor);\n        gl.uniform1i(this.__uniformLocation_baseColorTexture, 0);\n        var skeletalComponent = entity.getComponent(_foundation_components_SkeletalComponent__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n        if (skeletalComponent) {\n            var jointMatrices = skeletalComponent.jointMatrices;\n            gl.uniformMatrix4fv(this.__uniformLocation_skinMatrices, false, jointMatrices);\n        }\n        if (material && material.baseColorTexture) {\n            var texture = this.__webglResourceRepository.getWebGLResource(material.baseColorTexture.texture3DAPIResourseUid);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n        }\n        gl.drawElements(primitive.primitiveMode.index, primitive.indicesAccessor.elementCount, primitive.indicesAccessor.componentType.index, 0);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.useProgram(null);\n        this.dettachVertexData(glw);\n    };\n    //private __vertexHandles: Array<VertexHandles> = [];\n    WebGLStrategyUniform.__vertexHandleOfPrimitiveObjectUids = new Map();\n    return WebGLStrategyUniform;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGLStrategyUniform);\n\n\n//# sourceURL=webpack:///./src/webgl/WebGLStrategyUniform.ts?");

/***/ }),

/***/ "./src/webgl/getRenderingStrategy.ts":
/*!*******************************************!*\
  !*** ./src/webgl/getRenderingStrategy.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _foundation_definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../foundation/definitions/ProcessApproach */ \"./src/foundation/definitions/ProcessApproach.ts\");\n/* harmony import */ var _WebGLStrategyUBO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WebGLStrategyUBO */ \"./src/webgl/WebGLStrategyUBO.ts\");\n/* harmony import */ var _WebGLStrategyTransformFeedback__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WebGLStrategyTransformFeedback */ \"./src/webgl/WebGLStrategyTransformFeedback.ts\");\n/* harmony import */ var _WebGLStrategyDataTexture__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WebGLStrategyDataTexture */ \"./src/webgl/WebGLStrategyDataTexture.ts\");\n/* harmony import */ var _WebGLStrategyUniform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WebGLStrategyUniform */ \"./src/webgl/WebGLStrategyUniform.ts\");\n\n\n\n\n\nvar getRenderingStrategy = function (processApproach) {\n    // Strategy\n    if (processApproach.index === _foundation_definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_0__[\"ProcessApproach\"].UBOWebGL2.index) {\n        return _WebGLStrategyUBO__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n    }\n    else if (processApproach.index === _foundation_definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_0__[\"ProcessApproach\"].TransformFeedbackWebGL2.index) {\n        return _WebGLStrategyTransformFeedback__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n    }\n    else if (processApproach.index === _foundation_definitions_ProcessApproach__WEBPACK_IMPORTED_MODULE_0__[\"ProcessApproach\"].UniformWebGL1.index) {\n        return _WebGLStrategyUniform__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getInstance();\n    }\n    else {\n        return _WebGLStrategyDataTexture__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (getRenderingStrategy);\n\n\n//# sourceURL=webpack:///./src/webgl/getRenderingStrategy.ts?");

/***/ }),

/***/ "./src/webgl/main.ts":
/*!***************************!*\
  !*** ./src/webgl/main.ts ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _getRenderingStrategy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getRenderingStrategy */ \"./src/webgl/getRenderingStrategy.ts\");\n/* harmony import */ var _GLSLShader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GLSLShader */ \"./src/webgl/GLSLShader.ts\");\n/* harmony import */ var _WebGLContextWrapper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WebGLContextWrapper */ \"./src/webgl/WebGLContextWrapper.ts\");\n/* harmony import */ var _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WebGLResourceRepository */ \"./src/webgl/WebGLResourceRepository.ts\");\n/* harmony import */ var _WebGLStrategyDataTexture__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WebGLStrategyDataTexture */ \"./src/webgl/WebGLStrategyDataTexture.ts\");\n/* harmony import */ var _WebGLStrategyTransformFeedback__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WebGLStrategyTransformFeedback */ \"./src/webgl/WebGLStrategyTransformFeedback.ts\");\n/* harmony import */ var _WebGLStrategyUBO__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WebGLStrategyUBO */ \"./src/webgl/WebGLStrategyUBO.ts\");\n/* harmony import */ var _WebGLStrategyUniform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./WebGLStrategyUniform */ \"./src/webgl/WebGLStrategyUniform.ts\");\n\n\n\n\n\n\n\n\nvar WebGL = Object.freeze({\n    getRenderingStrategy: _getRenderingStrategy__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    GLSLShader: _GLSLShader__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    WebGLContextWrapper: _WebGLContextWrapper__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    WebGLResourceRepository: _WebGLResourceRepository__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    WebGLStrategyDataTexture: _WebGLStrategyDataTexture__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    WebGLStrategyTransformFeedback: _WebGLStrategyTransformFeedback__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    WebGLStrategyUBO: _WebGLStrategyUBO__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    WebGLStrategyUniform: _WebGLStrategyUniform__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebGL);\n\n\n//# sourceURL=webpack:///./src/webgl/main.ts?");

/***/ })

}]);
(0,eval)('this').Rn.WEBGL_VERSION='version: 0.1.1-74-g7911-mod branch: feature/refactor';
