import { Vector3 } from './Vector3';
import { Matrix44 } from './Matrix44';
import { MutableVector3 } from './MutableVector3';
import { Index } from '../../types/CommonTypes';
export declare class AABB {
    private __min;
    private __max;
    private __centerPoint;
    private __lengthCenterToCorner;
    private __isCenterPointDirty;
    private __isLengthCenterToCornerDirty;
    private static __tmpVector3;
    private __isVanilla;
    constructor();
    clone(): AABB;
    copyComponents(aabb: AABB): this;
    initialize(): void;
    set minPoint(val: Vector3);
    get minPoint(): Vector3;
    set maxPoint(val: Vector3);
    get maxPoint(): Vector3;
    isVanilla(): boolean;
    addPosition(positionVector: Vector3): Vector3;
    addPositionWithArray(array: number[], index: Index): number[];
    mergeAABB(aabb: AABB): boolean;
    get centerPoint(): MutableVector3;
    get lengthCenterToCorner(): number;
    get sizeX(): number;
    get sizeY(): number;
    get sizeZ(): number;
    static multiplyMatrix(matrix: Matrix44, aabb: AABB): AABB;
    static multiplyMatrixTo(matrix: Matrix44, aabb: AABB, outAabb: AABB): AABB;
    toString(): string;
    toStringApproximately(): string;
}
