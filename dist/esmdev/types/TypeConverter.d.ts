export declare function fromTensorToCompositionType(vec: any): {
    readonly __numberOfComponents: number;
    readonly __glslStr: string;
    readonly __hlslStr: string;
    readonly __webgpuStr: string;
    readonly __wgslStr: string;
    readonly __isArray: boolean;
    readonly __vec4SizeOfProperty: import("./CommonTypes").IndexOf16Bytes;
    readonly __dummyStr: "UNKNOWN";
    readonly webgpu: string;
    readonly wgsl: string;
    getNumberOfComponents(): import("./CommonTypes").Count;
    getGlslStr(componentType: import("..").ComponentTypeEnum): string;
    getGlslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    getWgslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    toWGSLType(componentType: import("..").ComponentTypeEnum): string;
    getVec4SizeOfProperty(): import("./CommonTypes").IndexOf16Bytes;
    readonly index: number;
    readonly symbol: symbol;
    readonly str: string;
    toString(): string;
    toJSON(): number;
} | {
    readonly __numberOfComponents: number;
    readonly __glslStr: string;
    readonly __hlslStr: string;
    readonly __webgpuStr: string;
    readonly __wgslStr: string;
    readonly __isArray: boolean;
    readonly __vec4SizeOfProperty: import("./CommonTypes").IndexOf16Bytes;
    readonly __dummyStr: "SCALAR";
    readonly webgpu: string;
    readonly wgsl: string;
    getNumberOfComponents(): import("./CommonTypes").Count;
    getGlslStr(componentType: import("..").ComponentTypeEnum): string;
    getGlslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    getWgslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    toWGSLType(componentType: import("..").ComponentTypeEnum): string;
    getVec4SizeOfProperty(): import("./CommonTypes").IndexOf16Bytes;
    readonly index: number;
    readonly symbol: symbol;
    readonly str: string;
    toString(): string;
    toJSON(): number;
} | {
    readonly __numberOfComponents: number;
    readonly __glslStr: string;
    readonly __hlslStr: string;
    readonly __webgpuStr: string;
    readonly __wgslStr: string;
    readonly __isArray: boolean;
    readonly __vec4SizeOfProperty: import("./CommonTypes").IndexOf16Bytes;
    readonly __dummyStr: "VEC2";
    readonly webgpu: string;
    readonly wgsl: string;
    getNumberOfComponents(): import("./CommonTypes").Count;
    getGlslStr(componentType: import("..").ComponentTypeEnum): string;
    getGlslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    getWgslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    toWGSLType(componentType: import("..").ComponentTypeEnum): string;
    getVec4SizeOfProperty(): import("./CommonTypes").IndexOf16Bytes;
    readonly index: number;
    readonly symbol: symbol;
    readonly str: string;
    toString(): string;
    toJSON(): number;
} | {
    readonly __numberOfComponents: number;
    readonly __glslStr: string;
    readonly __hlslStr: string;
    readonly __webgpuStr: string;
    readonly __wgslStr: string;
    readonly __isArray: boolean;
    readonly __vec4SizeOfProperty: import("./CommonTypes").IndexOf16Bytes;
    readonly __dummyStr: "VEC3";
    readonly webgpu: string;
    readonly wgsl: string;
    getNumberOfComponents(): import("./CommonTypes").Count;
    getGlslStr(componentType: import("..").ComponentTypeEnum): string;
    getGlslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    getWgslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    toWGSLType(componentType: import("..").ComponentTypeEnum): string;
    getVec4SizeOfProperty(): import("./CommonTypes").IndexOf16Bytes;
    readonly index: number;
    readonly symbol: symbol;
    readonly str: string;
    toString(): string;
    toJSON(): number;
} | {
    readonly __numberOfComponents: number;
    readonly __glslStr: string;
    readonly __hlslStr: string;
    readonly __webgpuStr: string;
    readonly __wgslStr: string;
    readonly __isArray: boolean;
    readonly __vec4SizeOfProperty: import("./CommonTypes").IndexOf16Bytes;
    readonly __dummyStr: "VEC4";
    readonly webgpu: string;
    readonly wgsl: string;
    getNumberOfComponents(): import("./CommonTypes").Count;
    getGlslStr(componentType: import("..").ComponentTypeEnum): string;
    getGlslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    getWgslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    toWGSLType(componentType: import("..").ComponentTypeEnum): string;
    getVec4SizeOfProperty(): import("./CommonTypes").IndexOf16Bytes;
    readonly index: number;
    readonly symbol: symbol;
    readonly str: string;
    toString(): string;
    toJSON(): number;
} | {
    readonly __numberOfComponents: number;
    readonly __glslStr: string;
    readonly __hlslStr: string;
    readonly __webgpuStr: string;
    readonly __wgslStr: string;
    readonly __isArray: boolean;
    readonly __vec4SizeOfProperty: import("./CommonTypes").IndexOf16Bytes;
    readonly __dummyStr: "MAT2";
    readonly webgpu: string;
    readonly wgsl: string;
    getNumberOfComponents(): import("./CommonTypes").Count;
    getGlslStr(componentType: import("..").ComponentTypeEnum): string;
    getGlslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    getWgslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    toWGSLType(componentType: import("..").ComponentTypeEnum): string;
    getVec4SizeOfProperty(): import("./CommonTypes").IndexOf16Bytes;
    readonly index: number;
    readonly symbol: symbol;
    readonly str: string;
    toString(): string;
    toJSON(): number;
} | {
    readonly __numberOfComponents: number;
    readonly __glslStr: string;
    readonly __hlslStr: string;
    readonly __webgpuStr: string;
    readonly __wgslStr: string;
    readonly __isArray: boolean;
    readonly __vec4SizeOfProperty: import("./CommonTypes").IndexOf16Bytes;
    readonly __dummyStr: "MAT3";
    readonly webgpu: string;
    readonly wgsl: string;
    getNumberOfComponents(): import("./CommonTypes").Count;
    getGlslStr(componentType: import("..").ComponentTypeEnum): string;
    getGlslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    getWgslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    toWGSLType(componentType: import("..").ComponentTypeEnum): string;
    getVec4SizeOfProperty(): import("./CommonTypes").IndexOf16Bytes;
    readonly index: number;
    readonly symbol: symbol;
    readonly str: string;
    toString(): string;
    toJSON(): number;
} | {
    readonly __numberOfComponents: number;
    readonly __glslStr: string;
    readonly __hlslStr: string;
    readonly __webgpuStr: string;
    readonly __wgslStr: string;
    readonly __isArray: boolean;
    readonly __vec4SizeOfProperty: import("./CommonTypes").IndexOf16Bytes;
    readonly __dummyStr: "MAT4";
    readonly webgpu: string;
    readonly wgsl: string;
    getNumberOfComponents(): import("./CommonTypes").Count;
    getGlslStr(componentType: import("..").ComponentTypeEnum): string;
    getGlslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    getWgslInitialValue(componentType: import("..").ComponentTypeEnum): string;
    toWGSLType(componentType: import("..").ComponentTypeEnum): string;
    getVec4SizeOfProperty(): import("./CommonTypes").IndexOf16Bytes;
    readonly index: number;
    readonly symbol: symbol;
    readonly str: string;
    toString(): string;
    toJSON(): number;
};
