import Component from '../core/Component';
import EntityRepository from '../core/EntityRepository';
import Vector3 from '../math/Vector3';
import Vector4 from '../math/Vector4';
import { CameraTypeEnum } from '../definitions/CameraType';
import Matrix44 from '../math/Matrix44';
import { WebGLStrategy } from '../../webgl/main';
import MutableMatrix44 from '../math/MutableMatrix44';
import Frustum from '../geometry/Frustum';
import { ComponentTID, ComponentSID, EntityUID } from '../../types/CommonTypes';
export default class CameraComponent extends Component {
    private readonly _eye;
    private _eyeInner;
    private _direction;
    private _directionInner;
    private _up;
    private _upInner;
    private _corner;
    private _cornerInner;
    private _parameters;
    private _parametersInner;
    private __type;
    private __sceneGraphComponent?;
    private _projectionMatrix;
    private _viewMatrix;
    private _tmp_f;
    private _tmp_s;
    private _tmp_u;
    static main: ComponentSID;
    private static invertedMatrix44;
    private static returnVector3;
    private __frustum;
    constructor(entityUid: EntityUID, componentSid: ComponentSID, entityRepository: EntityRepository);
    type: CameraTypeEnum;
    readonly eye: Vector3;
    eyeInner: Vector3;
    upInner: Vector3;
    up: Vector3;
    direction: Vector3;
    directionInner: Vector3;
    corner: Vector4;
    left: number;
    leftInner: number;
    right: number;
    rightInner: number;
    top: number;
    topInner: number;
    bottom: number;
    bottomInner: number;
    cornerInner: Vector4;
    parameters: Vector4;
    parametersInner: Vector4;
    zNear: number;
    zNearInner: number;
    zFar: number;
    zFarInner: number;
    fovy: number;
    fovyInner: number;
    aspect: number;
    xmag: number;
    ymag: number;
    static readonly componentTID: ComponentTID;
    $logic(): void;
    calcProjectionMatrix(): MutableMatrix44;
    readonly projectionMatrix: MutableMatrix44;
    calcViewMatrix(): MutableMatrix44;
    readonly viewMatrix: MutableMatrix44;
    readonly viewProjectionMatrix: Matrix44;
    $create({ strategy }: {
        strategy: WebGLStrategy;
    }): void;
    $prerender(): void;
    readonly worldPosition: Vector3;
    updateFrustum(): void;
    readonly frustum: Frustum;
}
